{"version":3,"sources":["./streams (ignored)","./extend-node (ignored)","fs (ignored)","path (ignored)","./src/js/controller/xpath/Instruccion/Selecting/DobleEje.js","./src/js/controller/xpath/Instruccion/Bloque.js","./src/js/analyzers/xpath_up.js","./src/environments/environment.ts","./src/js/controller/xpath/Instruccion/Selecting/Eje.js","./src/js/controller/xpath/Instruccion/Selecting/Axis/Funciones.js","./src/js/model/xml/Encoding/Encoding.js","./src/app/app.service.ts","./src/js/model/xml/Ambito/Global.js","./src/js/controller/xpath/Instruccion/Selecting/Predicate.js","./src/js/model/xml/Element.js","./src/js/model/xpath/Enum.js","./src/js/model/xml/Ambito/Ambito.js","./src/app/app.component.html","./src/app/app.component.ts","./src/js/controller/xpath/Expresion/Operators/Logica.js","./src/js/model/xml/Encoding/Enum.js","./src/js/model/xpath/Objeto.js","./src/app/app.module.ts","./src/js/analyzers/xml_down.js","./src/js/controller/xpath/Expresion/Expresion.js","./src/js/routes/compile.js","./src/js/model/xml/Ambito/Hijos.js","./src/js/routes/reports.js","./src/js/analyzers/xpath_down.js","./src/js/analyzers/xml_up.js","./src/js/controller/xpath/Instruccion/Selecting/Axis/Axis.js","./src/js/controller/xpath/Expresion/Operators/Aritmetica.js","./src/js/controller/xpath/Expresion/Operators/Relacional.js","./src/js/model/xml/Atributo.js","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACAa;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE,kBAAkB,mBAAO,CAAC,yBAAa;AACvC,6BAA6B,mBAAO,CAAC,yBAAa;AAClD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iCAAiC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;AC/Ka;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,uCAA2B;AAChD,iCAAiC,mBAAO,CAAC,kCAAsB;AAC/D,4BAA4B,mBAAO,CAAC,6BAAiB;AACrD,6BAA6B,mBAAO,CAAC,mCAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qCAAqC;AACrC,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,4BAA4B;AAC5B,2BAA2B;AAC3B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,q1BAAq1B;AACh2B,aAAa,yrBAAyrB;AACtsB;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,iCAAiC,aAAa,Y;AACtD;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,iB;AACA;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,kF;AACA;AACA;AACA,4E;AACA;AACA;AACA,e;AACA;AACA;AACA,2FAA2F,iB;AAC3F;AACA;AACA,qF;AACA;AACA;AACA,a;AACA;AACA;AACA,wH;AACA;AACA;AACA,mH;AACA;AACA;AACA,wH;AACA;AACA;AACA,mH;AACA;AACA;AACA,iH;AACA;AACA;AACA,kH;AACA;AACA;AACA,2H;AACA;AACA;AACA,qH;AACA;AACA;AACA,mH;AACA;AACA;AACA,uL;AACA;AACA;AACA;AACA;AACA;AACA,4G;AACA;AACA;AACA,6G;AACA;AACA;AACA,mH;AACA;AACA;AACA,uH;AACA;AACA;AACA,4F;AACA;AACA;AACA,gF;AACA;AACA;AACA,2F;AACA;AACA;AACA,2F;AACA;AACA;AACA,8F;AACA;AACA;AACA,+E;AACA;AACA;AACA,8E;AACA;AACA;AACA,iF;AACA;AACA;AACA,mG;AACA;AACA;AACA,mG;AACA;AACA;AACA,uG;AACA;AACA;AACA,mG;AACA;AACA;AACA,4F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,SAAS,uOAAuO,EAAE,MAAM,EAAE,kBAAkB,cAAc,4NAA4N,gBAAgB,4NAA4N,EAAE,4NAA4N,sCAAsC,mBAAmB,aAAa,mBAAmB,GAAG,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,oGAAoG,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,gOAAgO,oEAAoE,UAAU,GAAG,gPAAgP,gBAAgB,4NAA4N,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,0CAA0C,4NAA4N,GAAG,gPAAgP,EAAE,qGAAqG,EAAE,gPAAgP,EAAE,gPAAgP,sFAAsF,qGAAqG,gBAAgB,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,gBAAgB,qGAAqG,6BAA6B,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,qBAAqB,gBAAgB,qBAAqB,iEAAiE,oFAAoF,0BAA0B,6EAA6E,gBAAgB,mCAAmC,gBAAgB,mCAAmC;AACpwO,iBAAiB,2IAA2I;AAC5J;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA;AACA;AACA,mCAAmC,WAAW,MAAM;AACpD;AACA,iBAAiB,8BAA8B,wBAAwB;AACvE;AACA,kCAAkC,WAAW,MAAM;AACnD;AACA,sCAAsC,IAAI,EAAE,IAAI;AAChD;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,SAAS,KAAK;AACd;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,+BAA+B,IAAI,OAAO,IAAI;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK,mCAAmC;AACxC,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ,uBAAuB,WAAW;;AAElC;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kCAAkC;AACvC;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;AACA;AACA;;;AAGA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AAOA,QAAQ,SAAS,GAAG,mBAAO,CAAC,mCAAuB;AACnD,QAAQ,QAAQ,GAAG,mBAAO,CAAC,iCAAqB;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA,sBAAsB,uHAAuH,EAAE,kB;AAC/I;AACA;AACA,CAAC;AACD;AACA,aAAa,kBAAkB,uDAAuD,mBAAmB,uDAAuD,YAAY;AAC5K,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACnrCA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACftD;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE,kBAAkB,mBAAO,CAAC,yBAAa;AACvC,6BAA6B,mBAAO,CAAC,yBAAa;AAClD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD,iBAAiB;AACjB;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;ACnNa;AACb,aAAa,mBAAO,CAAC,6CAAiC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY;AACZ;AACA,kBAAkB;;;;;;;;;;;;;AC9DL;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACjCO,MAAM,UAAU;IAIrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,SAAI,GAAG,uBAAuB,CAAC;IAES,CAAC;IAEzC,OAAO,CAAC,KAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;;oEA1BU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACJP;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,8BAA8B,mBAAO,CAAC,qBAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACfa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E;AACA,qDAAqD;AACrD,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA,6CAA6C;AAC7C,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,yCAAyC;AACzC,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,oDAAoD;AACpD;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,gHAAgH;AAChH;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA,iBAAiB;AACjB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACvVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3Ja;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;;;;;;;;;;;ACnElC;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,8BAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ga;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;;;;;;;;;;;ACTlC;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AAEE;AAEJ;AACa;AAEwB;;AAqBzE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAPb;QACT,uDAAU;QACV;YACE,OAAO,EAAE,yEAAW;YACpB,QAAQ,EAAE,+CAA+C;SAC1D;KACF,YAZQ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,gFAAkB;SACnB;mIAUU,SAAS,mBAjBlB,2DAAY,aAGZ,uEAAa;QACb,0DAAW;QACX,qEAAgB;QAChB,gFAAkB;;;;;;;;;;;;ACnBtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;A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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D,wDAAwD;AACxD,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D,kEAAkE;AAClE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,sCAAsC;AACtC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;;AAGA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA,4CAA4C,MAAM,aAAa,KAAK,YAAY;AAChF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,0CAA0C;AAC1C;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,0CAA0C;AAC1C;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa,8BAA8B,6CAA6C;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA;AACA;AACA,mCAAmC,WAAW,MAAM;AACpD;AACA,iBAAiB,8BAA8B,wBAAwB;AACvE;AACA,kCAAkC,WAAW,MAAM;AACnD;AACA,sCAAsC,IAAI,EAAE,IAAI;AAChD;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,SAAS,KAAK;AACd;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,+BAA+B,IAAI,OAAO,IAAI;AAC9C;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,kDAAkD,MAAM;AACxD,qCAAqC;AACrC;AACA;AACA;AACA,iBAAiB;AACjB,kDAAkD,MAAM;AACxD;AACA;;;AAGA,aAAa,8BAA8B,6CAA6C;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA,QAAQ,WAAW,GAAG,mBAAO,CAAC,mCAAuB;AACrD,QAAQ,UAAU,GAAG,mBAAO,CAAC,kCAAsB;AACnD,QAAQ,WAAW,GAAG,mBAAO,CAAC,4CAAgC;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA,CAAC;AACD,qoBAAqoB,OAAO,qDAAqD,KAAK,MAAM,OAAO,OAAO;AAC1tB,aAAa,WAAW,iDAAiD,YAAY;AACrF,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACh3Da;AACb,aAAa,mBAAO,CAAC,uCAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,oCAAwB;AACzD;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,oCAAwB;AACzD;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,gCAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;AClEa;AACb;AACA,4CAA4C;AAC5C;AACA,+BAA+B,mBAAO,CAAC,oDAAwC;AAC/E,eAAe,mBAAO,CAAC,wCAA4B;AACnD,eAAe,mBAAO,CAAC,wCAA4B;AACnD,gBAAgB,mBAAO,CAAC,kCAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,iCAAqB;AAC1D,+BAA+B,mBAAO,CAAC,mCAAuB;AAC9D;AACA;AACA,6BAA6B,mBAAO,CAAC,iCAAqB;AAC1D,+BAA+B,mBAAO,CAAC,mCAAuB;AAC9D;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,yBAAyB,0GAA0G;AACnI;AACA;AACA;AACA;AACA;AACA,6BAA6B,wGAAwG;AACrI,wBAAwB;AACxB;AACA;AACA,oCAAoC;AACpC,2DAA2D;AAC3D,8DAA8D;AAC9D,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gHAAgH;AAC7I,wBAAwB;AACxB;AACA;AACA;AACA,sBAAsB;AACtB,wCAAwC;AACxC,0EAA0E;AAC1E;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kGAAkG;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;;ACrFL;AACb,eAAe,mBAAO,CAAC,sBAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;;;;;;;;;;;;;ACXL;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,iCAAqB;AAC1D,+BAA+B,mBAAO,CAAC,mCAAuB;AAC9D;AACA;AACA,6BAA6B,mBAAO,CAAC,mCAAuB;AAC5D,+BAA+B,mBAAO,CAAC,qCAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,qBAAqB,kGAAkG;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wGAAwG;AACjI,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wGAAwG;AACjI,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,yBAAyB,wGAAwG;AACjI,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;ACzGlB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,83BAA83B;AACz4B,aAAa,0rBAA0rB;AACvsB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uCAAuC;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,8CAA8C;;AAEpE;AACA;;AAEA;AACA;AACA,sBAAsB,+FAA+F;;AAErH;AACA;AACA,qBAAqB,+BAA+B,E;AACpD;AACA;;AAEA;AACA;AACA,sBAAsB,0CAA0C;;AAEhE;AACA;;AAEA;AACA;AACA,sBAAsB,2CAA2C;;AAEjE;AACA;AACA,qBAAqB,6BAA6B,E;AAClD;AACA;AACA;AACA;AACA,6BAA6B,2EAA2E,E;AACxG;AACA;AACA;AACA;AACA,2BAA2B,yEAAyE,E;AACpG;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B,E;AACtD;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B,E;AAClD;AACA;;AAEA;AACA;AACA,uBAAuB,uJAAuJ,E;;AAE9K;AACA;;AAEA;AACA;AACA,8BAA8B,yJAAyJ,E;;AAEvL;AACA;AACA,qBAAqB,gCAAgC,E;AACrD;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA,qBAAqB,+BAA+B,E;AACpD;AACA;AACA;AACA;AACA;AACA,6BAA6B,yFAAyF,E;AACtH;AACA;AACA;AACA;AACA;AACA,2BAA2B,+EAA+E,E;AAC1G;AACA;AACA;AACA;AACA;AACA,4BAA4B,yFAAyF,E;AACrH;AACA;AACA;AACA;AACA;AACA,2BAA2B,+EAA+E,E;AAC1G;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAA2E,E;AACtG;AACA;AACA;AACA;AACA;AACA,4BAA4B,+EAA+E,E;AAC3G;AACA;AACA;AACA;AACA;AACA,6BAA6B,uFAAuF,E;AACpH;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAA2E,E;AACtG;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAA2E,E;AACtG;AACA;AACA,0H;AACA;AACA,8BAA8B,qEAAqE;AACnG;AACA;AACA;AACA;AACA,4BAA4B,iHAAiH,E;AAC7I;AACA;AACA;AACA;AACA;AACA,0BAA0B,yEAAyE,E;AACnG;AACA;AACA;AACA;AACA;AACA,2BAA2B,2EAA2E,E;AACtG;AACA;AACA,qH;AACA;AACA;AACA,0BAA0B,+EAA+E,E;AACzG;AACA;AACA,yH;AACA;AACA;AACA,0BAA0B,qFAAqF,E;AAC/G;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,E;AAChD;AACA;AACA;AACA;AACA;AACA,0BAA0B,4CAA4C,E;AACtE;AACA;AACA,8F;AACA;AACA;AACA,4BAA4B,iDAAiD,E;AAC7E;AACA;AACA;AACA,2BAA2B,4DAA4D,E;AACvF;AACA;AACA;AACA,6BAA6B,4EAA4E,E;AACzG;AACA;AACA,6F;AACA,6BAA6B,4EAA4E,E;AACzG;AACA;AACA;AACA,wBAAwB,sDAAsD,E;AAC9E;AACA;AACA;AACA,2BAA2B,wEAAwE,E;AACnG;AACA;AACA,iF;AACA,0BAA0B,gEAAgE,E;AAC1F;AACA;AACA;AACA,4BAA4B,oEAAoE,E;AAChG;AACA;AACA;AACA,2BAA2B,8GAA8G,E;AACzI;AACA;AACA,mF;AACA,4BAA4B,4HAA4H;AACxJ;AACA;AACA;AACA,4BAA4B,yJAAyJ,E;AACrL;AACA;AACA;AACA,4BAA4B,yJAAyJ,E;AACrL;AACA;AACA,yG;AACA,6BAA6B,iKAAiK;AAC9L;AACA;AACA,qG;AACA,4BAA4B,yJAAyJ;AACrL;AACA;AACA;AACA;AACA;AACA,4BAA4B,gGAAgG,E;AAC5H;AACA;AACA;AACA,0BAA0B,qEAAqE,E;AAC/F;AACA;AACA;AACA,0BAA0B,uEAAuE,E;AACjG;AACA;AACA;AACA,0BAA0B,uEAAuE,E;AACjG;AACA;AACA;AACA,0BAA0B,+DAA+D,E;AACzF;AACA;AACA;AACA,0BAA0B,yEAAyE,E;AACnG;AACA;AACA;AACA,0BAA0B,2EAA2E,E;AACrG;AACA;AACA;AACA,0BAA0B,uEAAuE,E;AACjG;AACA;AACA;AACA,0BAA0B,yEAAyE,E;AACnG;AACA;AACA;AACA,0BAA0B,uEAAuE,E;AACjG;AACA;AACA;AACA,0BAA0B,iEAAiE,E;AAC3F;AACA;AACA;AACA,0BAA0B,uEAAuE,E;AACjG;AACA;AACA;AACA,0BAA0B,yEAAyE,E;AACnG;AACA;AACA;AACA,0BAA0B,6DAA6D,E;AACvF;AACA;AACA,CAAC;AACD,SAAS,wOAAwO,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,YAAY,mOAAmO,GAAG,6NAA6N,EAAE,6NAA6N,wCAAwC,mBAAmB,aAAa,mBAAmB,GAAG,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,oGAAoG,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,iOAAiO,yBAAyB,mOAAmO,yDAAyD,iPAAiP,gBAAgB,6NAA6N,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,8BAA8B,iBAAiB,eAAe,qGAAqG,EAAE,iPAAiP,EAAE,iPAAiP,sFAAsF,QAAQ,YAAY,aAAa,GAAG,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,EAAE,iPAAiP,gBAAgB,qGAAqG,gBAAgB,iPAAiP,eAAe,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,qBAAqB,gBAAgB,qBAAqB,iEAAiE,oFAAoF,0BAA0B,6EAA6E,gBAAgB,mCAAmC,gBAAgB,mCAAmC,iBAAiB,sGAAsG,YAAY,cAAc;AACj4O,iBAAiB,6JAA6J;AAC9K;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA;AACA;AACA,mCAAmC,WAAW,MAAM;AACpD;AACA,iBAAiB,8BAA8B,wBAAwB;AACvE;AACA,kCAAkC,WAAW,MAAM;AACnD;AACA,sCAAsC,IAAI,EAAE,IAAI;AAChD;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,SAAS,KAAK;AACd;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,+BAA+B,IAAI,OAAO,IAAI;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK,mCAAmC;AACxC,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ,uBAAuB,WAAW;;AAElC;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kCAAkC;AACvC;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;AACA;;AAEA,SAAS;AACT;AACA;AACA;;;AAGA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;AAKA,QAAQ,SAAS,GAAG,mBAAO,CAAC,mCAAuB;AACnD,QAAQ,QAAQ,GAAG,mBAAO,CAAC,iCAAqB;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA;AACA;AACA,sBAAsB,uHAAuH,EAAE,kB;AAC/I;AACA;AACA,CAAC;AACD;AACA,aAAa,kBAAkB,uDAAuD,mBAAmB,uDAAuD,YAAY;AAC5K,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,sDAAsD;AACnF;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;ACx0CA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0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AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D,wDAAwD;AACxD,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D,kEAAkE;AAClE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,sCAAsC;AACtC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;;AAGA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA,4CAA4C,MAAM,aAAa,KAAK,YAAY;AAChF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,0CAA0C;AAC1C;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,0CAA0C;AAC1C;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa,8BAA8B,6CAA6C;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA;AACA,SAAS,KAAK;AACd;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA;AACA;AACA,mCAAmC,WAAW,MAAM;AACpD;AACA,iBAAiB,8BAA8B,wBAAwB;AACvE;AACA,kCAAkC,WAAW,MAAM;AACnD;AACA,sCAAsC,IAAI,EAAE,IAAI;AAChD;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,SAAS,KAAK;AACd;AACA,0BAA0B,WAAW,MAAM;AAC3C;AACA,+BAA+B,IAAI,OAAO,IAAI;AAC9C;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,kDAAkD,MAAM;AACxD,qCAAqC;AACrC;AACA;AACA;AACA,iBAAiB;AACjB,kDAAkD,MAAM;AACxD;AACA;;;AAGA,aAAa,8BAA8B,6CAA6C;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,kCAAkC;AAC3C;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA,QAAQ,WAAW,GAAG,mBAAO,CAAC,mCAAuB;AACrD,QAAQ,UAAU,GAAG,mBAAO,CAAC,kCAAsB;AACnD,QAAQ,WAAW,GAAG,mBAAO,CAAC,4CAAgC;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA,CAAC;AACD,qoBAAqoB,OAAO,qDAAqD,KAAK,MAAM,OAAO,OAAO;AAC1tB,aAAa,WAAW,iDAAiD,YAAY;AACrF,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACp3Da;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,6CAAiC;AACtD,kCAAkC,mBAAO,CAAC,0CAA8B;AACxE,kCAAkC,mBAAO,CAAC,yBAAa;AACvD,kBAAkB,mBAAO,CAAC,0BAAc;AACxC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,qBAAqB;AACrB;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,YAAY;AACZ;AACA,kBAAkB;;;;;;;;;;;;;ACxML;AACb,aAAa,mBAAO,CAAC,0CAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Fa;AACb,aAAa,mBAAO,CAAC,0CAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO,uBAAuB;AAClD;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;;;;;;;;;;;;;ACtOa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACtB+C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Axis_1 = __importDefault(require(\"./Axis/Axis\"));\nfunction DobleEje(_instruccion, _ambito, _contexto) {\n    var _404 = { notFound: \"No se encontraron elementos.\" };\n    var contexto = (_contexto.elementos) ? (_contexto) : null;\n    var expresion;\n    if (_instruccion.expresion.expresion)\n        expresion = Expresion_1.default(_instruccion.expresion.expresion, _ambito, contexto);\n    else\n        expresion = Expresion_1.default(_instruccion.expresion, _ambito, contexto);\n    if (expresion.error)\n        return expresion;\n    var predicate = _instruccion.expresion.predicate;\n    var root;\n    if (expresion.tipo === Enum_1.Tipos.ELEMENTOS) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n        root = getAllSymbolFromCurrent({ id: expresion.valor, tipo: \"@\" }, contexto, _ambito, predicate);\n        if (root.atributos.error)\n            return root.atributos;\n        if (root.atributos.length === 0)\n            return _404;\n        return root;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ASTERISCO) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_NODE) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        if (root.nodos.error)\n            return root.nodos;\n        if (root.nodos.length === 0)\n            return _404;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        if (root.texto.error)\n            return root.texto;\n        if (root.texto.length === 0)\n            return _404;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.SELECT_AXIS) {\n        root = Axis_1.default.GetAxis(expresion.axisname, expresion.nodetest, expresion.predicate, contexto, _ambito, true);\n        if (root.error)\n            return root;\n        return root;\n    }\n    else {\n        return { error: \"Expresión no válida.\", tipo: \"Semántico\", origen: \"Query\", linea: _instruccion.linea, columna: _instruccion.columna };\n    }\n    if (root === null || root.error || root.elementos.error || root.elementos.length === 0)\n        return _404;\n    return root;\n}\nfunction getAllSymbolFromCurrent(_nodename, _contexto, _ambito, _condicion) {\n    if (_contexto)\n        return getFromCurrent(_nodename, _contexto, _ambito, _condicion);\n    else\n        return { error: \"Indstrucción no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: 1, columna: 1 };\n}\nfunction getFromCurrent(_id, _contexto, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    var nodes = Array();\n    // Selecciona únicamente el texto contenido en el nodo y todos sus descendientes\n    if (_id === \"text()\") {\n        var text = Array();\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            text = _ambito.searchAnyText(element, text);\n            elements.push(element);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            text = filter.filterElements(text);\n            elements = filter.contexto;\n        }\n        return { texto: text, elementos: elements, cadena: Enum_1.Tipos.TEXTOS };\n    }\n    // Selecciona todos los descencientes (elementos y/o texto)\n    else if (_id === \"node()\") {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    nodes = _ambito.nodesFunction(child, nodes);\n                });\n            }\n            else if (element.value)\n                nodes.push({ textos: element.value });\n            elements.push(element);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes = filter.filterElements(nodes);\n            elements = filter.contexto;\n        }\n        return { cadena: Enum_1.Tipos.COMBINADO, nodos: nodes, elementos: _contexto.elementos };\n    }\n    // Selecciona todos los atributos a partir del contexto\n    else if (_id.tipo === \"@\") {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            attributes = _ambito.searchAnyAttributes(_id.id, element, attributes);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            attributes = filter.filterAttributes(attributes);\n        }\n        return { atributos: attributes, elementos: [], cadena: Enum_1.Tipos.ATRIBUTOS };\n    }\n    // Selecciona el padre\n    else if (_id === \"..\") {\n        if (_contexto.atributos) {\n            var _loop_1 = function (i) {\n                var attribute = _contexto.atributos[i];\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    elements = _ambito.searchDadFromAttribute(elm, attribute, elements);\n                });\n            };\n            for (var i = 0; i < _contexto.atributos.length; i++) {\n                _loop_1(i);\n            }\n            if (_condicion) {\n                var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n                elements = filter.filterElements(elements);\n            }\n            return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n        }\n        var _loop_2 = function (i) {\n            var element = _contexto.elementos[i];\n            var dad = element.father;\n            if (dad) {\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    if (elm.id_open === dad.id && elm.line == dad.line && elm.column == dad.column)\n                        elements.push(elm);\n                    if (elm.childs)\n                        elm.childs.forEach(function (child) {\n                            elements = _ambito.searchDad(child, dad.id, dad.line, dad.column, elements);\n                        });\n                });\n            }\n        };\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            _loop_2(i);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n    // Selecciona todos los descendientes con el id o en el caso que sea //*\n    else {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.childs)\n                element.childs.forEach(function (child) {\n                    elements = _ambito.searchNodes(_id, child, elements);\n                });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n}\nmodule.exports = DobleEje;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../model/xpath/Enum\");\nvar DobleEje_1 = __importDefault(require(\"./Selecting/DobleEje\"));\nvar Eje_1 = __importDefault(require(\"./Selecting/Eje\"));\nvar Axis_1 = __importDefault(require(\"./Selecting/Axis/Axis\"));\nvar reset;\nvar output = [];\nfunction Bloque(_instruccion, _ambito, _retorno) {\n    var tmp;\n    reset = _retorno;\n    for (var i = 0; i < _instruccion.length; i++) {\n        var camino = _instruccion[i]; // En caso de tener varios caminos\n        for (var j = 0; j < camino.length; j++) {\n            var instr = camino[j];\n            if (instr.tipo === Enum_1.Tipos.SELECT_FROM_ROOT) {\n                tmp = Eje_1.default(instr, _ambito, _retorno);\n                if (tmp.notFound) {\n                    _retorno = reset;\n                    break;\n                }\n                if (tmp.error)\n                    return tmp;\n                _retorno = tmp;\n            }\n            else if (instr.tipo === Enum_1.Tipos.SELECT_FROM_CURRENT) {\n                tmp = DobleEje_1.default(instr, _ambito, _retorno);\n                if (tmp.notFound) {\n                    _retorno = reset;\n                    break;\n                }\n                if (tmp.error)\n                    return tmp;\n                _retorno = tmp;\n            }\n            else if (instr.tipo === Enum_1.Tipos.SELECT_AXIS) {\n                tmp = Axis_1.default.SA(instr, _ambito, _retorno);\n                if (tmp.notFound) {\n                    _retorno = reset;\n                    break;\n                }\n                if (tmp.error)\n                    return tmp;\n                _retorno = tmp;\n            }\n            else {\n                return { error: \"Error: Instrucción no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: instr.linea, columna: instr.columna };\n            }\n        }\n        output.push(_retorno);\n        _retorno = reset;\n    }\n    return writeOutput();\n}\nfunction writeOutput() {\n    var cadena = \"\";\n    for (var i = 0; i < output.length; i++) {\n        var path = output[i];\n        if (path.cadena === Enum_1.Tipos.TEXTOS) {\n            var root = (path.texto) ? (path.texto) : (path.elementos);\n            root.forEach(function (txt) {\n                cadena += concatText(txt);\n            });\n        }\n        else if (path.cadena === Enum_1.Tipos.ELEMENTOS) {\n            var root = path.elementos;\n            root.forEach(function (element) {\n                cadena += concatChilds(element, \"\");\n            });\n        }\n        else if (path.cadena === Enum_1.Tipos.ATRIBUTOS) {\n            if (path.atributos) {\n                var root = path.atributos; // <-- muestra sólo el atributo\n                root.forEach(function (attr) {\n                    cadena += concatAttributes(attr);\n                });\n            }\n            else {\n                var root = path.elementos; // <-- muestra toda la etiqueta\n                root.forEach(function (element) {\n                    cadena += extractAttributes(element, \"\");\n                });\n            }\n        }\n        else if (path.cadena === Enum_1.Tipos.COMBINADO) {\n            var root = path.nodos;\n            root.forEach(function (elemento) {\n                if (elemento.elementos) {\n                    cadena += concatChilds(elemento.elementos, \"\");\n                }\n                else if (elemento.textos) {\n                    cadena += concatText(elemento.textos);\n                }\n            });\n        }\n    }\n    output = [];\n    if (cadena)\n        return replaceEntity(cadena.substring(1));\n    return \"No se encontraron elementos.\";\n}\nfunction replaceEntity(cadena) {\n    var _lessThan = /&lt;/gi;\n    var _greaterThan = /&gt;/gi;\n    var _ampersand = /&amp;/gi;\n    var _apostrophe = /&apos;/gi;\n    var _quotation = /&quot;/gi;\n    var salida = cadena.replace(_lessThan, \"<\").replace(_greaterThan, \">\").replace(_ampersand, \"&\").replace(_apostrophe, \"\\'\").replace(_quotation, \"\\\"\");\n    return salida;\n}\nfunction concatChilds(_element, cadena) {\n    cadena = (\"\\n<\" + _element.id_open);\n    if (_element.attributes) {\n        _element.attributes.forEach(function (attribute) {\n            cadena += (\" \" + attribute.id + \"=\\\"\" + attribute.value + \"\\\"\");\n        });\n    }\n    if (_element.childs) {\n        cadena += \">\";\n        _element.childs.forEach(function (child) {\n            cadena += concatChilds(child, cadena);\n        });\n        cadena += (\"\\n</\" + _element.id_close + \">\");\n    }\n    else {\n        if (_element.id_close === null)\n            cadena += \"/>\";\n        else {\n            cadena += \">\";\n            cadena += (_element.value + \"</\" + _element.id_close + \">\");\n        }\n    }\n    return cadena;\n}\nfunction concatAttributes(_attribute) {\n    return \"\\n\" + _attribute.id + \"=\\\"\" + _attribute.value + \"\\\"\";\n}\nfunction extractAttributes(_element, cadena) {\n    if (_element.attributes) {\n        _element.attributes.forEach(function (attribute) {\n            cadena += \"\\n\" + attribute.id + \"=\\\"\" + attribute.value + \"\\\"\";\n        });\n    }\n    return cadena;\n}\nfunction concatText(_text) {\n    return \"\\n\" + _text;\n}\nmodule.exports = Bloque;\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xpath_up = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,20],$V3=[1,16],$V4=[1,17],$V5=[1,18],$V6=[1,19],$V7=[1,21],$V8=[1,22],$V9=[1,23],$Va=[1,12],$Vb=[1,13],$Vc=[1,14],$Vd=[1,15],$Ve=[1,24],$Vf=[1,25],$Vg=[1,26],$Vh=[1,27],$Vi=[1,28],$Vj=[1,29],$Vk=[1,30],$Vl=[1,31],$Vm=[1,32],$Vn=[1,33],$Vo=[1,34],$Vp=[1,35],$Vq=[1,36],$Vr=[5,6],$Vs=[5,6,9,10,24,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vt=[5,6,9,10,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vu=[2,13],$Vv=[1,44],$Vw=[5,6,9,10,14,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vx=[1,56],$Vy=[1,57],$Vz=[1,66],$VA=[1,67],$VB=[1,68],$VC=[1,69],$VD=[1,70],$VE=[1,71],$VF=[1,72],$VG=[1,73],$VH=[1,74],$VI=[1,75],$VJ=[1,76],$VK=[1,77],$VL=[1,78],$VM=[16,18,19,20,21,22,23,24,25,26,28,29,30,31,32],$VN=[16,18,19,20,21,28,29,30,31,32],$VO=[16,18,19,20,21,22,23,28,29,30,31,32];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"XPATH_U\":4,\"EOF\":5,\"tk_line\":6,\"XPATH\":7,\"QUERY\":8,\"tk_2bar\":9,\"tk_bar\":10,\"EXP_PR\":11,\"AXIS\":12,\"CORCHET\":13,\"tk_corA\":14,\"E\":15,\"tk_corC\":16,\"CORCHETP\":17,\"tk_menorigual\":18,\"tk_menor\":19,\"tk_mayorigual\":20,\"tk_mayor\":21,\"tk_mas\":22,\"tk_menos\":23,\"tk_asterisco\":24,\"tk_div\":25,\"tk_mod\":26,\"tk_ParA\":27,\"tk_ParC\":28,\"tk_or\":29,\"tk_and\":30,\"tk_equal\":31,\"tk_diferent\":32,\"FUNC\":33,\"PRIMITIVO\":34,\"tk_id\":35,\"tk_attribute_d\":36,\"tk_attribute_s\":37,\"num\":38,\"tk_punto\":39,\"tk_2puntos\":40,\"tk_arroba\":41,\"tk_text\":42,\"tk_last\":43,\"tk_position\":44,\"tk_node\":45,\"AXISNAME\":46,\"tk_4puntos\":47,\"tk_ancestor\":48,\"tk_ancestor2\":49,\"tk_attribute\":50,\"tk_child\":51,\"tk_descendant\":52,\"tk_descendant2\":53,\"tk_following\":54,\"tk_following2\":55,\"tk_namespace\":56,\"tk_parent\":57,\"tk_preceding\":58,\"tk_preceding2\":59,\"tk_self\":60,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"tk_line\",9:\"tk_2bar\",10:\"tk_bar\",14:\"tk_corA\",16:\"tk_corC\",18:\"tk_menorigual\",19:\"tk_menor\",20:\"tk_mayorigual\",21:\"tk_mayor\",22:\"tk_mas\",23:\"tk_menos\",24:\"tk_asterisco\",25:\"tk_div\",26:\"tk_mod\",27:\"tk_ParA\",28:\"tk_ParC\",29:\"tk_or\",30:\"tk_and\",31:\"tk_equal\",32:\"tk_diferent\",35:\"tk_id\",36:\"tk_attribute_d\",37:\"tk_attribute_s\",38:\"num\",39:\"tk_punto\",40:\"tk_2puntos\",41:\"tk_arroba\",42:\"tk_text\",43:\"tk_last\",44:\"tk_position\",45:\"tk_node\",47:\"tk_4puntos\",48:\"tk_ancestor\",49:\"tk_ancestor2\",50:\"tk_attribute\",51:\"tk_child\",52:\"tk_descendant\",53:\"tk_descendant2\",54:\"tk_following\",55:\"tk_following2\",56:\"tk_namespace\",57:\"tk_parent\",58:\"tk_preceding\",59:\"tk_preceding2\",60:\"tk_self\"},\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,1],[8,2],[8,2],[8,1],[8,1],[13,4],[13,3],[17,1],[17,0],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,2],[15,3],[15,3],[15,3],[15,3],[15,3],[15,1],[11,2],[11,2],[34,1],[34,1],[34,1],[34,1],[34,1],[34,1],[34,1],[34,2],[34,2],[33,3],[33,3],[33,3],[33,3],[12,3],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n ast = { ast: $$[$0-1], errors: errors }; errors = []; return ast; \nbreak;\ncase 2:\n $$[$0-2].push($$[$0]); this.$=$$[$0-2]; \nbreak;\ncase 3: case 5:\n this.$=[$$[$0]]; \nbreak;\ncase 4:\n $$[$0-1].push($$[$0]); this.$=$$[$0-1]; \nbreak;\ncase 6:\n this.$=builder.newDoubleAxis($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 7:\n this.$=builder.newAxis($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 8: case 9: case 12: case 29:\n this.$=$$[$0]; \nbreak;\ncase 10:\n $$[$0-3].push(builder.newPredicate($$[$0-1], this._$.first_line, this._$.first_column+1)); this.$=$$[$0-3]; \nbreak;\ncase 11:\n this.$=[builder.newPredicate($$[$0-1], this._$.first_line, this._$.first_column+1)]; \nbreak;\ncase 13:\n this.$=null; \nbreak;\ncase 14:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENORIGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 15:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENOR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 16:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYORIGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 17:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYOR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 18:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_SUMA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 19:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_RESTA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 20:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MULTIPLICACION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 21:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_DIVISION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 22:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MODULO, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 23:\n this.$=builder.newOperation(builder.newValue(0, Tipos.NUMBER, this._$.first_line, this._$.first_column+1), $$[$0], Tipos.OPERACION_RESTA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 24:\n this.$=$$[$0-1] \nbreak;\ncase 25:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_OR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 26:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_AND, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 27:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_IGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 28:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_DIFERENTE, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 30: case 31:\n this.$=builder.newExpression($$[$0-1], $$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 32:\n this.$=builder.newNodename($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 33: case 34:\n this.$=builder.newValue($$[$0], Tipos.STRING, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 35:\n this.$=builder.newValue($$[$0], Tipos.NUMBER, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 36:\n this.$=builder.newValue($$[$0], Tipos.ASTERISCO, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 37:\n this.$=builder.newCurrent($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 38:\n this.$=builder.newParent($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 39: case 40:\n this.$=builder.newAttribute($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 41:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_TEXT, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 42:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_LAST, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 43:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_POSITION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 44:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_NODE, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 45:\n this.$=builder.newAxisObject($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 46:\n this.$ = Tipos.AXIS_ANCESTOR \nbreak;\ncase 47:\n this.$ = Tipos.AXIS_ANCESTOR_OR_SELF \nbreak;\ncase 48:\n this.$ = Tipos.AXIS_ATTRIBUTE \nbreak;\ncase 49:\n this.$ = Tipos.AXIS_CHILD \nbreak;\ncase 50:\n this.$ = Tipos.AXIS_DESCENDANT \nbreak;\ncase 51:\n this.$ = Tipos.AXIS_DESCENDANT_OR_SELF \nbreak;\ncase 52:\n this.$ = Tipos.AXIS_FOLLOWING \nbreak;\ncase 53:\n this.$ = Tipos.AXIS_FOLLOWING_SIBLING \nbreak;\ncase 54:\n this.$ = Tipos.AXIS_NAMESPACE \nbreak;\ncase 55:\n this.$ = Tipos.AXIS_PARENT \nbreak;\ncase 56:\n this.$ = Tipos.AXIS_PRECEDING \nbreak;\ncase 57:\n this.$ = Tipos.AXIS_PRECEDING_SIBLING \nbreak;\ncase 58:\n this.$ = Tipos.AXIS_SELF \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,8:4,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{1:[3]},{5:[1,37],6:[1,38]},o($Vr,[2,3],{11:7,12:8,33:9,34:10,46:11,8:39,9:$V0,10:$V1,24:$V2,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq}),o($Vs,[2,5]),{8:40,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:41,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vt,[2,8]),o($Vt,[2,9]),o($Vt,$Vu,{17:42,13:43,14:$Vv}),o($Vt,$Vu,{13:43,17:45,14:$Vv}),{47:[1,46]},{27:[1,47]},{27:[1,48]},{27:[1,49]},{27:[1,50]},o($Vw,[2,32]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),{24:[1,52],35:[1,51]},{47:[2,46]},{47:[2,47]},{47:[2,48]},{47:[2,49]},{47:[2,50]},{47:[2,51]},{47:[2,52]},{47:[2,53]},{47:[2,54]},{47:[2,55]},{47:[2,56]},{47:[2,57]},{47:[2,58]},{1:[2,1]},{7:53,8:4,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vs,[2,4]),o($Vt,[2,6]),o($Vt,[2,7]),o($Vt,[2,30]),o($Vt,[2,12],{14:[1,54]}),{8:58,9:$V0,10:$V1,11:7,12:8,15:55,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vt,[2,31]),{8:59,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{28:[1,60]},{28:[1,61]},{28:[1,62]},{28:[1,63]},o($Vw,[2,39]),o($Vw,[2,40]),o($Vr,[2,2],{11:7,12:8,33:9,34:10,46:11,8:39,9:$V0,10:$V1,24:$V2,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq}),{8:58,9:$V0,10:$V1,11:7,12:8,15:64,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{16:[1,65],18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,29:$VI,30:$VJ,31:$VK,32:$VL},{8:58,9:$V0,10:$V1,11:7,12:8,15:79,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:80,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($VM,[2,29]),o($Vt,[2,45]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),{16:[1,81],18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,29:$VI,30:$VJ,31:$VK,32:$VL},o($Vw,[2,11]),{8:58,9:$V0,10:$V1,11:7,12:8,15:82,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:83,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:84,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:85,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:86,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:87,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:88,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:89,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:90,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:91,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:92,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:93,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:94,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($VM,[2,23]),{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,28:[1,95],29:$VI,30:$VJ,31:$VK,32:$VL},o($Vw,[2,10]),o($VN,[2,14],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,15],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,16],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,17],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VO,[2,18],{24:$VF,25:$VG,26:$VH}),o($VO,[2,19],{24:$VF,25:$VG,26:$VH}),o($VM,[2,20]),o($VM,[2,21]),o($VM,[2,22]),o([16,28,29],[2,25],{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,30:$VJ,31:$VK,32:$VL}),o([16,28,29,30],[2,26],{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,31:$VK,32:$VL}),o($VN,[2,27],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,28],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VM,[2,24])],\ndefaultActions: {24:[2,46],25:[2,47],26:[2,48],27:[2,49],28:[2,50],29:[2,51],30:[2,52],31:[2,53],32:[2,54],33:[2,55],34:[2,56],35:[2,57],36:[2,58],37:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n\tvar attribute = '';\n\tvar errors = [];\n\tlet grammar_stack = [];\n\tfunction printstrack(obj, lines){\n        if(Array.isArray(obj)){ //IS ARRAY\n            str = \"\"\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\n            obj.forEach((value)=>{\n                if(typeof value === 'string' ){\n                     str = \"\"\n                     for(let i = 0; i < lines; i++){str = str + \"- \";}\n                     console.log(str + value);\n                }else if(Array.isArray(value)){console.log(\"ERROR 5\");}else{\n                    str = \"\"\n                    for(let i = 0; i < lines; i++){ str = str + \"- \";}\n                    for(let key in value){\n                       console.log(`${str}${key}`);\n                       printstrack(value[key], lines + 1);\n                    }\n                }\n\n                //printstrack(value, lines +1);\n            });\n        }else if(typeof obj === 'string' ){ // IS STRING\n            str = \"\"\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\n            console.log(str + obj);\n        }else{// IS OBJECT\n            str = \"\"\n            for(let i = 0; i < lines; i++){ str = str + \"- \";}\n            for(let key in obj){\n                console.log(`${str}Key: ${key}`);\n                //console.log(obj[key]);\n                printstrack(obj[key], lines + 1);\n            }\n        }\n\t}\n\t\nfunction getASTTree(obj){\n    let str = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\">\n  <!-- Bootstrap CSS -->\n  <link crossorigin=\"anonymous\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" rel=\"stylesheet\">\n  <title>Title</title>\n  <style>\n    #divheight{\n      height: 400px;\n      width: 1050px;\n    }\n    .nav-tabs > li .close {\n      margin: -2px 0 0 10px;\n      font-size: 18px;\n    }\n    .nav-tabs2 > li .close {\n      margin: -2px 0 0 10px;\n      font-size: 18px;\n    }\n\n  </style>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      font-size: 15px;\n    }\n\n    .tree ul {\n      position: relative;\n      padding: 1em 0;\n      white-space: nowrap;\n      margin: 0 auto;\n      text-align: center;\n    }\n    .tree ul::after {\n      content: \"\";\n      display: table;\n      clear: both;\n    }\n\n    .tree li {\n      display: inline-block;\n      vertical-align: top;\n      text-align: center;\n      list-style-type: none;\n      position: relative;\n      padding: 1em 0.5em 0 0.5em;\n    }\n    .tree li::before, .tree li::after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      right: 50%;\n      border-top: 1px solid #ccc;\n      width: 50%;\n      height: 1em;\n    }\n    .tree li::after {\n      right: auto;\n      left: 50%;\n      border-left: 1px solid #ccc;\n    }\n    /*\n    ul:hover::after  {\n        transform: scale(1.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\n    }*/\n\n    .tree li:only-child::after, .tree li:only-child::before {\n      display: none;\n    }\n    .tree li:only-child {\n      padding-top: 0;\n    }\n    .tree li:first-child::before, .tree li:last-child::after {\n      border: 0 none;\n    }\n    .tree li:last-child::before {\n      border-right: 1px solid #ccc;\n      border-radius: 0 5px 0 0;\n    }\n    .tree li:first-child::after {\n      border-radius: 5px 0 0 0;\n    }\n\n    .tree ul ul::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 50%;\n      border-left: 1px solid #ccc;\n      width: 0;\n      height: 1em;\n    }\n\n    .tree li a {\n      border: 1px solid #ccc;\n      padding: 0.5em 0.75em;\n      text-decoration: none;\n      display: inline-block;\n      border-radius: 5px;\n      color: #333;\n      position: relative;\n      top: 1px;\n    }\n\n    .tree li a:hover,\n    .tree li a:hover + ul li a {\n      background: #e9453f;\n      color: #fff;\n      border: 1px solid #e9453f;\n    }\n\n    .tree li a:hover + ul li::after,\n    .tree li a:hover + ul li::before,\n    .tree li a:hover + ul::before,\n    .tree li a:hover + ul ul::before {\n      border-color: #e9453f;\n    }\n\n    /*# sourceMappingURL=sytle_.css.map */\n\n\n  </style>\n</head>\n<body>\n\n\n\n<div class=\"tree\">\n  <ul id=\"tree-list\">\n\n    <!--AQUI-->\n    `\n\n    str = str +printObj(obj, 0, \"\")\n    str =  str + `</ul>\n\n\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\n        src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\n        src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n</body>\n</html>\n`\n    return str;\n}\n\n\nfunction printObj(obj, lines, name){\n    console.log(obj)\n    let str = \"\";\n    let str_ = \"\";\n    if(Array.isArray(obj)) { //IS ARRAY\n        for (let i = 0; i < obj.length; i++){\n            str = str +printObj(obj[i], lines, \"\");\n        }\n    }else if (typeof obj === 'object' ){// IS OBJECT\n        if(obj.tipo === 'SELECT_FROM_CURRENT' || obj.tipo === 'SELECT_FROM_ROOT'){ // TODO select Parent\n            str = `<li>`;\n            str = str + printObj(obj.expresion, 0, (obj.tipo === 'SELECT_FROM_ROOT'? \"/\": \"//\" ));\n            str = str + getPredicados(obj.expresion);\n            str = str + `</li>`\n            console.log(str);\n        }else if(obj.tipo === 'EXPRESION'){\n            if (typeof obj.expresion === 'object'){\n                str = `<a>` + name + getName(obj.expresion) + `</a>`;\n            }\n        }\n    } else { // IS STRING\n        for (let i = 0; i < lines; i++) {\n\n            str_ = str_ + \"- \";\n        }\n    }\n    return str;\n}\n\n\n\nfunction getName(obj){\n\n    let str = \"\";\n    if (obj.tipo ==='NODENAME'){\n        //console.log(obj)\n        return obj.nodename;\n    }else if(obj.tipo === 'SELECT_PARENT'){\n        return  obj.expresion;\n    }else if(obj.tipo === 'SELECT_CURRENT'){\n        return obj.expresion;\n    }else if(obj.tipo === 'ASTERISCO'){\n        return obj.valor;\n    }else if(obj.tipo === 'FUNCION_TEXT'){\n        return obj.valor;\n    }else if(obj.tipo === 'FUNCION_NODE'){\n        return obj.valor;\n    }else if(obj.tipo === 'SELECT_ATTRIBUTES'){\n        return obj.expresion;\n    }else {\n        console.log(\"Error 1\")\n        console.log(obj)\n    }\n    return str\n}\n\nfunction getPredicados(obj){\n    let str = \"\";\n    console.log(obj)\n    if (obj.predicate !== null && obj.predicate !== undefined){\n\n        str = `<ul>\\n`;\n        for (let i = 0; i < obj.predicate.length;i++){\n            str = str + getPredicado(obj.predicate[i]);\n        }\n        str = str + `</ul>`;\n    }\n    return str;\n}\n\n\nfunction getPredicado(obj){\n    let str = \"\"\n    if(obj.tipo === 'PREDICATE'){\n        //str = `<li><a> ` + obj.condicion.tipo + `</a>\n        //<ul>`\n        str = str + getPredicado(obj.condicion);\n        //str = str + `\n        //</ul></li>`;\n    }else if(obj.tipo === 'EXPRESION'){ //TODO to check\n        if('valor' in obj.expresion){\n            str = `<li><a>` + obj.expresion.valor + `</a></li>\n            `;\n\n        }else if('nodename' in obj.expresion){\n            str = `<li><a>` + obj.expresion.nodename + `</a></li>\n            `;\n\n        }else if(obj.expresion.tipo === 'SELECT_ATTRIBUTES'){\n            str = `<li><a>` + \"@\" + obj.expresion.expresion + `</a></li>\n            `;\n\n        }else {\n            console.log(\"error 2\")\n            console.log(obj)\n        }\n\n\n    }else{\n        str = `<li><a>` + obj.tipo + `</a>\n                <ul>`\n        str = str + getPredicado(obj.opIzq);\n        str = str + getPredicado(obj.opDer);\n        str = str + `</ul></li>`\n    }\n\n    return str;\n}\n\n\n\n\n\n\n\tconst { Objeto } = require('../model/xpath/Objeto');\n\tconst { Tipos } = require('../model/xpath/Enum');\n\tvar builder = new Objeto();\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// XPATHComment\nbreak;\ncase 2:// MultiLineComment\nbreak;\ncase 3:// Declaration XML\nbreak;\ncase 4:return 25\nbreak;\ncase 5:return 38\nbreak;\ncase 6:return 18\nbreak;\ncase 7:return 20\nbreak;\ncase 8:return 19\nbreak;\ncase 9:return 21\nbreak;\ncase 10:return 9\nbreak;\ncase 11:return 10\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 40\nbreak;\ncase 14:return 39\nbreak;\ncase 15:return 47\nbreak;\ncase 16:return 41\nbreak;\ncase 17:return 14\nbreak;\ncase 18:return 16\nbreak;\ncase 19:return 27\nbreak;\ncase 20:return 28\nbreak;\ncase 21:return 24\nbreak;\ncase 22:return 49\nbreak;\ncase 23:return 48\nbreak;\ncase 24:return 50\nbreak;\ncase 25:return 51\nbreak;\ncase 26:return 53\nbreak;\ncase 27:return 52\nbreak;\ncase 28:return 55\nbreak;\ncase 29:return 54\nbreak;\ncase 30:return 56\nbreak;\ncase 31:return 57\nbreak;\ncase 32:return 59\nbreak;\ncase 33:return 58\nbreak;\ncase 34:return 60\nbreak;\ncase 35:return 45\nbreak;\ncase 36:return 43\nbreak;\ncase 37:return 42\nbreak;\ncase 38:return 44\nbreak;\ncase 39:return 6\nbreak;\ncase 40:return 22\nbreak;\ncase 41:return 23\nbreak;\ncase 42:return 32\nbreak;\ncase 43:return 29\nbreak;\ncase 44:return 30\nbreak;\ncase 45:return 26\nbreak;\ncase 46:return 35\nbreak;\ncase 47: attribute = ''; this.begin(\"string_doubleq\"); \nbreak;\ncase 48: attribute += yy_.yytext; \nbreak;\ncase 49: attribute += \"\\\"\"; \nbreak;\ncase 50: attribute += \"\\n\"; \nbreak;\ncase 51: attribute += \" \";  \nbreak;\ncase 52: attribute += \"\\t\"; \nbreak;\ncase 53: attribute += \"\\\\\"; \nbreak;\ncase 54: attribute += \"\\'\"; \nbreak;\ncase 55: attribute += \"\\r\"; \nbreak;\ncase 56: yy_.yytext = attribute; this.popState(); return 36; \nbreak;\ncase 57: attribute = ''; this.begin(\"string_singleq\"); \nbreak;\ncase 58: attribute += yy_.yytext; \nbreak;\ncase 59: attribute += \"\\\"\"; \nbreak;\ncase 60: attribute += \"\\n\"; \nbreak;\ncase 61: attribute += \" \";  \nbreak;\ncase 62: attribute += \"\\t\"; \nbreak;\ncase 63: attribute += \"\\\\\"; \nbreak;\ncase 64: attribute += \"\\'\"; \nbreak;\ncase 65: attribute += \"\\r\"; \nbreak;\ncase 66: yy_.yytext = attribute; this.popState(); return 37; \nbreak;\ncase 67:return 5\nbreak;\ncase 68: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XPath\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:\\(:[\\s\\S\\n]*?:\\))/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:div\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:::)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\*)/i,/^(?:ancestor-or-self\\b)/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:child\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:descendant\\b)/i,/^(?:following-sibling\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:preceding\\b)/i,/^(?:self\\b)/i,/^(?:node\\b)/i,/^(?:last\\b)/i,/^(?:text\\b)/i,/^(?:position\\b)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:!=)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:['])/i,/^(?:[^'\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:['])/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"string_singleq\":{\"rules\":[58,59,60,61,62,63,64,65,66],\"inclusive\":false},\"string_doubleq\":{\"rules\":[48,49,50,51,52,53,54,55,56],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,67,68],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xpath_up;\nexports.Parser = xpath_up.Parser;\nexports.parse = function () { return xpath_up.parse.apply(xpath_up, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Axis_1 = __importDefault(require(\"./Axis/Axis\"));\nfunction Eje(_instruccion, _ambito, _contexto) {\n    var _404 = { notFound: \"No se encontraron elementos.\" };\n    var contexto = (_contexto.elementos) ? (_contexto) : null;\n    var expresion;\n    if (_instruccion.expresion.expresion)\n        expresion = Expresion_1.default(_instruccion.expresion.expresion, _ambito, contexto);\n    else\n        expresion = Expresion_1.default(_instruccion.expresion, _ambito, contexto);\n    if (expresion.error)\n        return expresion;\n    var predicate = _instruccion.expresion.predicate;\n    var root;\n    if (expresion.tipo === Enum_1.Tipos.ELEMENTOS) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n        root = getSymbolFromRoot({ id: expresion.valor, tipo: \"@\" }, contexto, _ambito, predicate);\n        if (root.atributos.error)\n            return root.atributos;\n        if (root.atributos.length === 0)\n            return _404;\n        return root;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ASTERISCO) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_NODE) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        if (root.nodos.error)\n            return root.nodos;\n        if (root.nodos.length === 0)\n            return _404;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        if (root.texto.error)\n            return root.texto;\n        if (root.texto.length === 0)\n            return _404;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.SELECT_AXIS) {\n        root = Axis_1.default.GetAxis(expresion.axisname, expresion.nodetest, expresion.predicate, contexto, _ambito, false);\n        return root;\n    }\n    else {\n        return { error: \"Expresión no válida.\", tipo: \"Semántico\", origen: \"Query\", linea: _instruccion.linea, columna: _instruccion.columna };\n    }\n    if (root === null || root.error || root.elementos.error || root.elementos.length === 0)\n        return _404;\n    return root;\n}\nfunction getSymbolFromRoot(_nodename, _contexto, _ambito, _condicion) {\n    if (_contexto)\n        return getFromCurrent(_nodename, _contexto, _ambito, _condicion);\n    else\n        return { error: \"Indstrucción no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: 1, columna: 1 };\n}\n// Desde el ámbito actual\nfunction getFromCurrent(_id, _contexto, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    // Selecciona el texto contenido únicamente en el nodo\n    if (_id === \"text()\") {\n        var text = Array();\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.value) {\n                text.push(element.value);\n                elements.push(element);\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            text = filter.filterElements(text);\n            elements = filter.contexto;\n        }\n        return { texto: text, elementos: elements, cadena: Enum_1.Tipos.TEXTOS };\n    }\n    // Selecciona todos los hijos (elementos o texto)\n    else if (_id === \"node()\") {\n        var nodes_1 = Array();\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.childs)\n                element.childs.forEach(function (child) {\n                    nodes_1.push({ elementos: child });\n                });\n            else if (element.value)\n                nodes_1.push({ textos: element.value });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes_1 = filter.filterElements(nodes_1);\n            elements = filter.contexto;\n        }\n        return { cadena: Enum_1.Tipos.COMBINADO, nodos: nodes_1, elementos: _contexto.elementos };\n    }\n    // Selecciona todos los hijos (elementos)\n    else if (_id === \"*\") {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    elements.push(child);\n                });\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n    // Selecciona los atributos\n    else if (_id.tipo === \"@\") {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.attributes)\n                element.attributes.forEach(function (attribute) {\n                    if ((_id.id == attribute.id) || (_id.id === \"*\")) { // En caso de que sea un id ó @*\n                        attributes.push(attribute);\n                    }\n                });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            attributes = filter.filterAttributes(attributes);\n        }\n        return { atributos: attributes, elementos: [], cadena: Enum_1.Tipos.ATRIBUTOS };\n    }\n    // Selecciona el padre\n    else if (_id === \"..\") { // Manejar el regreso de atributos a su padre como la etiqueta misma !\n        if (_contexto.atributos) {\n            var _loop_1 = function (i) {\n                var attribute = _contexto.atributos[i];\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    elements = _ambito.searchDadFromAttribute(elm, attribute, elements);\n                });\n            };\n            for (var i = 0; i < _contexto.atributos.length; i++) {\n                _loop_1(i);\n            }\n            if (_condicion) {\n                var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n                elements = filter.filterElements(elements);\n            }\n            return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n        }\n        var _loop_2 = function (i) {\n            var element = _contexto.elementos[i];\n            var dad = element.father;\n            if (dad) {\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    if (elm.id_open === dad.id && elm.line == dad.line && elm.column == dad.column)\n                        elements.push(elm);\n                    if (elm.childs)\n                        elm.childs.forEach(function (child) {\n                            elements = _ambito.searchDad(child, dad.id, dad.line, dad.column, elements);\n                        });\n                });\n            }\n        };\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            _loop_2(i);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n    // Selecciona el nodo actual\n    else if (_id === \".\") {\n        if (_contexto.atributos) {\n            return { elementos: [], atributos: _contexto.atributos, cadena: Enum_1.Tipos.ATRIBUTOS };\n        }\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            elements.push(element);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n    // Búsqueda en los hijos por id\n    else {\n        for (var i = 0; i < _contexto.elementos.length; i++) {\n            var element = _contexto.elementos[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    elements = _ambito.searchSingleNode(_id, child, elements);\n                });\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements(elements);\n        }\n        return { elementos: elements, cadena: Enum_1.Tipos.ELEMENTOS };\n    }\n}\nmodule.exports = Eje;\n","\"use strict\";\nvar Enum_1 = require(\"../../../../../model/xpath/Enum\");\n// Revisa el nodetest y busca hacer match\nfunction f1(_element, _elements, _text, isDoubleBar) {\n    if (_element.value) {\n        _text.push(_element.value);\n        _elements.push(_element);\n    }\n    if (_element.childs && isDoubleBar) {\n        _element.childs.forEach(function (child) {\n            f1(child, _elements, _text, isDoubleBar);\n        });\n    }\n    return { elementos: _elements, texto: _text };\n}\nfunction f2(_element, _elements, _attributes, valor, isDoubleBar) {\n    for (var j = 0; j < _element.attributes.length; j++) {\n        var attribute = _element.attributes[j];\n        if (attribute.id == valor || valor === \"*\") {\n            _elements.push(_element);\n            _attributes.push(attribute);\n            break; // Sale del ciclo de atributos para pasar al siguiente elemento\n        }\n        if (attribute.value == valor) {\n            _elements.push(_element);\n            _attributes.push(attribute);\n            break;\n        }\n    }\n    if (_element.childs && isDoubleBar) {\n        _element.childs.forEach(function (child) {\n            f2(child, _elements, _attributes, valor, isDoubleBar);\n        });\n    }\n    return { elementos: _elements, atributos: _attributes };\n}\nfunction f3(_element, _elements, _text, valor, tipo, isDoubleBar) {\n    if (_element.id_open == valor || valor == \"*\") {\n        if (tipo === Enum_1.Tipos.FUNCION_TEXT)\n            _text.push(_element.value);\n        _elements.push(_element);\n    }\n    if (_element.childs && isDoubleBar) {\n        _element.childs.forEach(function (child) {\n            f3(child, _elements, _text, valor, tipo, isDoubleBar);\n        });\n    }\n    return { elementos: _elements, texto: _text };\n}\nfunction f4(_element, _elements, _text, valor, tipo, isDoubleBar) {\n    if (_element.value == valor || valor == \"*\") {\n        if (tipo === Enum_1.Tipos.FUNCION_TEXT)\n            _text.push(_element.value);\n        _elements.push(_element);\n    }\n    if (_element.childs && isDoubleBar) {\n        _element.childs.forEach(function (child) {\n            f4(child, _elements, _text, valor, tipo, isDoubleBar);\n        });\n    }\n    return { elementos: _elements, texto: _text };\n}\nmodule.exports = { f1: f1, f2: f2, f3: f3, f4: f4 };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encoding = void 0;\nvar Enum_1 = require(\"./Enum\");\nvar Encoding = /** @class */ (function () {\n    function Encoding(encoding) {\n        this.codes = Enum_1.Codes;\n        if (encoding === null)\n            this.encoding = this.codes.INVALID;\n        else {\n            this.encoding = encoding;\n            this.getCode();\n        }\n    }\n    Encoding.prototype.getCode = function () {\n        try {\n            var decl = String(this.encoding).replace(/\\s/g, '').toLowerCase();\n            var code = decl.substr(decl.indexOf(\"encoding\") + 8);\n            switch (code) {\n                case \"utf-8\":\n                    this.encoding = this.codes.UTF8;\n                    break;\n                case \"iso-8859-1\":\n                    this.encoding = this.codes.ISO8859_1;\n                    break;\n                case \"ascii\":\n                    this.encoding = this.codes.ASCII;\n                    break;\n                default:\n                    this.encoding = this.codes.INVALID;\n                    break;\n            }\n        }\n        catch (error) {\n            this.encoding = this.codes.INVALID;\n        }\n    };\n    return Encoding;\n}());\nexports.Encoding = Encoding;\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  _url = \"http://localhost:3080\";\n\n  constructor(private http: HttpClient) { }\n\n  compile(input: any) {\n    return this.http.post<any>(this._url + '/compile', input);\n  }\n\n  getAST(input: any) {\n    return this.http.post(this._url + '/AST_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n  getCST(input: any) {\n    return this.http.post(this._url + '/CST_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n  getDAG(input: any) {\n    return this.http.post(this._url + '/DAG_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Global = void 0;\nvar Hijos_1 = __importDefault(require(\"./Hijos\"));\nvar Global = /** @class */ (function () {\n    function Global(expresiones, ambito) {\n        this.expresiones = expresiones;\n        this.ambito = ambito;\n        Hijos_1.default.exec(expresiones, this.ambito);\n    }\n    return Global;\n}());\nexports.Global = Global;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Predicate = void 0;\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate = /** @class */ (function () {\n    function Predicate(_predicado, _ambito, _contexto) {\n        this.predicado = _predicado;\n        this.contexto = _contexto;\n        this.ambito = _ambito;\n    }\n    Object.defineProperty(Predicate.prototype, \"setContext\", {\n        set: function (v) {\n            this.contexto = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Predicate.prototype.filterElements = function (_resultado) {\n        var _this = this;\n        var expresion;\n        var _loop_1 = function (i) {\n            var e = this_1.predicado[i]; // En caso de tener varios predicados seguidos\n            console.log(e, \"Predicado\");\n            expresion = Expresion_1.default(e.condicion, this_1.ambito, this_1.contexto);\n            console.log(expresion, \"Expresion predicado\");\n            if (expresion.error)\n                return { value: expresion };\n            if (expresion.tipo === Enum_1.Tipos.NUMBER) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index < 0 || index >= _resultado.length)\n                    _resultado = [];\n                else\n                    _resultado = [_resultado[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n                var tmp_1 = [];\n                this_1.contexto = [];\n                _resultado.forEach(function (element) {\n                    if (element.attributes)\n                        for (var i_1 = 0; i_1 < element.attributes.length; i_1++) {\n                            var attribute = element.attributes[i_1];\n                            if (expresion.atributo) { // Es una comparación\n                                if (expresion.desigualdad) { // (<,<=,>,>=)\n                                    if (expresion.atributo == attribute.id && _this.operarDesigualdad(expresion.desigualdad, expresion.condicion, attribute.value)) {\n                                        tmp_1.push(element);\n                                        _this.contexto.push(element);\n                                        break;\n                                    }\n                                }\n                                else if (expresion.exclude) { // (!=)\n                                    if (expresion.atributo == attribute.id && expresion.condicion != attribute.value) {\n                                        tmp_1.push(element);\n                                        _this.contexto.push(element);\n                                        break;\n                                    }\n                                }\n                                else if (expresion.atributo == attribute.id && expresion.condicion == attribute.value) { // (==)\n                                    tmp_1.push(element);\n                                    _this.contexto.push(element);\n                                    break;\n                                }\n                            }\n                            else if (expresion.valor == attribute.id || expresion.valor == \"*\") { // No compara valor, sólo apila\n                                tmp_1.push(element);\n                                _this.contexto.push(element);\n                                break;\n                            }\n                        }\n                });\n                _resultado = tmp_1;\n                return { value: _resultado };\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n                this_1.contexto = [];\n                for (var i_2 = 0; i_2 < _resultado.length; i_2++) {\n                    var element = _resultado[i_2];\n                    var text = element.value;\n                    if (text) {\n                        if (expresion.exclude) {\n                            if (text != expresion.condicion) // text() != 'x'\n                                this_1.contexto.push(element);\n                        }\n                        else if (text == expresion.condicion) // text() == 'x'\n                            this_1.contexto.push(element);\n                    }\n                }\n                return { value: this_1.contexto };\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_LAST) {\n                var index = _resultado.length - 1;\n                _resultado = [_resultado[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n                return { value: _resultado };\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MENOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= _resultado.length)\n                    index = _resultado.length - 1;\n                var tmp = [];\n                for (var i_3 = index; i_3 <= _resultado.length && i_3 >= 0; i_3--) {\n                    var element = _resultado[i_3];\n                    tmp.push(element);\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= _resultado.length) {\n                    _resultado = [];\n                    return { value: _resultado };\n                }\n                if (index <= 0)\n                    index = 0;\n                var tmp = [];\n                for (var i_4 = index; i_4 < _resultado.length; i_4++) {\n                    var element = _resultado[i_4];\n                    tmp.push(element);\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.ELEMENTOS && expresion.e1 && expresion.e2) {\n                var e1 = expresion.e1;\n                var e2 = expresion.e2;\n                var condition = false;\n                var tmp = [];\n                for (var i_5 = 0; i_5 < this_1.contexto.length; i_5++) {\n                    var element = this_1.contexto[i_5];\n                    if (element.attributes) { // Hace match con un atributo\n                        for (var j = 0; j < element.attributes.length; j++) {\n                            var attribute = element.attributes[j];\n                            condition = this_1.verificarDesigualdad(expresion.desigualdad, attribute.id, e1, attribute.value, e2);\n                            if (condition) {\n                                tmp.push(element);\n                                break; // Sale del ciclo de atributos para pasar al siguiente elemento\n                            }\n                        }\n                    }\n                    if (element.childs) { // Hace match con algún hijo\n                        for (var j = 0; j < element.childs.length; j++) {\n                            var child = element.childs[j];\n                            condition = this_1.verificarDesigualdad(expresion.desigualdad, child.id_open, e1, child.value, e2);\n                            if (condition) {\n                                tmp.push(element);\n                                break;\n                            }\n                        }\n                    }\n                    // Hace match con el elemento\n                    condition = this_1.verificarDesigualdad(expresion.desigualdad, element.id_open, e1, element.value, e2);\n                    if (condition)\n                        tmp.push(element);\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.LOGICA_OR || expresion.tipo === Enum_1.Tipos.LOGICA_AND) {\n                _resultado = expresion.elementos;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.EXCLUDE) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= 0 && index < _resultado.length) {\n                    var tmp = [];\n                    for (var i_6 = 0; i_6 < _resultado.length; i_6++) {\n                        var element = _resultado[i_6];\n                        if (i_6 != index)\n                            tmp.push(element);\n                    }\n                    _resultado = tmp;\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.predicado.length; i++) {\n            var state_1 = _loop_1(i);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.contexto = _resultado;\n        return this.contexto;\n    };\n    Predicate.prototype.filterAttributes = function (_resultado) {\n        var _this = this;\n        var expresion;\n        var _loop_2 = function (i) {\n            var e = this_2.predicado[i]; // En caso de tener varios predicados seguidos\n            console.log(e, \"Predicado\");\n            expresion = Expresion_1.default(e.condicion, this_2.ambito, this_2.contexto);\n            console.log(expresion, \"Expresion predicado\");\n            if (expresion.error)\n                return { value: expresion };\n            if (expresion.tipo === Enum_1.Tipos.NUMBER) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index < 0 || index >= _resultado.length)\n                    _resultado = [];\n                else\n                    _resultado = [_resultado[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n                var tmp_2 = [];\n                this_2.contexto = [];\n                _resultado.forEach(function (attribute) {\n                    if (expresion.atributo) { // Es una comparación\n                        if (expresion.desigualdad) { // (<,<=,>,>=)\n                            if (expresion.atributo == attribute.id && _this.operarDesigualdad(expresion.desigualdad, expresion.condicion, attribute.value)) {\n                                tmp_2.push(attribute);\n                            }\n                        }\n                        else if (expresion.exclude) { // (!=)\n                            if (expresion.atributo == attribute.id && expresion.condicion != attribute.value) {\n                                tmp_2.push(attribute);\n                            }\n                        }\n                        else if (expresion.atributo == attribute.id && expresion.condicion == attribute.value) { // (==)\n                            tmp_2.push(attribute);\n                        }\n                    }\n                    else if (expresion.valor == attribute.id || expresion.valor == \"*\") { // No compara valor, sólo apila\n                        tmp_2.push(attribute);\n                    }\n                });\n                _resultado = tmp_2;\n                return { value: _resultado };\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n                var tmp = [];\n                for (var i_7 = 0; i_7 < _resultado.length; i_7++) {\n                    var attribute = _resultado[i_7];\n                    var text = attribute.value;\n                    if (expresion.exclude) {\n                        if (text != expresion.condicion) // text() != 'x'\n                            tmp.push(attribute);\n                    }\n                    else if (text == expresion.condicion) // text() == 'x'\n                        tmp.push(attribute);\n                }\n                return { value: tmp };\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_LAST) {\n                var index = _resultado.length - 1;\n                _resultado = [_resultado[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MENOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= _resultado.length)\n                    index = _resultado.length - 1;\n                var tmp = [];\n                for (var i_8 = index; i_8 <= _resultado.length && i_8 >= 0; i_8--) {\n                    var attribute = _resultado[i_8];\n                    tmp.push(attribute);\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= _resultado.length) {\n                    _resultado = [];\n                    return { value: _resultado };\n                }\n                if (index <= 0)\n                    index = 0;\n                var tmp = [];\n                for (var i_9 = index; i_9 < _resultado.length; i_9++) {\n                    var attribute = _resultado[i_9];\n                    tmp.push(attribute);\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.ELEMENTOS && expresion.e1 && expresion.e2) {\n                var e1 = expresion.e1;\n                var e2 = expresion.e2;\n                var condition = false;\n                var tmp = [];\n                for (var i_10 = 0; i_10 < _resultado.length; i_10++) {\n                    var attribute = _resultado[i_10]; // Hace match con un atributo\n                    condition = this_2.verificarDesigualdad(expresion.desigualdad, attribute.id, e1, attribute.value, e2);\n                    if (condition) {\n                        tmp.push(attribute);\n                    }\n                }\n                _resultado = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.LOGICA_OR || expresion.tipo === Enum_1.Tipos.LOGICA_AND) {\n                _resultado = expresion.elementos;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.EXCLUDE) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= 0 && index < _resultado.length) {\n                    var tmp = [];\n                    for (var i_11 = 0; i_11 < _resultado.length; i_11++) {\n                        var attribute = _resultado[i_11];\n                        if (i_11 != index)\n                            tmp.push(attribute);\n                    }\n                    _resultado = tmp;\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.predicado.length; i++) {\n            var state_2 = _loop_2(i);\n            if (typeof state_2 === \"object\")\n                return state_2.value;\n        }\n        return _resultado;\n    };\n    Predicate.prototype.operarDesigualdad = function (_tipo, _condicion, _valor) {\n        switch (_tipo) {\n            case Enum_1.Tipos.RELACIONAL_MAYOR:\n                return _valor > _condicion;\n            case Enum_1.Tipos.RELACIONAL_MAYORIGUAL:\n                return _valor >= _condicion;\n            case Enum_1.Tipos.RELACIONAL_MENOR:\n                return _valor < _condicion;\n            case Enum_1.Tipos.RELACIONAL_MENORIGUAL:\n                return _valor <= _condicion;\n            default:\n                return false;\n        }\n    };\n    Predicate.prototype.verificarDesigualdad = function (_tipo, v1, e1, v2, e2) {\n        switch (_tipo) {\n            case Enum_1.Tipos.RELACIONAL_MAYOR:\n                return (v1 == e1 && v2 > e2);\n            case Enum_1.Tipos.RELACIONAL_MAYORIGUAL:\n                return (v1 == e1 && v2 >= e2);\n            case Enum_1.Tipos.RELACIONAL_MENOR:\n                return (v1 == e1 && v2 < e2);\n            case Enum_1.Tipos.RELACIONAL_MENORIGUAL:\n                return (v1 == e1 && v2 <= e2);\n            case Enum_1.Tipos.RELACIONAL_IGUAL:\n                return (v1 == e1 && v2 == e2);\n            case Enum_1.Tipos.RELACIONAL_DIFERENTE:\n                return (v1 == e1 && v2 != e2);\n            default:\n                return false;\n        }\n    };\n    return Predicate;\n}());\nexports.Predicate = Predicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Element = void 0;\nvar Element = /** @class */ (function () {\n    function Element(id_open, attributes, value, childs, line, column, id_close) {\n        this.id_open = id_open;\n        this.id_close = id_close;\n        this.attributes = attributes;\n        this.value = value;\n        this.childs = childs;\n        this.line = line;\n        this.column = column;\n        this.father = null;\n    }\n    Element.prototype.verificateNames = function () {\n        if ((this.id_close !== null) && (this.id_open !== this.id_close))\n            return \"La etiqueta de apertura no coincide con la de cierre.\";\n        if (this.id_open.replace(/\\s/g, '').toLowerCase() === \"xml\")\n            return \"No se puede nombrar una etiqueta con las letras XML\";\n        return \"\";\n    };\n    /*\n    * Devuelve el HTML para el AST del XML\n    * */\n    Element.prototype.getASTXMLTree = function () {\n        var str = \"\";\n        str = \"<li><a href=''>\" + this.id_open + \"</a>\";\n        if (this.attributes == null && this.childs == null && this.value == null) {\n            str = str + \"</li>\";\n            return str;\n        }\n        str = str + \"<ul>\";\n        if (this.attributes != null) {\n            str = str + \"<li><a href=''>Atributos</a><ul>\";\n            this.attributes.forEach(function (value) {\n                str = str + \"<li><a href=''>Atributo</a><ul>\";\n                str = str + \"<li><a href=''>\" + value.id.slice(0, -1) + \"</a></li>\";\n                str = str + \"<li><a href=''>\" + value.value + \"</a></li>\";\n                str = str + \"</ul></li>\\n\";\n            });\n            str = str + \"</ul></li>\";\n        }\n        if (this.value != null) {\n            str = str + \"<li><a href=''>Value</a><ul><li><a href=''>\" + this.value + \"</a></li></ul></li></ul></li>\\n\";\n            return str;\n        }\n        if (this.id_close == null) {\n            str = str + \"</ul></li>\\n\";\n            return str;\n        }\n        if (this.childs != null) {\n            str = str + \"<li><a href=''>Children</a><ul>\";\n            this.childs.forEach(function (value) {\n                str = str + value.getASTXMLTree();\n            });\n            str = str + \"</ul></li>\\n\";\n        }\n        str = str + \"</ul></li>\\n\";\n        return str;\n    };\n    Object.defineProperty(Element.prototype, \"Att_Arr\", {\n        /*PROPERTIES*/\n        set: function (value) {\n            this.attributes = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Children\", {\n        get: function () {\n            return this.childs;\n        },\n        set: function (value) {\n            var _this = this;\n            if (value == null) {\n                return;\n            }\n            this.childs = value;\n            this.childs.forEach(function (value) {\n                if (value == null) {\n                    return;\n                }\n                value.Father = _this;\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Close\", {\n        set: function (value) {\n            this.id_close = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Value\", {\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Father\", {\n        set: function (value) {\n            this.father = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /*DO NOT INCLUDE*/\n    Element.prototype.printTest = function (tab_num) {\n        var str = \"\";\n        str = this.getDashes(tab_num) + \"Nodo: \" + this.id_open + \"\\t\";\n        if (this.attributes != null) {\n            str = str + \"\\tAtributos:\\t\";\n            this.attributes.forEach(function (value) {\n                str = str + value.id + \": \" + value.value + \"   \";\n            });\n        }\n        if (this.value != null) {\n            str = str + \"*** Valor *** \" + this.value;\n            console.log(str);\n            return;\n        }\n        if (this.id_close == null) {\n            console.log(str);\n            return;\n        }\n        if (this.childs != null) {\n            str = str + \"*** Children **** \";\n            console.log(str);\n            this.childs.forEach(function (value) {\n                value.printTest(tab_num + 1);\n            });\n        }\n    };\n    Element.prototype.getDashes = function (num) {\n        var a = \"\";\n        for (var i = 0; i < num * 2; i++) {\n            a += \"-\";\n        }\n        return a;\n    };\n    Element.prototype.printChildren = function () {\n        var _this = this;\n        if (this.childs == null) {\n            return;\n        }\n        this.childs.forEach(function (value) {\n            console.log(_this);\n            value.printChildren();\n        });\n    };\n    return Element;\n}());\nexports.Element = Element;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tipos = void 0;\nvar Tipos;\n(function (Tipos) {\n    //Nodename unario\n    Tipos[\"NODENAME\"] = \"NODENAME\";\n    Tipos[\"STRING\"] = \"STRING\";\n    Tipos[\"NUMBER\"] = \"NUMBER\";\n    Tipos[\"ASTERISCO\"] = \"ASTERISCO\";\n    Tipos[\"BOOLEANO\"] = \"BOOLEANO\";\n    // Selección\n    Tipos[\"SELECT_FROM_ROOT\"] = \"SELECT_FROM_ROOT\";\n    Tipos[\"SELECT_FROM_CURRENT\"] = \"SELECT_FROM_CURRENT\";\n    Tipos[\"SELECT_CURRENT\"] = \"SELECT_CURRENT\";\n    Tipos[\"SELECT_PARENT\"] = \"SELECT_PARENT\";\n    Tipos[\"SELECT_ATTRIBUTES\"] = \"SELECT_ATTRIBUTES\";\n    Tipos[\"SELECT_AXIS\"] = \"SELECT_AXIS\";\n    // Aritméticas\n    Tipos[\"OPERACION_SUMA\"] = \"OPERACION_SUMA\";\n    Tipos[\"OPERACION_RESTA\"] = \"OPERACION_RESTA\";\n    Tipos[\"OPERACION_MULTIPLICACION\"] = \"OPERACION_MULTIPLICACION\";\n    Tipos[\"OPERACION_DIVISION\"] = \"OPERACION_DIVISION\";\n    Tipos[\"OPERACION_MODULO\"] = \"OPERACION_MODULO\";\n    Tipos[\"OPERACION_NEGACION_UNARIA\"] = \"OPERACION_NEGACION_UNARIA\";\n    // Relacionales\n    Tipos[\"RELACIONAL_IGUAL\"] = \"RELACIONAL_IGUAL\";\n    Tipos[\"RELACIONAL_DIFERENTE\"] = \"RELACIONAL_DIFERENTE\";\n    Tipos[\"RELACIONAL_MENOR\"] = \"RELACIONAL_MENOR\";\n    Tipos[\"RELACIONAL_MENORIGUAL\"] = \"RELACIONAL_MENORIGUAL\";\n    Tipos[\"RELACIONAL_MAYOR\"] = \"RELACIONAL_MAYOR\";\n    Tipos[\"RELACIONAL_MAYORIGUAL\"] = \"RELACIONAL_MAYORIGUAL\";\n    // Logicas\n    Tipos[\"LOGICA_OR\"] = \"LOGICA_OR\";\n    Tipos[\"LOGICA_AND\"] = \"LOGICA_AND\";\n    // Funciones reservadas\n    Tipos[\"FUNCION_LAST\"] = \"FUNCION_LAST\";\n    Tipos[\"FUNCION_POSITION\"] = \"FUNCION_POSITION\";\n    Tipos[\"FUNCION_TEXT\"] = \"FUNCION_TEXT\";\n    Tipos[\"FUNCION_NODE\"] = \"FUNCION_NODE\";\n    // Predicado\n    Tipos[\"PREDICATE\"] = \"PREDICATE\";\n    Tipos[\"EXPRESION\"] = \"EXPRESION\";\n    // Combinacional\n    Tipos[\"UNION\"] = \"SEVERAL_UNION\";\n    // Expresiones\n    Tipos[\"ELEMENTOS\"] = \"ELEMENTOS\";\n    Tipos[\"ATRIBUTOS\"] = \"ATRIBUTOS\";\n    Tipos[\"TEXTOS\"] = \"TEXTOS\";\n    Tipos[\"COMBINADO\"] = \"COMBINADO\";\n    Tipos[\"EXCLUDE\"] = \"EXCLUDE\";\n    // Axisnames\n    Tipos[\"AXIS_ANCESTOR\"] = \"ANCESTOR\";\n    Tipos[\"AXIS_ANCESTOR_OR_SELF\"] = \"ANCESTOR_OR_SELF\";\n    Tipos[\"AXIS_ATTRIBUTE\"] = \"AXIS_ATTRIBUTE\";\n    Tipos[\"AXIS_CHILD\"] = \"AXIS_CHILD\";\n    Tipos[\"AXIS_DESCENDANT\"] = \"AXIS_DESCENDANT\";\n    Tipos[\"AXIS_DESCENDANT_OR_SELF\"] = \"AXIS_DESCENDANT_OR_SELF\";\n    Tipos[\"AXIS_FOLLOWING\"] = \"AXIS_FOLLOWING\";\n    Tipos[\"AXIS_FOLLOWING_SIBLING\"] = \"AXIS_FOLLOWING_SIBLING\";\n    Tipos[\"AXIS_NAMESPACE\"] = \"AXIS_NAMESPACE\";\n    Tipos[\"AXIS_PARENT\"] = \"AXIS_PARENT\";\n    Tipos[\"AXIS_PRECEDING\"] = \"AXIS_PRECEDING\";\n    Tipos[\"AXIS_PRECEDING_SIBLING\"] = \"AXIS_PRECEDING_SIBLING\";\n    Tipos[\"AXIS_SELF\"] = \"AXIS_SELF\";\n    // Default\n    Tipos[\"NONE\"] = \"NONE\";\n})(Tipos = exports.Tipos || (exports.Tipos = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ambito = void 0;\nvar Enum_1 = require(\"../../xpath/Enum\");\nvar Ambito = /** @class */ (function () {\n    function Ambito(_anterior, _tipo) {\n        this.anterior = _anterior;\n        this.tipo = _tipo;\n        this.tablaSimbolos = [];\n    }\n    Ambito.prototype.isGlobal = function () {\n        return this.tipo === \"global\";\n    };\n    Ambito.prototype.addSimbolo = function (_simbolo) {\n        this.tablaSimbolos.push(_simbolo);\n    };\n    Ambito.prototype.nodesFunction = function (_element, _nodes) {\n        var _this = this;\n        _nodes.push({ elementos: _element });\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _nodes = _this.nodesFunction(child, _nodes);\n            });\n        }\n        if (_element.value) {\n            _nodes.push({ textos: _element.value });\n        }\n        return _nodes;\n    };\n    Ambito.prototype.searchDad = function (_element, _nodename, _line, _column, _elements) {\n        var _this = this;\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _elements = _this.searchDad(child, _nodename, _line, _column, _elements);\n            });\n        }\n        if (_nodename === _element.id_open && _element.line == _line && _element.column == _column) {\n            _elements.push(_element);\n        }\n        return _elements;\n    };\n    Ambito.prototype.searchDadFromAttribute = function (_element, _attribute, _elements) {\n        var _this = this;\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _elements = _this.searchDadFromAttribute(child, _attribute, _elements);\n            });\n        }\n        if (_element.attributes) {\n            _element.attributes.forEach(function (attr) {\n                if (attr.id === _attribute.id && attr.line == _attribute.line && attr.column == _attribute.column) {\n                    _elements.push(_element);\n                }\n            });\n        }\n        return _elements;\n    };\n    Ambito.prototype.searchAnyAttributes = function (_id, _element, _array) {\n        var _this = this;\n        if (_element.attributes) {\n            _element.attributes.forEach(function (attribute) {\n                if (attribute.id === _id || _id === \"*\")\n                    _array.push(attribute);\n            });\n        }\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchAnyAttributes(_id, child, _array);\n            });\n        }\n        return _array;\n    };\n    Ambito.prototype.searchAnyText = function (_element, _array) {\n        var _this = this;\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchAnyText(child, _array);\n            });\n        }\n        if (_element.value) {\n            _array.push(_element.value);\n        }\n        return _array;\n    };\n    Ambito.prototype.searchSingleNode = function (_nodename, _element, _array) {\n        if (_nodename === _element.id_open) {\n            _array.push(_element);\n        }\n        return _array;\n    };\n    Ambito.prototype.searchNodes = function (_nodename, _element, _array) {\n        var _this = this;\n        if ((_nodename === _element.id_open) || (_nodename === \"*\")) {\n            _array.push(_element);\n        }\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchNodes(_nodename, child, _array);\n            });\n        }\n        return _array;\n    };\n    Ambito.prototype.compareCurrent = function (_currentNode, _array, _axisname) {\n        switch (_axisname) {\n            case Enum_1.Tipos.AXIS_ANCESTOR:\n            case Enum_1.Tipos.AXIS_ANCESTOR_OR_SELF:\n                return this.getBefore(this.tablaSimbolos[0], _currentNode, _array, true, false, false);\n            case Enum_1.Tipos.AXIS_PRECEDING:\n                return this.getBefore(this.tablaSimbolos[0], _currentNode, _array, false, true, false);\n            case Enum_1.Tipos.AXIS_PRECEDING_SIBLING:\n                return this.getBefore(this.tablaSimbolos[0], _currentNode, _array, false, true, true);\n            case Enum_1.Tipos.AXIS_FOLLOWING:\n                return this.getFollowings(this.tablaSimbolos[0], _currentNode, _array, false, false);\n            case Enum_1.Tipos.AXIS_FOLLOWING_SIBLING:\n                return this.getFollowings(this.tablaSimbolos[0], _currentNode, _array, false, true);\n        }\n        return _array;\n    };\n    Ambito.prototype.getBefore = function (_element, _currentNode, _array, isAncestor, isPreceding, isSibling) {\n        if (_element == _currentNode)\n            return false;\n        if (_element.childs) {\n            for (var i = 0; i < _element.childs.length; i++) {\n                var child = _element.childs[i];\n                if (isPreceding && isSibling)\n                    _array.push(child);\n                var a = this.getBefore(child, _currentNode, _array, isAncestor, isPreceding, isSibling);\n                if (a === false)\n                    return _array;\n            }\n            if (isPreceding && !isSibling)\n                _array.push(_element);\n        }\n        if (isAncestor)\n            _array.push(_element);\n        return _array;\n    };\n    Ambito.prototype.getFollowings = function (_element, _currentNode, _array, _found, isSibling) {\n        if (_element == _currentNode)\n            _found = true;\n        if (_element.childs) {\n            for (var i = 0; i < _element.childs.length; i++) {\n                var child = _element.childs[i];\n                this.getFollowings(child, _currentNode, _array, _found, isSibling);\n                return _array;\n            }\n            if (_found && !isSibling)\n                _array.push(_element);\n        }\n        if (_found && isSibling)\n            _array.push(_element);\n        return _array;\n    };\n    Ambito.prototype.searchAncestors = function (_element, _currentNode, _array) {\n        if (_element == _currentNode) {\n            return { found: _array };\n        }\n        if (_element.childs) {\n            var a = void 0;\n            for (var i = 0; i < _element.childs.length; i++) {\n                var child = _element.childs[i];\n                a = this.searchAncestors(child, _currentNode, _array);\n                if (a.found)\n                    return a.found;\n                else\n                    _array = a;\n            }\n        }\n        _array.push(_element);\n        return _array;\n    };\n    Ambito.prototype.getGlobal = function () {\n        var e;\n        for (e = this; e != null; e = e.anterior) {\n            if (e.anterior === null)\n                return e;\n        }\n        return null;\n    };\n    // Métodos para obtener la tabla de símbolos\n    Ambito.prototype.getArraySymbols = function () {\n        var _this = this;\n        var simbolos = [];\n        try {\n            this.tablaSimbolos.forEach(function (element) {\n                if (element.attributes || element.childs) {\n                    var dad = _this.createSymbolElement(element, (element.father === null ? \"global\" : element.father));\n                    simbolos.push(dad);\n                    if (element.attributes) {\n                        element.attributes.forEach(function (attribute) {\n                            simbolos.push(_this.createSymbolAttribute(attribute, element.id_open));\n                        });\n                    }\n                    if (element.childs) {\n                        simbolos.concat(_this.toRunTree(simbolos, element.childs, dad.id));\n                    }\n                }\n                else {\n                    var symb = _this.createSymbolElement(element, (element.father === null ? \"global\" : element.father));\n                    simbolos.push(symb);\n                }\n            });\n            return simbolos;\n        }\n        catch (error) {\n            console.log(error);\n            return simbolos;\n        }\n    };\n    Ambito.prototype.toRunTree = function (_symbols, _array, _father) {\n        var _this = this;\n        _array.forEach(function (element) {\n            if (element.attributes || element.childs) {\n                var dad = _this.createSymbolElement(element, _father);\n                _symbols.push(dad);\n                if (element.attributes) {\n                    element.attributes.forEach(function (attribute) {\n                        _symbols.push(_this.createSymbolAttribute(attribute, _father + \"->\" + element.id_open));\n                    });\n                }\n                if (element.childs) {\n                    var concat = _father + (\"->\" + dad.id);\n                    _symbols.concat(_this.toRunTree(_symbols, element.childs, concat));\n                }\n            }\n            else {\n                var symb = _this.createSymbolElement(element, _father);\n                _symbols.push(symb);\n            }\n        });\n        return _symbols;\n    };\n    Ambito.prototype.createSymbolElement = function (_element, _entorno) {\n        var type = (_element.id_close === null ? 'Tag simple' : 'Tag doble');\n        var symb = {\n            id: _element.id_open,\n            value: _element.value,\n            tipo: type,\n            entorno: _entorno,\n            linea: _element.line,\n            columna: _element.column\n        };\n        return symb;\n    };\n    Ambito.prototype.createSymbolAttribute = function (_attribute, _entorno) {\n        var symb = {\n            id: _attribute.id,\n            value: _attribute.value,\n            tipo: \"Atributo\",\n            entorno: _entorno,\n            linea: _attribute.line,\n            columna: _attribute.column\n        };\n        return symb;\n    };\n    return Ambito;\n}());\nexports.Ambito = Ambito;\n","<div class=\"container-fluid title pt-2 pb-1\">\n  <h2>TytusX</h2>\n</div>\n<div class=\"btn-toolbar\" role=\"toolbar\">\n  <div class=\"mb-2 btn-group\">\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Abrir\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"openDialog(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <input id=\"fileInput1\" type=\"file\" style=\"display:none\" accept=\".xml\" (change)=\"readFile($event,1)\"\n          [(ngModel)]=\"fname\">\n        <button (click)=\"openDialog(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n        <input id=\"fileInput2\" type=\"file\" style=\"display:none\" (change)=\"readFile($event,2)\" [(ngModel)]=\"fname\">\n      </div>\n    </div>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Guardar\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"saveFile(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <button (click)=\"saveFile(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n      </div>\n    </div>\n    <button (click)=\"newTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Nueva pestaña</button>\n    <button (click)=\"closeTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Cerrar pestaña</button>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Limpiar\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"cleanEditor(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <button (click)=\"cleanEditor(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n      </div>\n    </div>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">\n        Reportes\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"getAST()\" class=\"dropdown-item text-white item\" type=\"button\">AST</button>\n        <button (click)=\"getCST()\" class=\"dropdown-item text-white item\" type=\"button\">CST</button>\n        <button (click)=\"getGrammarReport()\" class=\"dropdown-item text-white item\" type=\"button\">Gramatical</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"btn-group sel_g\" role=\"group\">\n    <select id=\"grammar_selector\" class=\"form-select btn btn-dark rounded-0\">\n      <option disabled>Seleccione gramática</option>\n      <option selected value=\"1\">Ascendente</option>\n      <option value=\"2\">Descendente</option>\n    </select>\n  </div>\n</div>\n\n\n<div class=\"container-fluid px-5 pt-2\">\n\n  <form #iForm=\"ngForm\" class=\"mb-4\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <div class=\"row mb-5 file-editors\">\n      <div class=\"col-lg-6 col-sm-12\">\n        <p class=\"my-0 text-white subtitulo\">Entrada XML</p>\n        <ngx-monaco-editor id=\"entrada\" name=\"entrada\" class=\"codebox\" [options]=\"EditorOptions\" [(ngModel)]=\"entrada\">\n        </ngx-monaco-editor>\n      </div>\n      <div class=\"col-lg-6 col-sm-12\">\n        <p class=\"my-0 text-white subtitulo\">Editor de consultas</p>\n        <ngx-monaco-editor id=\"consulta\" name=\"consulta\" class=\"codebox\" [options]=\"EditorOptions\"\n          [(ngModel)]=\"consulta\">\n        </ngx-monaco-editor>\n      </div>\n    </div>\n    <div class=\"row text-center\">\n      <div class=\"col-12\">\n        <button type=\"submit\" class=\"btn btn-outline-light btn-lg\"><i class=\"fas fa-play-circle\"></i> COMPILAR</button>\n      </div>\n    </div>\n    <div class=\"row mb-5 file-console\">\n      <div class=\"col-12\">\n        <p class=\"my-0 text-white subtitulo\">Consola de salida</p>\n        <ngx-monaco-editor id=\"salida\" name=\"salida\" class=\"console\" [options]=\"ConsoleOptions\" [(ngModel)]=\"salida\">\n        </ngx-monaco-editor>\n      </div>\n    </div>\n  </form>\n  <br>\n  <hr>\n\n  <div class=\"row my-5\">\n    <div class=\"col-12\">\n      <p class=\"my-1 text-white subtitulo\">Tabla de símbolos</p>\n      <table class=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Tipo</th>\n            <th scope=\"col\">Contenido</th>\n            <th scope=\"col\">Ámbito</th>\n            <th class=\"text-center\" scope=\"col\">Fila</th>\n            <th class=\"text-center\" scope=\"col\">Columna</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of simbolos; let i = index\">\n            <th scope=\"row\">{{i+1}}</th>\n            <td>{{item.id}}</td>\n            <td>{{item.tipo}}</td>\n            <td>{{item.value}}</td>\n            <td>{{item.entorno}}</td>\n            <td class=\"text-center\">{{item.linea}}</td>\n            <td class=\"text-center\">{{item.columna}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr>\n\n  <div class=\"row my-5\">\n    <div class=\"col-12\">\n      <p class=\"mt-2 mb-1 text-white subtitulo\">Tabla de errores</p>\n      <table class=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Tipo</th>\n            <th scope=\"col\">Error</th>\n            <th scope=\"col\">Origen</th>\n            <th class=\"text-center\" scope=\"col\">Fila</th>\n            <th class=\"text-center\" scope=\"col\">Columna</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of errores; let i = index\">\n            <th scope=\"row\">{{i+1}}</th>\n            <td>{{item.tipo}}</td>\n            <td>{{item.error}}</td>\n            <td>{{item.origen}}</td>\n            <td class=\"text-center\">{{item.linea}}</td>\n            <td class=\"text-center\">{{item.columna}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</div>\n\n<footer class=\"text-center text-lg-start\">\n  <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n    <p class=\"foot my-0\">\n      © 2021 Grupo 23 - Organización de Lenguajes y Compiladores 2 - TytusX\n    </p>\n  </div>\n</footer>","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private appService: AppService) { }\n\n  EditorOptions = {\n    theme: \"vs-dark\",\n    automaticLayout: true,\n    scrollBeyondLastLine: false,\n    fontSize: 13,\n    minimap: {\n      enabled: true\n    },\n    language: 'xml'\n  }\n\n  ConsoleOptions = {\n    theme: \"vs-dark\",\n    readOnly: true,\n    automaticLayout: true,\n    scrollBeyondLastLine: false,\n    fontSize: 14,\n    minimap: {\n      enabled: true\n    },\n    language: 'xml'\n  }\n\n  entrada: string = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`;\n  consulta: string = '';\n  salida: string = '';\n\n  fname: string = '';\n  simbolos: any = [];\n  errores: any = [];\n\n  newTab() {\n    window.open(\"/tytusx/20211SVAC/G23\", \"_blank\");\n  }\n\n  closeTab() {\n    window.close();\n  }\n\n  onSubmit() {\n    var iconvlite = require('iconv-lite');\n    let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\n    if (this.entrada != \"\" && this.consulta != \"\") {\n      const x = {\n        xml: this.entrada, // documento XML\n        query: this.consulta, // consultas\n        grammar: Number(grammar_value) // gramática 1=ascendente, 2=descendente\n      }\n      // llamo a la función compile que devuelve un objeto de retorno\n      let data = require('../js/routes/compile').compile(x);\n      if (data.encoding == \"ascii\" || data.encoding == \"latin1\") this.salida = iconvlite.decode(data.output, data.encoding);\n      else this.salida = data.output;\n      this.errores = data.arreglo_errores;\n      this.simbolos = data.arreglo_simbolos;\n      console.log('Data received!');\n    } else\n      alert(\"Alguna entrada se encuentra vacía. Intente de nuevo.\");\n  }\n\n  getAST() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.consulta != \"\") {\n      let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\n      const x = {\n        xml: this.entrada, // documento XML\n        query: this.consulta, // consultas\n        grammar: Number(grammar_value), // gramática 1=ascendente, 2=descendente\n        report: \"XPATH-AST\",\n      }\n      let data = require('../js/routes/reports').generateReport(x);\n      this.salida = data.output;\n      this.errores = data.arreglo_errores;\n      this.exportFile(data.ast, \"AST\");\n      console.log('AST received!');\n    } else\n      alert(\"Entrada vacía. No se puede generar el reporte AST.\");\n  }\n\n  getCST() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.entrada != \"\") {\n      let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\n      const x = {\n        xml: this.entrada, // documento XML\n        query: this.consulta, // consultas\n        grammar: Number(grammar_value), // gramática 1=ascendente, 2=descendente\n        report: \"XML-CST\",\n      }\n      let data = require('../js/routes/reports').generateReport(x);\n      this.salida = data.output;\n      this.errores = data.arreglo_errores;\n      this.exportFile(data.cst, \"CST\");\n      console.log('CST received!');\n    } else\n      alert(\"Entrada vacía. No se puede generar el reporte CST.\");\n  }\n\n  getGrammarReport() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.entrada != \"\") {\n      let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\n      const x = {\n        xml: this.entrada, // documento XML\n        query: this.consulta, // consultas\n        grammar: Number(grammar_value), // gramática 1=ascendente, 2=descendente\n        report: \"XML-GRAMMAR\",\n      }\n      let data = require('../js/routes/reports').generateReport(x);\n      this.salida = data.output;\n      this.errores = data.arreglo_errores;\n      this.exportFile(data.grammar_report, \"Grammar report\");\n      console.log('Grammar report received!');\n    } else\n      alert(\"Entrada vacía. No se puede generar el reporte gramatical.\");\n  }\n\n  exportFile(data: string, fname: string) {\n    var f = document.createElement('a');\n    f.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data));\n    f.setAttribute('download', fname + '.html');\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      f.dispatchEvent(event);\n    }\n    else {\n      f.click();\n    }\n    console.log('File exported!');\n  }\n\n\n  saveFile(id: number) {\n    var f = document.createElement('a');\n    let data = \"\";\n    if (id === 1)\n      data = this.entrada;\n    else\n      data = this.consulta;\n    f.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data));\n    f.setAttribute('download', this.fname ? this.fname.replace(\"C:\\\\fakepath\\\\\", \"\") : (id === 1 ? 'file.xml' : 'file.xpath'));\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      f.dispatchEvent(event);\n    }\n    else {\n      f.click();\n    }\n    console.log('File saved!');\n  }\n\n  openDialog(id: number) {\n    if (id === 1)\n      document.getElementById(\"fileInput1\")!.click();\n    else\n      document.getElementById(\"fileInput2\")!.click();\n  }\n\n  readFile(event: any, id: number) {\n    let input = event.target;\n    let reader = new FileReader();\n    reader.onload = () => {\n      var text = reader.result;\n      if (text) {\n        switch (id) {\n          case 1:\n            this.entrada = String(text);\n            break;\n          case 2:\n            this.consulta = String(text);\n            break;\n        }\n      }\n    }\n    reader.readAsText(input.files[0]);\n    this.salida = '';\n    console.log('File opened!')\n  }\n\n  cleanEditor(id: number) {\n    switch (id) {\n      case 1:\n        this.entrada = \"\";\n        break;\n      case 2:\n        this.consulta = \"\";\n        break;\n    }\n    this.salida = \"\";\n  }\n\n}\n","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Logica(_expresion, _ambito, _contexto) {\n    var operators = init(_expresion.opIzq, _expresion.opDer, _ambito, _contexto, _expresion.tipo);\n    if (operators.error)\n        return operators;\n    switch (operators.tipo) {\n        case Enum_1.Tipos.LOGICA_AND:\n            return and(operators.op1, operators.op2, _contexto);\n        case Enum_1.Tipos.LOGICA_OR:\n            return or(operators.op1, operators.op2, _contexto);\n        default:\n            return null;\n    }\n}\nfunction init(_opIzq, _opDer, _ambito, _contexto, _tipo) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito, _contexto);\n    if (op1.error)\n        return op1;\n    var op2 = Expresion(_opDer, _ambito, _contexto);\n    if (op2.error)\n        return op2;\n    var tipo = _tipo;\n    console.log(op1, 888, op2);\n    if (op1.tipo === Enum_1.Tipos.ELEMENTOS && op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n        return { op1: op1, op2: op2, tipo: tipo };\n    }\n    if (op1.tipo === Enum_1.Tipos.ATRIBUTOS && op2.tipo === Enum_1.Tipos.ATRIBUTOS) {\n        return { op1: op1, op2: op2, tipo: tipo };\n    }\n    else\n        return { error: \"Relación lógica no aceptable.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n}\nfunction and(_opIzq, _opDer, _contexto) {\n    var op1 = _opIzq; // Tiene sus dos operadores y desigualdad\n    var op2 = _opDer;\n    var context1 = filterElements(op1.e1, op1.e2, op1.desigualdad, _contexto);\n    var context2 = filterElements(op2.e1, op2.e2, op2.desigualdad, _contexto);\n    var tmp = [];\n    for (var i = 0; i < context1.length; i++) {\n        var element1 = context1[i];\n        for (var j = 0; j < context2.length; j++) {\n            var element2 = context2[j];\n            if (element1 == element2) {\n                tmp.push(element1);\n                break;\n            }\n        }\n    }\n    return { tipo: Enum_1.Tipos.LOGICA_AND, elementos: tmp };\n}\nfunction or(_opIzq, _opDer, _contexto) {\n    var op1 = _opIzq; // Tiene sus dos operadores y desigualdad\n    var op2 = _opDer;\n    var context1 = filterElements(op1.e1, op1.e2, op1.desigualdad, _contexto);\n    var context2 = filterElements(op2.e1, op2.e2, op2.desigualdad, _contexto);\n    var tmp = context1.concat(context2.filter(function (item) { return context1.indexOf(item) < 0; }));\n    return { tipo: Enum_1.Tipos.LOGICA_OR, elementos: tmp };\n}\nfunction filterElements(e1, e2, desigualdad, _contexto) {\n    var condition = false;\n    var tmp = [];\n    for (var i = 0; i < _contexto.length; i++) {\n        var element = _contexto[i];\n        if (element.attributes) { // Hace match con un atributo\n            for (var j = 0; j < element.attributes.length; j++) {\n                var attribute = element.attributes[j];\n                condition = verificarDesigualdad(desigualdad, attribute.id, e1, attribute.value, e2);\n                if (condition) {\n                    tmp.push(element);\n                    break; // Sale del ciclo de atributos para pasar al siguiente elemento\n                }\n            }\n        }\n        if (element.childs && tmp.length === 0) { // Hace match con algún hijo\n            for (var j = 0; j < element.childs.length; j++) {\n                var child = element.childs[j];\n                condition = verificarDesigualdad(desigualdad, child.id_open, e1, child.value, e2);\n                if (condition) {\n                    tmp.push(element);\n                    break;\n                }\n            }\n        }\n        if (tmp.length === 0) { // Hace match con el elemento\n            condition = verificarDesigualdad(desigualdad, element.id_open, e1, element.value, e2);\n            if (condition)\n                tmp.push(element);\n        }\n    }\n    return tmp;\n}\nfunction verificarDesigualdad(_tipo, v1, e1, v2, e2) {\n    switch (_tipo) {\n        case Enum_1.Tipos.RELACIONAL_MAYOR:\n            return (v1 == e1 && v2 > e2);\n        case Enum_1.Tipos.RELACIONAL_MAYORIGUAL:\n            return (v1 == e1 && v2 >= e2);\n        case Enum_1.Tipos.RELACIONAL_MENOR:\n            return (v1 == e1 && v2 < e2);\n        case Enum_1.Tipos.RELACIONAL_MENORIGUAL:\n            return (v1 == e1 && v2 <= e2);\n        case Enum_1.Tipos.RELACIONAL_IGUAL:\n            return (v1 == e1 && v2 == e2);\n        case Enum_1.Tipos.RELACIONAL_DIFERENTE:\n            return (v1 == e1 && v2 != e2);\n        default:\n            return false;\n    }\n}\nmodule.exports = Logica;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Codes = void 0;\nvar Codes;\n(function (Codes) {\n    Codes[\"UTF8\"] = \"utf-8\";\n    Codes[\"ASCII\"] = \"ascii\";\n    Codes[\"ISO8859_1\"] = \"latin1\";\n    Codes[\"INVALID\"] = \"invalid\";\n})(Codes = exports.Codes || (exports.Codes = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Objeto = void 0;\nvar Enum_1 = require(\"./Enum\");\nvar Objeto = /** @class */ (function () {\n    function Objeto() {\n    }\n    Objeto.prototype.newValue = function (_valor, _tipo, _linea, _columna) {\n        return {\n            valor: _valor,\n            tipo: _tipo,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newOperation = function (_opIzq, _opDer, _tipo, _linea, _columna) {\n        return {\n            opIzq: _opIzq,\n            opDer: _opDer,\n            tipo: _tipo,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newNodename = function (_nodename, _linea, _columna) {\n        return {\n            nodename: _nodename,\n            tipo: Enum_1.Tipos.NODENAME,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAxis = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_FROM_ROOT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newDoubleAxis = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_FROM_CURRENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newCurrent = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_CURRENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newParent = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_PARENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAttribute = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_ATTRIBUTES,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAxisObject = function (_axisname, _nodetest, _linea, _columna) {\n        return {\n            axisname: _axisname,\n            nodetest: _nodetest,\n            tipo: Enum_1.Tipos.SELECT_AXIS,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newPredicate = function (_condicion, _linea, _columna) {\n        return {\n            condicion: _condicion,\n            tipo: Enum_1.Tipos.PREDICATE,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newExpression = function (_expresion, _predicate, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            predicate: _predicate,\n            tipo: Enum_1.Tipos.EXPRESION,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    return Objeto;\n}());\nexports.Objeto = Objeto;\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MonacoEditorModule, MONACO_PATH } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MonacoEditorModule\n  ],\n  providers: [\n    AppService,\n    {\n      provide: MONACO_PATH,\n      useValue: 'https://unpkg.com/monaco-editor@0.19.3/min/vs'\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xml_down = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,12],$V2=[1,17],$V3=[1,15],$V4=[1,16],$V5=[2,13],$V6=[1,20],$V7=[1,21],$V8=[1,22],$V9=[1,23],$Va=[2,21,22,23],$Vb=[2,6,21,23],$Vc=[2,11,12,21,22,23,24],$Vd=[2,11,12,14,16,17,18,21,22,23,24],$Ve=[2,6,23];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INI\":3,\"XML_DECLARATION\":4,\"ROOT\":5,\"EOF\":6,\"XML\":7,\"tk_open_declaration\":8,\"ATTRIBUTE_LIST\":9,\"XML_CLOSE_DECLARATION\":10,\"tk_close_delcaraton\":11,\"tk_close\":12,\"ATTRIBUTE\":13,\"tk_attribute_name\":14,\"tk_string\":15,\"tk_equal\":16,\"tk_tag_name\":17,\"cadena_err\":18,\"XML_OPEN\":19,\"CHILDREN\":20,\"tk_open_end_tag\":21,\"tk_content\":22,\"tk_open\":23,\"tk_bar\":24,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\"tk_open_declaration\",11:\"tk_close_delcaraton\",12:\"tk_close\",14:\"tk_attribute_name\",15:\"tk_string\",16:\"tk_equal\",17:\"tk_tag_name\",18:\"cadena_err\",21:\"tk_open_end_tag\",22:\"tk_content\",23:\"tk_open\",24:\"tk_bar\"},\nproductions_: [0,[3,3],[3,2],[3,2],[3,1],[3,2],[5,2],[5,1],[4,3],[10,1],[10,1],[10,2],[9,2],[9,0],[13,2],[13,1],[13,2],[13,1],[13,2],[13,1],[7,5],[7,5],[7,5],[7,4],[7,3],[7,3],[7,4],[7,4],[7,6],[7,4],[7,4],[7,4],[7,3],[7,3],[7,2],[19,4],[19,3],[19,1],[19,2],[20,2],[20,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n/*$$[$0-2][0].printTest(0);console.log($$[$0-2][0].getTree());*/\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            prod_2 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI-> XML_DECLARATION ROOT EOF {﹩ = [﹩1, ﹩2]}': [prod_2, prod_1, 'EOF' ]});\r\n                                            //printstrack(grammar_stack, 0); //TODO: Delete is just for testing purposes\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n                                            cst = getCST(grammar_stack);\r\n\r\n                                            if($$[$0-2]!= null){\r\n                                                encoding = new Encoding($$[$0-2]);\r\n                                                ast = { ast: $$[$0-1], encoding: encoding, errors: errors, cst: cst, grammar_report: grammar_report};\r\n                                            } else{\r\n                                                errors.push({ tipo: \"Sintáctico\", error: \"La codificación del XML no es válida.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors };\r\n                                                ast = { ast: $$[$0-1], encoding: null,  errors: errors, cst: cst, grammar_report: grammar_report};\r\n                                            }\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 2:\n\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI -> XML_DECLARATION  EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [prod_1, 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 3:\n\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI -> ROOT EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [prod_1, 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Falta declaracion del XML\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 4:\n\r\n                                            grammar_stack.push({'INI -> EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [ 'EOF']});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"El archivo viene vacio.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n\t                                        ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report }\r\n\t                                        errors = [];\r\n\t                                        return ast;\r\n\t                                        \nbreak;\ncase 5:\n\r\n\t                                        grammar_stack.push({'INI -> error EOF {\terrors.add(new Error()); ﹩﹩ = null;}': ['Token: error\\t Lexema: ', 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 6:\nif($$[$0-1] != null && $$[$0] != null){ $$[$0].push($$[$0-1]); this.$ = $$[$0]; } else if($$[$0] == null){this.$ = []; this.$.push($$[$0-1]); }else{this.$ = null;}\r\n                                                prod_1 = grammar_stack.pop();\r\n                                                prod_2 = grammar_stack.pop();\r\n                                                grammar_stack.push({'ROOT ->  XML ROOT  {﹩﹩ = ﹩2.push(﹩1);}': [prod_2, prod_1 ]});\r\n                                                \nbreak;\ncase 7:\nthis.$ = []; this.$.push($$[$0]);\r\n\t                                            prod_1 = grammar_stack.pop();\r\n\t                                            grammar_stack.push({'ROOT -> XML {﹩﹩ = []; ﹩﹩.push(﹩1);}': [prod_1 ]});\r\n\t                                            \nbreak;\ncase 8:\nif($$[$0-1] == null || $$[$0] == null){\r\n                                                                            this.$ = null}else{\r\n                                                                            let str = \"\";\r\n                                                                           $$[$0-1].forEach((value)=>{\r\n                                                                           str = str + value.id+value.value;\r\n                                                                           });\r\n                                                                           this.$=str;\r\n                                                                           }\r\n\r\n                                                                           prod_3 = grammar_stack.pop();\r\n                                                                           prod_2 = grammar_stack.pop();\r\n                                                                           grammar_stack.push({'XML_DECLARATION -> tk_open_declaration ATTRIBUTE_LIST XML_CLOSE_DECLARATION {﹩﹩ = ﹩2}': ['Token: tk_open_declaration\\t Lexema: ' + '&lt;?', prod_2, prod_3]} );\r\n                                                                           \nbreak;\ncase 9:\n  this.$ = \"?>\"\r\n                                                grammar_stack.push({'XML_CLOSE_DECLARATION -> tk_close_delcaraton { ﹩﹩= ﹩1}': ['Token: tk_close_delcaraton\\t Lexema: ' + '?&gt;']});\r\n                                                \nbreak;\ncase 10:\nthis.$ = null;\r\n                                                 errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba token /\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                grammar_stack.push({'XML_CLOSE_DECLARATION -> tk_close {errors.add(new Error()); ﹩﹩ = null;}': ['Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                \nbreak;\ncase 11:\n this.$ = null;\r\n                                                 errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado. \" + $$[$0-1], origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                 grammar_stack.push({'XML_CLOSE_DECLARATION -> error tk_close {\terrors.add(new Error()); ﹩﹩ = null;}': ['Token: error\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                 \nbreak;\ncase 12:\nif($$[$0-1] != null && $$[$0] != null){$$[$0].push($$[$0-1]); this.$ = $$[$0]}else if($$[$0] == null){this.$ = []; this.$.push($$[$0-1]);}else{this.$ = null;}\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            prod_2 = grammar_stack.pop();\r\n                                            grammar_stack.push({'ATTRIBUTE_LIST -> ATTRIBUTE ATTRIBUTE_LIST {if(﹩2 == null){﹩﹩=[]; ﹩﹩.push(﹩1)}else{﹩2.push(﹩1)}}': [ prod_2, prod_1 ] });\r\n                                          \nbreak;\ncase 13:\nthis.$ = null;             grammar_stack.push({'ATTRIBUTE_LIST -> Empty {﹩﹩ = null}': ['EMPTY'] });      \nbreak;\ncase 14:\nattr = new Atributo($$[$0-1].slice(0, -1), $$[$0].slice(1,-1), this._$.first_line, this._$.first_column+1);\r\n                                            attr.Cst= `<li><a href=''>ATTRIBUTE</a>\r\n                                            <ul>\r\n                                            <li><a href=''>tk_attribute_name</a><ul>\\n<li><a href=''>${$$[$0-1]}</a></li></ul></li>\r\n                                            <li><a href=''>tk_string</a><ul>\\n<li><a href=''>${$$[$0]}</a></li></ul></li>\r\n                                            </ul>\r\n                                            </li>`;\r\n                                            this.$ = attr;\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_attribute_name tk_string {\t﹩﹩ = new Attribute(﹩1, ﹩2)}': ['Token: tk_attribute_name\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0] ]});\r\n                                            \nbreak;\ncase 15:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un atributo despues de =.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_attribute_name {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_attribute_name\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 16:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un nombre para atributo antes de =.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_equal tk_string {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_equal\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 17:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba signo =\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_tag_name {\terrors.add(new Error()); ﹩﹩ = null;}':['Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 18:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Lexico\", error: \"Nombre del atributo no puede empezar con digitos.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> cadena_err tk_string {errors.add(new Error()); ﹩﹩ = null;}':['Token: cadena_err\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 19:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Lexico\", error: \"Nombre del atributo no puede empezar con digitos, y debe tener signo = y atributo a continuacion.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> cadena_err {\terrors.add(new Error()); ﹩﹩ = null;}':['Token: cadena_err\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 20:\nif($$[$0-4] != null){  $$[$0-4].Children = $$[$0-3]; $$[$0-4].Close = $$[$0-1]; this.$ = $$[$0-4];\r\n                                                                                let hasConflict = $$[$0-4].verificateNames();\r\n                                                                                if(hasConflict === \"\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$$[$0-4].childs.forEach(child => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.Father = {id: $$[$0-4].id_open, line: $$[$0-4].line, column: $$[$0-4].column};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$ = $$[$0-4];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n                                                                                else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                                                    this.$ = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n                                                                                 }else{this.$ = null;}\r\n                                                                                 prod_1 = grammar_stack.pop();\r\n                                                                                 prod_2 = grammar_stack.pop();\r\n                                                                                 grammar_stack.push({'XML-> XML_OPEN CHILDREN tk_open_end_tag tk_tag_name tk_close {﹩﹩ = ﹩1; ﹩1.children = ﹩2}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                                                 \nbreak;\ncase 21:\nif($$[$0-4] != null){$$[$0-4].Value = $$[$0-3]; $$[$0-4].Close = $$[$0-1];  this.$ = $$[$0-4];\r\n                                                                                let hasConflict = $$[$0-4].verificateNames();\r\n                                                                                if(hasConflict !== \"\"){\r\n                                                                                 errors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                                                 this.$ = null;\r\n                                                                                 }\r\n\t                                                                             }else{this.$ = null;}\r\n\t                                                                             prod_1 = grammar_stack.pop();\r\n\t                                                                             grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag tk_tag_name tk_close {﹩﹩ = ﹩1; ﹩﹩.content = ﹩2}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-3], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                             \nbreak;\ncase 22:\nthis.$ = new Element($$[$0-3], $$[$0-2], null, null, _$[$0-4].first_line, _$[$0-4].first_column+1, null);\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                grammar_stack.push({'XML -> tk_open tk_tag_name ATTRIBUTE_LIST tk_bar tk_close {﹩﹩ = new Element(); ﹩﹩.attributes = ﹩3}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-3], prod_1, 'Token: tk_bar\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 23:\nif($$[$0-3] != null){$$[$0-3].Close = $$[$0-1]; this.$ = $$[$0-3];\r\n\t                                                                            let hasConflict = $$[$0-3].verificateNames();\r\n\t                                                                             if(hasConflict !== \"\"){\r\n                                                                                errors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                                                this.$ = null;\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                }\r\n\t                                                                            }else{this.$ = null;}\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag tk_tag_name tk_close {\t﹩﹩ = ﹩1;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 24:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: '  + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 25:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador. \", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 26:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 27:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador. \", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: ' + $$[$0]  ]});\r\n                                                                            \t\nbreak;\ncase 28:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba etiqueta de cierre. \", origen: \"XML\", linea: _$[$0-4].first_line, columna: _$[$0-4].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_content  tk_open tk_tag_name ATTRIBUTE_LIST tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, 'Token: tk_content\\t Lexema: ' + $$[$0-4],  'Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-2], prod_1, 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 29:\nthis.$ =null;\r\n\t                                                                            errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN CHILDREN tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 30:\nthis.$ =null;\r\n\t                                                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN CHILDREN tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 31:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-3], origen: \"XML\", linea: _$[$0-3].first_line, columna: _$[$0-3].first_column+1 });\r\n\r\n                                                                             grammar_stack.push({'XML -> error tk_open_end_tag tk_tag_name tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-3], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n                                                                             \nbreak;\ncase 32:\nthis.$ =null;\r\n    \t                                                                    errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-2], origen: \"XML\", linea: _$[$0-2].first_line, columna: _$[$0-2].first_column+1 });\r\n\r\n                                                                            grammar_stack.push({'XML -> error tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n                                                                            \nbreak;\ncase 33:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-2], origen: \"XML\", linea: _$[$0-2].first_line, columna: _$[$0-2].first_column+1 });\r\n\r\n\t                                                                        grammar_stack.push({'XML -> error tk_bar tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-2], 'Token: tk_bar\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                        \nbreak;\ncase 34:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-1], origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n\t                                                                        grammar_stack.push({'XML -> error  tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-1],  'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                        \nbreak;\ncase 35:\n this.$ = new Element($$[$0-2], $$[$0-1], null, null,  _$[$0-3].first_line,  _$[$0-3].first_column+1);\r\n\r\n                                                        prod_1 = grammar_stack.pop();\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open tk_tag_name ATTRIBUTE_LIST tk_close {﹩﹩ = new Element(); ﹩﹩.attributes = ﹩3}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-2], prod_1, 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                         \nbreak;\ncase 36:\n\r\n                                                        this.$ = null;\r\n                                                        errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba \\\">\\\" despues de la cadena de atributos.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                        prod_1 = grammar_stack.pop();\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open tk_tag_name ATTRIBUTE_LIST {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], prod_1]});\r\n                                                        \nbreak;\ncase 37:\n this.$ = null;\r\n                                                        errors.push({ tipo: \"Sintáctico\", error: \"\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;']});\r\n                                                        \nbreak;\ncase 38:\n this.$ = null;\r\n                                                         errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador para la etiqueta\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                         grammar_stack.push({'XML_OPEN -> tk_open tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                         \nbreak;\ncase 39:\nif($$[$0-1] != null && $$[$0] != null){ $$[$0].push($$[$0-1]); this.$ = $$[$0]; } else if($$[$0] == null){this.$ = []; this.$.push($$[$0-1]); }else{this.$ = null;}\r\n                                                            prod_1 = grammar_stack.pop();\r\n                                                            prod_2 = grammar_stack.pop();\r\n                                                             grammar_stack.push({'CHILDREN -> XML CHILDREN {﹩2.push(﹩1); ﹩﹩ = ﹩2;}':[prod_2,  prod_1]});\r\n                                                            \nbreak;\ncase 40:\nthis.$ = []; this.$.push($$[$0]);\r\n\t                                                        prod_1 = grammar_stack.pop();\r\n\t                                                        grammar_stack.push({'CHILDREN -> XML {﹩﹩ = [﹩1]}': [prod_1] });\r\n\t                                                        \nbreak;\n}\n},\ntable: [{2:[1,5],3:1,4:2,5:3,6:[1,4],7:7,8:[1,6],19:8,23:$V0},{1:[3]},{2:$V1,5:10,6:[1,11],7:7,19:8,23:$V0},{6:[1,13]},{1:[2,4]},{6:[1,14],12:$V2,21:$V3,24:$V4},o([2,11,12],$V5,{9:18,13:19,14:$V6,16:$V7,17:$V8,18:$V9}),{2:$V1,5:24,6:[2,7],7:7,19:8,23:$V0},{2:$V1,7:28,19:8,20:25,21:[1,27],22:[1,26],23:$V0},o($Va,[2,37],{12:[1,30],17:[1,29]}),{6:[1,31]},{1:[2,2]},{12:$V2,21:$V3,24:$V4},{1:[2,3]},{1:[2,5]},{17:[1,32]},{12:[1,33]},o($Vb,[2,34]),{2:[1,37],10:34,11:[1,35],12:[1,36]},o($Vc,$V5,{13:19,9:38,14:$V6,16:$V7,17:$V8,18:$V9}),o($Vd,[2,15],{15:[1,39]}),{15:[1,40]},o($Vd,[2,17]),o($Vd,[2,19],{15:[1,41]}),{6:[2,6]},{21:[1,42]},{21:[1,43],23:[1,44]},{12:[1,46],17:[1,45]},{2:$V1,7:28,19:8,20:47,21:[2,40],23:$V0},o([2,12,21,22,23,24],$V5,{13:19,9:48,14:$V6,16:$V7,17:$V8,18:$V9}),o($Va,[2,38]),{1:[2,1]},o($Vb,[2,32],{12:[1,49]}),o($Vb,[2,33]),o($Ve,[2,8]),o($Ve,[2,9]),o($Ve,[2,10]),{12:[1,50]},o($Vc,[2,12]),o($Vd,[2,14]),o($Vd,[2,16]),o($Vd,[2,18]),{12:[1,52],17:[1,51]},{12:[1,54],17:[1,53]},{17:[1,55]},o($Vb,[2,24],{12:[1,56]}),o($Vb,[2,25]),{21:[2,39]},o($Va,[2,36],{12:[1,58],24:[1,57]}),o($Vb,[2,31]),o($Ve,[2,11]),o($Vb,[2,29],{12:[1,59]}),o($Vb,[2,30]),o($Vb,[2,26],{12:[1,60]}),o($Vb,[2,27]),{9:61,12:$V5,13:19,14:$V6,16:$V7,17:$V8,18:$V9},o($Vb,[2,23]),{12:[1,62]},o($Va,[2,35]),o($Vb,[2,20]),o($Vb,[2,21]),{12:[1,63]},o($Vb,[2,22]),o($Vb,[2,28])],\ndefaultActions: {4:[2,4],11:[2,2],13:[2,3],14:[2,5],24:[2,6],31:[2,1],47:[2,39]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n\tvar attribute = '';\r\n\tvar errors = [];\r\n\tlet re = /[^\\n\\t\\r ]+/g\r\n\t//let ast = null;\r\n\tlet grammar_stack = [];\r\n\r\n\r\n\r\n    function getGrammarReport(obj){\r\n        let str = `<!DOCTYPE html>\r\n                     <html lang=\"en\" xmlns=\"http://www.w3.org/1999/html\">\r\n                     <head>\r\n                         <meta charset=\"UTF-8\">\r\n                         <meta\r\n                         content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\r\n                         name=\"viewport\">\r\n                         <!-- Bootstrap CSS -->\r\n                         <link\r\n                         crossorigin=\"anonymous\"\r\n                         href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n                               integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n                               rel=\"stylesheet\">\r\n                         <title>Reporte gramatical</title>\r\n                         <style>\r\n                             table, th, td {\r\n                                 border: 1px solid black;\r\n                             }\r\n                             ul, .ul-tree-view {\r\n                                 list-style-type: none;\r\n                             }\r\n\r\n                             #div-table{\r\n                                 width: 1200px;\r\n                                 margin: 100px;\r\n                                 border: 3px solid #73AD21;\r\n                             }\r\n\r\n                             .ul-tree-view {\r\n                                 margin: 0;\r\n                                 padding: 0;\r\n                             }\r\n\r\n                             .caret {\r\n                                 cursor: pointer;\r\n                                 -webkit-user-select: none; /* Safari 3.1+ */\r\n                                 -moz-user-select: none; /* Firefox 2+ */\r\n                                 -ms-user-select: none; /* IE 10+ */\r\n                                 user-select: none;\r\n                             }\r\n\r\n                             .caret::before {\r\n                                 content: \"\\u25B6\";\r\n                                 color: black;\r\n                                 display: inline-block;\r\n                                 margin-right: 6px;\r\n                             }\r\n\r\n                             .caret-down::before {\r\n                                 -ms-transform: rotate(90deg); /* IE 9 */\r\n                                 -webkit-transform: rotate(90deg); /* Safari */'\r\n                             transform: rotate(90deg);\r\n                             }\r\n\r\n                             .nested {\r\n                                 display: none;\r\n                             }\r\n\r\n                             .active {\r\n                                 display: block;\r\n                             }\r\n\r\n                             li span:hover {\r\n                                 font-weight: bold;\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n\r\n                             li span:hover + ul li  {\r\n                                 font-weight: bold;\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n\r\n                             .tree-view{\r\n                                 display: inline-block;\r\n                             }\r\n\r\n                             li.string {\r\n                                 list-style-type: square;\r\n                             }\r\n                             li.string:hover {\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n                             .center {\r\n                                margin: auto;\r\n                                width: 50%;\r\n                                border: 3px solid green;\r\n                                padding-left: 15%;\r\n                             }\r\n                         </style>\r\n                     </head>\r\n                     <body>\r\n                     <h1 class=\"center\">Reporte Gramatical</h1>\r\n                     <div class=\"tree-view\">\r\n                     <ul class=\"ul-tree-view\" id=\"tree-root\">`;\r\n\r\n\r\n        str = str + buildGrammarReport(obj);\r\n\r\n\r\n        str = str + `\r\n                    </ul>\r\n                    </ul>\r\n                    </div>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                        <button onclick=\"fun1()\">Expand Grammar Tree</button>\r\n\r\n                     <div id=\"div-table\">\r\n                     <table style=\"width:100%\">\r\n                         <tr>\r\n                         <th>Produccion</th>\r\n                         <th>Cuerpo</th>\r\n                         <th>Accion</th>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>INI-&gt;</th>\r\n                         <td>XML_DECLARATION ROOT EOF</td>\r\n                         <td>$$ = [$1, $2] </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_DECLARATION  EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>ROOT EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>ROOT-&gt;</th>\r\n                         <td>XML ROOT</td>\r\n                         <td>$$ = $2.push($1);</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML</td>\r\n                         <td>$$ = []; $$.push($1);</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>XML_DECLARATION-&gt;</th>\r\n                         <td>tk_open_declaration ATTRIBUTE_LIST XML_CLOSE_DECLARATION</td>\r\n                         <td>$$ = $2</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>XML_CLOSE_DECLARATION-&gt;</th>\r\n                         <td>tk_close_delcaraton</td>\r\n                         <td>$$ = $1</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>ATTRIBUTE_LIST-&gt;</th>\r\n                         <td>ATTRIBUTE ATTRIBUTE_LIST </td>\r\n                         <td>if($2 == null){$$=[]; $$.push($1)}else{$2.push($1)}</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>Empty</td>\r\n                         <td>$$ = null</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>ATTRIBUTE-&gt;</th>\r\n                         <td>tk_attribute_name tk_string  </td>\r\n                         <td>$$ = new Attribute($1, $2)</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_attribute_name</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_equal tk_string   </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_tag_name</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>cadena_err tk_string </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>cadena_err</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>XML-&gt;</th>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag tk_tag_name tk_close   </td>\r\n                         <td>$$ = $1; $1.children = $2</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag tk_tag_name tk_close  </td>\r\n                         <td>$$ = $1; $$.content = $2</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST tk_bar tk_close </td>\r\n                         <td>$$ = new Element(); $$.attributes = $3</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag tk_tag_name tk_close </td>\r\n                         <td>$$ = $1; </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content  tk_open tk_tag_name ATTRIBUTE_LIST tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag  tk_close  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_open_end_tag tk_tag_name tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_bar tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <th>XML_OPEN-&gt;</th>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST tk_close </td>\r\n                         <td>$$ = new Element(); $$.attributes = $3</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open   tk_close  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <th>CHILDREN-&gt;</th>\r\n                         <td>XML CHILDREN</td>\r\n                         <td>$2.push($1); $$ = $2;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML</td>\r\n                         <td>$$ = [$1]</td>\r\n                         </tr>\r\n\r\n                     </table>\r\n\r\n                     </div>\r\n\r\n                     <script\r\n                     src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\">\r\n                     </script>\r\n                     <script\r\n                     crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n                             src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\">\r\n                             </script>\r\n                     <script\r\n                     crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n                             src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\">\r\n                             </script>\r\n\r\n                             <script>\r\n                                 var toggler = document.getElementsByClassName(\"caret\");\r\n                                 var i;\r\n\r\n                                 for (i = 0; i < toggler.length; i++) {\r\n                                     toggler[i].addEventListener(\"click\", function() {\r\n                                         this.parentElement\r\n                                         .querySelector(\".nested\")\r\n                                         .classList.toggle(\"active\");\r\n                                         this.classList.toggle(\"caret-down\");\r\n                                     });\r\n                                 }\r\n\r\n\r\n                                    function fun1() {\r\n                                                                                if ($(\"#tree-root\").length > 0) {\r\n\r\n                                                                                    $(\"#tree-root\").find(\"li\").each\r\n                                                                                    (\r\n                                                                                        function () {\r\n                                                                                            var $span = $(\"<span></span>\");\r\n                                                                                            //$(this).toggleClass(\"expanded\");\r\n                                                                                            if ($(this).find(\"ul:first\").length > 0) {\r\n                                                                                                $span.removeAttr(\"class\");\r\n                                                                                                $span.attr(\"class\", \"expanded\");\r\n                                                                                                $(this).find(\"ul:first\").css(\"display\", \"block\");\r\n                                                                                                $(this).append($span);\r\n                                                                                            }\r\n\r\n                                                                                        }\r\n                                                                                    )\r\n                                                                                }\r\n\r\n                                                                            }\r\n                             </script>\r\n\r\n                     </body>\r\n                     </html>`;\r\n                     return str;\r\n    }\r\n\r\n    function buildGrammarReport(obj){\r\n        if(obj == null){return \"\";}\r\n        let str = \"\";\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            obj.forEach((value)=>{\r\n            if(typeof value === 'string' ){\r\n                str = str + `<li class= \"string\">\r\n                ${value}\r\n                </li>\r\n                `;\r\n            }else if(Array.isArray(value)){console.log(\"ERROR 5: Arreglo de arreglos\");}else{\r\n                for(let key in value){\r\n                    str = str + buildGrammarReport(value);\r\n                }\r\n            }\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            return \"\";\r\n            console.log(\"ERROR**************************\");\r\n        }else{// IS OBJECT\r\n            for(let key in obj){\r\n                str = `<li><span class=\"caret\">\r\n                ${key}\r\n                </span>\r\n                <ul class=\"nested\">\r\n                `;\r\n                str = str + buildGrammarReport(obj[key]);\r\n                str = str + `\r\n                </ul>\r\n                </li>`;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n//just for testing purposes\r\n\tfunction printstrack(obj, lines){\r\n\treturn;\r\n\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n            obj.forEach((value)=>{\r\n                if(typeof value === 'string' ){\r\n                     str = \"\"\r\n                     for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n                     console.log(str + value);\r\n                }else if(Array.isArray(value)){console.log(\"ERROR 5\");}else{\r\n                    str = \"\"\r\n                    for(let i = 0; i < lines; i++){ str = str + \"- \";}\r\n                    for(let key in value){\r\n                       console.log(`${str}${key}`);\r\n                       printstrack(value[key], lines + 1);\r\n                    }\r\n                }\r\n\r\n                //printstrack(value, lines +1);\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n            console.log(str + obj);\r\n        }else{// IS OBJECT\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){ str = str + \"- \";}\r\n            for(let key in obj){\r\n                console.log(`${str}Key: ${key}`);\r\n                //console.log(obj[key]);\r\n                printstrack(obj[key], lines + 1);\r\n            }\r\n        }\r\n\t}\r\n\r\n\r\n\r\n\r\n    function getCST(obj){\r\n        let str = `\r\n        <!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\">\r\n            <!-- Bootstrap CSS -->\r\n            <link crossorigin=\"anonymous\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n                  integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" rel=\"stylesheet\">\r\n            <title>CST</title>\r\n            <style>\r\n\r\n                #divheight{\r\n                    height: 400px;\r\n                    width: 1050px;\r\n                }\r\n\r\n                .nav-tabs > li .close {\r\n                    margin: -2px 0 0 10px;\r\n                    font-size: 18px;\r\n                }\r\n\r\n                .nav-tabs2 > li .close {\r\n                    margin: -2px 0 0 10px;\r\n                    font-size: 18px;\r\n                }\r\n\r\n            </style>\r\n\r\n            <style>\r\n                body {\r\n                    font-family: sans-serif;\r\n                    font-size: 15px;\r\n                }\r\n\r\n                .tree ul {\r\n                    position: relative;\r\n                    padding: 1em 0;\r\n                    white-space: nowrap;\r\n                    margin: 0 auto;\r\n                    text-align: center;\r\n                }\r\n                .tree ul::after {\r\n                    content: \"\";\r\n                    display: table;\r\n                    clear: both;\r\n                }\r\n\r\n                .tree li {\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    text-align: center;\r\n                    list-style-type: none;\r\n                    position: relative;\r\n                    padding: 1em 0.5em 0 0.5em;\r\n                }\r\n                .tree li::before, .tree li::after {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: 50%;\r\n                    border-top: 1px solid #ccc;\r\n                    width: 50%;\r\n                    height: 1em;\r\n                }\r\n                .tree li::after {\r\n                    right: auto;\r\n                    left: 50%;\r\n                    border-left: 1px solid #ccc;\r\n                }\r\n                /*\r\n                ul:hover::after  {\r\n                    transform: scale(1.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\r\n                }*/\r\n\r\n                .tree li:only-child::after, .tree li:only-child::before {\r\n                    display: none;\r\n                }\r\n                .tree li:only-child {\r\n                    padding-top: 0;\r\n                }\r\n                .tree li:first-child::before, .tree li:last-child::after {\r\n                    border: 0 none;\r\n                }\r\n                .tree li:last-child::before {\r\n                    border-right: 1px solid #ccc;\r\n                    border-radius: 0 5px 0 0;\r\n                }\r\n                .tree li:first-child::after {\r\n                    border-radius: 5px 0 0 0;\r\n                }\r\n\r\n                .tree ul ul::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 50%;\r\n                    border-left: 1px solid #ccc;\r\n                    width: 0;\r\n                    height: 1em;\r\n                }\r\n\r\n                .tree li a {\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em 0.75em;\r\n                    text-decoration: none;\r\n                    display: inline-block;\r\n                    border-radius: 5px;\r\n                    color: #333;\r\n                    position: relative;\r\n                    top: 1px;\r\n                }\r\n\r\n                .tree li a:hover,\r\n                .tree li a:hover + ul li a {\r\n                    background: #e9453f;\r\n                    color: #fff;\r\n                    border: 1px solid #e9453f;\r\n                }\r\n\r\n                .tree li a:hover + ul li::after,\r\n                .tree li a:hover + ul li::before,\r\n                .tree li a:hover + ul::before,\r\n                .tree li a:hover + ul ul::before {\r\n                    border-color: #e9453f;\r\n                }\r\n\r\n                /*# sourceMappingURL=sytle_.css.map */\r\n\r\n\r\n            </style>\r\n        </head>\r\n        <body>\r\n\r\n\r\n\r\n        <div class=\"tree\">\r\n            <ul id=\"tree-list\">\r\n\r\n            <!--AQUI-->\r\n        `;\r\n        str = str + buildCSTTree(obj);\r\n        str = str + `\r\n        </ul>\r\n        </div>\r\n\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\"></script>\r\n        <script crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n                src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\r\n        <script crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n                src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\r\n        </body>\r\n        </html>\r\n        `;\r\n        return str;\r\n    }\r\n\r\n    function buildCSTTree(obj){\r\n        if(obj == null){return \"\";}\r\n        let str = \"\";\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            obj.forEach((value)=>{\r\n            if(typeof value === 'string' ){\r\n                let words = value.split('Lexema:');\r\n                if(words.length == 2){\r\n                    let lex = words[1];     //TODO check not go out of bounds\r\n                    let token = words[0];\r\n                    str = str + `<li><a href=\"\">${token}</a><ul>\r\n                    <li><a href=\"\">${lex}\r\n                    </a></li>\r\n                    </ul></li>\r\n                    `;\r\n                }else{\r\n                    str = str + `<li><a href=\"\">${value}</a></li>\r\n                    `;\r\n                }\r\n\r\n\r\n            }else if(Array.isArray(value)){console.log(\"ERROR 5: Arreglo de arreglos\");}else{\r\n                for(let key in value){\r\n                    str = str + buildCSTTree(value);\r\n                }\r\n            }\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            return \"\";\r\n            console.log(\"ERROR**************************\");\r\n        }else{// IS OBJECT\r\n            for(let key in obj){\r\n                const words = key.split('->');\r\n                //console.log(words[3]);\r\n                str = `<li><a href=\"\">${words[0]}</a>\r\n                <ul>\r\n                `;\r\n                str = str + buildCSTTree(obj[key]) + `\r\n                </ul>\r\n                </li>`;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst { Atributo } = require('../model/xml/Atributo');\r\n\tconst { Element } = require('../model/xml/Element');\r\n\tconst { Encoding } = require('../model/xml/Encoding/Encoding');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:/* MultiLineComment*/\nbreak;\ncase 2:return 8;\nbreak;\ncase 3:return 11;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 21\nbreak;\ncase 7:return 23;\nbreak;\ncase 8: this.pushState('content');  return 12;\nbreak;\ncase 9:return 24;\nbreak;\ncase 10:return 16;\nbreak;\ncase 11:return 15;\nbreak;\ncase 12:return cadena_err;\nbreak;\ncase 13:return id_err;\nbreak;\ncase 14:/* MultiLineComment*/\nbreak;\ncase 15:\r\n                                    if(yy_.yytext.match(re)){return 22;}\r\n                                 \nbreak;\ncase 16:return 6\nbreak;\ncase 17:this.popState(); return 12;\nbreak;\ncase 18: this.popState(); return 21\nbreak;\ncase 19:  this.popState();\r\n                                    return 23;\nbreak;\ncase 20: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\ncase 21:return 6\nbreak;\ncase 22: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:<!--([^-]|-[^-])*-->)/i,/^(?:<\\?([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*))/i,/^(?:\\?>)/i,/^(?:(([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*)\\s*=))/i,/^(?:([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*))/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:((\"[^\\\"\\n]*[\\\"\\n])|('[^\\'\\n]*[\\'\\n])))/i,/^(?:([0-9]+(\\.[0-9]+)?([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*=?))/i,/^(?:{id_err})/i,/^(?:<!--([^-]|-[^-])*-->)/i,/^(?:(([^<>&\\\"]|&lt;|&gt;|&amp;|&apos;|&quot;)+))/i,/^(?:$)/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:.)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"content\":{\"rules\":[14,15,16,17,18,19,20],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,21,22],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xml_down;\nexports.Parser = xml_down.Parser;\nexports.parse = function () { return xml_down.parse.apply(xml_down, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","\"use strict\";\nvar Enum_1 = require(\"../../../model/xpath/Enum\");\nfunction Expresion(_expresion, _ambito, _contexto) {\n    var tipo = _expresion.tipo;\n    // console.log(_expresion, 1111111) // Agregar el caso de que sea una instrucción y abrir un bloque\n    if (tipo === Enum_1.Tipos.EXPRESION) {\n        return Expresion(_expresion.expresion, _ambito, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.NODENAME) {\n        return { valor: _expresion.nodename, tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.STRING || tipo === Enum_1.Tipos.NUMBER) {\n        return _expresion;\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_CURRENT) {\n        return { valor: \".\", tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_PARENT) {\n        return { valor: \"..\", tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_ATTRIBUTES) {\n        return { valor: _expresion.expresion, tipo: Enum_1.Tipos.ATRIBUTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_AXIS) {\n        var nodetest = Expresion(_expresion.nodetest.expresion, _ambito, _contexto);\n        if (nodetest.error)\n            return nodetest;\n        return { axisname: _expresion.axisname, nodetest: nodetest, predicate: _expresion.nodetest.predicate, tipo: Enum_1.Tipos.SELECT_AXIS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.ASTERISCO) {\n        return { valor: \"*\", tipo: Enum_1.Tipos.ASTERISCO, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_NODE) {\n        return { valor: \"node()\", tipo: Enum_1.Tipos.FUNCION_NODE, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_LAST) {\n        return { valor: \"last()\", tipo: Enum_1.Tipos.FUNCION_LAST, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        return { valor: \"position()\", tipo: Enum_1.Tipos.FUNCION_POSITION, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_TEXT) {\n        return { valor: \"text()\", tipo: Enum_1.Tipos.FUNCION_TEXT, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.OPERACION_SUMA || tipo === Enum_1.Tipos.OPERACION_RESTA || tipo === Enum_1.Tipos.OPERACION_MULTIPLICACION\n        || tipo === Enum_1.Tipos.OPERACION_DIVISION || tipo === Enum_1.Tipos.OPERACION_MODULO || tipo === Enum_1.Tipos.OPERACION_NEGACION_UNARIA) {\n        var Aritmetica = require(\"./Operators/Aritmetica\");\n        return Aritmetica(_expresion, _ambito, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.RELACIONAL_MAYOR || tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL\n        || tipo === Enum_1.Tipos.RELACIONAL_MENOR || tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL\n        || tipo === Enum_1.Tipos.RELACIONAL_IGUAL || tipo === Enum_1.Tipos.RELACIONAL_DIFERENTE) {\n        var Relacional = require(\"./Operators/Relacional\");\n        return Relacional(_expresion, _ambito, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.LOGICA_AND || tipo === Enum_1.Tipos.LOGICA_OR) {\n        var Logica = require(\"./Operators/Logica\");\n        return Logica(_expresion, _ambito, _contexto);\n    }\n    else {\n        console.log(_expresion, \"Expresión no reconocida.\");\n        // const Bloque = require(\"../Instruccion/Bloque\");\n        // return Bloque([_expresion], _ambito, _contexto);\n        return { error: \"Error: Expresión no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: _expresion.linea, columna: _expresion.columna };\n    }\n}\nmodule.exports = Expresion;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Bloque_1 = __importDefault(require(\"../controller/xpath/Instruccion/Bloque\"));\nvar Ambito_1 = require(\"../model/xml/Ambito/Ambito\");\nvar Global_1 = require(\"../model/xml/Ambito/Global\");\nvar Element_1 = require(\"../model/xml/Element\");\nfunction compile(req) {\n    var errors = [];\n    try {\n        // Datos de la petición desde Angular\n        var xml = req.xml;\n        var xPath = req.query;\n        var grammar_selected = req.grammar;\n        // Gramáticas a usarse según la selección: 1=ascendente, 2=descendente\n        var parser_xml = void 0, parser_xPath = void 0;\n        switch (grammar_selected) {\n            case 1:\n                parser_xml = require('../analyzers/xml_up');\n                parser_xPath = require('../analyzers/xpath_up');\n                break;\n            case 2:\n                parser_xml = require('../analyzers/xml_up');\n                parser_xPath = require('../analyzers/xpath_up');\n                break;\n        }\n        // Análisis de XML\n        var xml_ast = parser_xml.parse(xml);\n        var encoding = xml_ast.encoding; // Encoding del documento XML\n        if (encoding.encoding === encoding.codes.INVALID) {\n            errors.push({ tipo: \"Léxico\", error: \"La codificación del XML no es válida.\", origen: \"XML\", linea: \"1\", columna: \"1\" });\n        }\n        if (xml_ast.errors.length > 0 || xml_ast.ast === null || xml_ast === true) {\n            if (xml_ast.errors.length > 0)\n                errors = xml_ast.errors;\n            if (xml_ast.ast === null || xml_ast === true) {\n                errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: 1, columna: 1 });\n                return { output: \"El documento XML contiene errores para analizar.\\nIntente de nuevo.\", arreglo_errores: errors };\n            }\n        }\n        var xml_parse = xml_ast.ast; // AST que genera Jison\n        var global_1 = new Ambito_1.Ambito(null, \"global\"); // Ámbito global\n        var cadena = new Global_1.Global(xml_parse, global_1); // Llena la tabla de símbolos\n        var simbolos = cadena.ambito.getArraySymbols(); // Arreglo con los símbolos\n        // Análisis de XPath\n        var xPath_ast = parser_xPath.parse(xPath);\n        if (xPath_ast.errors.length > 0 || xPath_ast.ast === null || xPath_ast === true) {\n            if (xPath_ast.errors.length > 0)\n                errors = xPath_ast.errors;\n            if (xPath_ast.ast === null || xPath_ast === true) {\n                errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea de la consulta digitada.\", origen: \"XPath\", linea: 1, columna: 1 });\n                return { output: \"La consulta contiene errores para analizar.\\nIntente de nuevo.\", arreglo_errores: errors };\n            }\n        }\n        var root = new Element_1.Element(\"[object XMLDocument]\", [], \"\", cadena.ambito.tablaSimbolos, \"0\", \"0\", \"[object XMLDocument]\");\n        var output = { cadena: \"\", elementos: [root], atributos: null };\n        var xPath_parse = xPath_ast.ast; // AST que genera Jison\n        var bloque = Bloque_1.default(xPath_parse, cadena.ambito, output); // Procesa la secuencia de accesos (instrucciones)\n        if (bloque.error) {\n            errors.push(bloque);\n            return { arreglo_errores: errors, output: bloque.error };\n        }\n        output = {\n            arreglo_simbolos: simbolos,\n            arreglo_errores: errors,\n            output: bloque,\n            encoding: encoding\n        };\n        errors = [];\n        return output;\n    }\n    catch (error) {\n        console.log(error);\n        errors.push({ tipo: \"Desconocido\", error: \"Error en tiempo de ejecución.\", origen: \"\", linea: \"\", columna: \"\" });\n        var output = {\n            arreglo_simbolos: [],\n            arreglo_errores: errors,\n            output: (error.message) ? (\"Error sintáctico:\\n\" + String(error.message)) : String(error),\n            encoding: \"utf-8\"\n        };\n        errors = [];\n        return output;\n    }\n}\nmodule.exports = { compile: compile };\n","\"use strict\";\nvar Ambito_1 = require(\"./Ambito\");\nfunction exec(_expresiones, _ambito) {\n    _expresiones.forEach(function (element) {\n        if (element.childs) {\n            var nuevoAmbito = new Ambito_1.Ambito(_ambito, \"hijo\");\n            exec(element.childs, nuevoAmbito);\n        }\n        _ambito.addSimbolo(element);\n    });\n}\nmodule.exports = { exec: exec };\n","\"use strict\";\nfunction generateReport(req) {\n    var errors = [];\n    try {\n        // Datos de la petición desde Angular\n        var xml = req.xml;\n        var xPath = req.query;\n        var grammar_selected = req.grammar;\n        var report = req.report;\n        // Gramáticas a usarse según la selección: 1=ascendente, 2=descendente\n        var parser_xml = void 0, parser_xPath = void 0;\n        switch (grammar_selected) {\n            case 1:\n                parser_xml = require('../analyzers/xml_up');\n                parser_xPath = require('../analyzers/xpath_up');\n                break;\n            case 2:\n                parser_xml = require('../analyzers/xml_down');\n                parser_xPath = require('../analyzers/xpath_down');\n                break;\n        }\n        // Puede ser uno de los tres descritos\n        switch (report) {\n            case \"XML-CST\":\n                return CST_xml(parser_xml, xml);\n            case \"XML-GRAMMAR\":\n                return GrammarReport_xml(parser_xml, xml);\n            case \"XPATH-AST\":\n                return AST_xpath(parser_xPath, xPath);\n            default:\n                return { output: \"Algo salió mal.\" };\n        }\n    }\n    catch (error) {\n        console.log(error);\n        errors.push({ tipo: \"Desconocido\", error: \"Error en tiempo de ejecución.\", origen: \"\", linea: \"\", columna: \"\" });\n        var output = {\n            arreglo_errores: errors,\n            output: (error.message) ? String(error.message) : String(error),\n            cst: \"\"\n        };\n        errors = [];\n        return output;\n    }\n}\nfunction CST_xml(parser_xml, xml) {\n    var errors = [];\n    // Análisis de XML\n    var xml_ast = parser_xml.parse(xml);\n    var _cst = xml_ast.cst;\n    if (xml_ast.errors.length > 0 || xml_ast.ast === null || xml_ast === true) {\n        if (xml_ast.errors.length > 0)\n            errors = xml_ast.errors;\n        if (xml_ast.ast === null || xml_ast === true) {\n            errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: 1, columna: 1 });\n            return { output: \"El documento XML contiene errores para analizar.\\nIntente de nuevo.\", arreglo_errores: errors };\n        }\n    }\n    var output = {\n        arreglo_errores: errors,\n        output: \"CST generado.\",\n        cst: _cst\n    };\n    return output;\n}\nfunction GrammarReport_xml(parser_xml, xml) {\n    var errors = [];\n    // Análisis de XML\n    var xml_ast = parser_xml.parse(xml);\n    var _grammar = xml_ast.grammar_report;\n    if (xml_ast.errors.length > 0 || xml_ast.ast === null || xml_ast === true) {\n        if (xml_ast.errors.length > 0)\n            errors = xml_ast.errors;\n        if (xml_ast.ast === null || xml_ast === true) {\n            errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: 1, columna: 1 });\n            return { output: \"El documento XML contiene errores para analizar.\\nIntente de nuevo.\", arreglo_errores: errors };\n        }\n    }\n    var output = {\n        arreglo_errores: errors,\n        output: \"Reporte gramatical generado.\",\n        grammar_report: _grammar\n    };\n    return output;\n}\nfunction AST_xpath(parser_xpath, xpath) {\n    var errors = [];\n    // Análisis de XPath\n    var xpath_ast = parser_xpath.parse(xpath);\n    var _ast = xpath_ast.ast_report; //Confirmar nombre de propiedad\n    if (xpath_ast.errors.length > 0 || xpath_ast.ast === null || xpath_ast === true) {\n        if (xpath_ast.errors.length > 0)\n            errors = xpath_ast.errors;\n        if (xpath_ast.ast === null || xpath_ast === true) {\n            errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: 1, columna: 1 });\n            return { output: \"El documento XML contiene errores para analizar.\\nIntente de nuevo.\", arreglo_errores: errors };\n        }\n    }\n    var output = {\n        arreglo_errores: errors,\n        output: \"AST generado.\",\n        ast: _ast\n    };\n    return output;\n}\nmodule.exports = { generateReport: generateReport };\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xpath_down = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,20],$V3=[1,16],$V4=[1,17],$V5=[1,18],$V6=[1,19],$V7=[1,21],$V8=[1,22],$V9=[1,23],$Va=[1,12],$Vb=[1,13],$Vc=[1,14],$Vd=[1,15],$Ve=[1,24],$Vf=[1,25],$Vg=[1,26],$Vh=[1,27],$Vi=[1,28],$Vj=[1,29],$Vk=[1,30],$Vl=[1,31],$Vm=[1,32],$Vn=[1,33],$Vo=[1,34],$Vp=[1,35],$Vq=[1,36],$Vr=[2,4],$Vs=[1,39],$Vt=[5,8],$Vu=[2,7],$Vv=[5,8,11,12,18,21,22,23,24,25,26,27,28,29,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63],$Vw=[2,16],$Vx=[1,46],$Vy=[5,8,11,12,16,18,21,22,23,24,25,26,27,28,29,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63],$Vz=[1,58],$VA=[1,59],$VB=[1,68],$VC=[1,69],$VD=[1,70],$VE=[1,71],$VF=[1,72],$VG=[1,73],$VH=[1,74],$VI=[1,75],$VJ=[1,76],$VK=[1,77],$VL=[1,78],$VM=[1,79],$VN=[1,80],$VO=[18,21,22,23,24,25,26,27,28,29,31,32,33,34,35],$VP=[2,14],$VQ=[1,84],$VR=[18,21,22,23,24,31,32,33,34,35],$VS=[18,21,22,23,24,25,26,31,32,33,34,35];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"XPATH_U\":4,\"EOF\":5,\"XPATH\":6,\"XPATH_Up\":7,\"tk_line\":8,\"QUERY\":9,\"XPATHp\":10,\"tk_2bar\":11,\"tk_bar\":12,\"EXP_PR\":13,\"AXIS\":14,\"CORCHET\":15,\"tk_corA\":16,\"E\":17,\"tk_corC\":18,\"CORCHETpp\":19,\"CORCHETP\":20,\"tk_menorigual\":21,\"tk_menor\":22,\"tk_mayorigual\":23,\"tk_mayor\":24,\"tk_mas\":25,\"tk_menos\":26,\"tk_asterisco\":27,\"tk_div\":28,\"tk_mod\":29,\"tk_ParA\":30,\"tk_ParC\":31,\"tk_or\":32,\"tk_and\":33,\"tk_equal\":34,\"tk_diferent\":35,\"FUNC\":36,\"PRIMITIVO\":37,\"tk_id\":38,\"tk_attribute_d\":39,\"tk_attribute_s\":40,\"num\":41,\"tk_punto\":42,\"tk_2puntos\":43,\"tk_arroba\":44,\"tk_text\":45,\"tk_last\":46,\"tk_position\":47,\"tk_node\":48,\"AXISNAME\":49,\"tk_4puntos\":50,\"tk_ancestor\":51,\"tk_ancestor2\":52,\"tk_attribute\":53,\"tk_child\":54,\"tk_descendant\":55,\"tk_descendant2\":56,\"tk_following\":57,\"tk_following2\":58,\"tk_namespace\":59,\"tk_parent\":60,\"tk_preceding\":61,\"tk_preceding2\":62,\"tk_self\":63,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",8:\"tk_line\",11:\"tk_2bar\",12:\"tk_bar\",16:\"tk_corA\",18:\"tk_corC\",21:\"tk_menorigual\",22:\"tk_menor\",23:\"tk_mayorigual\",24:\"tk_mayor\",25:\"tk_mas\",26:\"tk_menos\",27:\"tk_asterisco\",28:\"tk_div\",29:\"tk_mod\",30:\"tk_ParA\",31:\"tk_ParC\",32:\"tk_or\",33:\"tk_and\",34:\"tk_equal\",35:\"tk_diferent\",38:\"tk_id\",39:\"tk_attribute_d\",40:\"tk_attribute_s\",41:\"num\",42:\"tk_punto\",43:\"tk_2puntos\",44:\"tk_arroba\",45:\"tk_text\",46:\"tk_last\",47:\"tk_position\",48:\"tk_node\",50:\"tk_4puntos\",51:\"tk_ancestor\",52:\"tk_ancestor2\",53:\"tk_attribute\",54:\"tk_child\",55:\"tk_descendant\",56:\"tk_descendant2\",57:\"tk_following\",58:\"tk_following2\",59:\"tk_namespace\",60:\"tk_parent\",61:\"tk_preceding\",62:\"tk_preceding2\",63:\"tk_self\"},\nproductions_: [0,[3,2],[4,2],[7,3],[7,0],[6,2],[10,2],[10,0],[9,2],[9,2],[9,1],[9,1],[15,4],[19,4],[19,0],[20,1],[20,0],[17,3],[17,3],[17,3],[17,3],[17,3],[17,3],[17,3],[17,3],[17,3],[17,2],[17,3],[17,3],[17,3],[17,3],[17,3],[17,1],[13,2],[13,2],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,2],[37,2],[36,3],[36,3],[36,3],[36,3],[14,3],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1],[49,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\tprod_1 = grammar_stack.pop();\n\tprod_2 = grammar_stack.pop();\n\tgrammar_stack.push({'ini -: XPATH_U EOF ':[prod_2, prod_1]});\n\tprintstrack(grammar_stack, 0);\n\tconsole.log('gramatica descendente');\n\t\nbreak;\ncase 2:\n\n\t\tprod_1 = grammar_stack.pop();\n\t\tprod_2 = grammar_stack.pop();\n\t\tgrammar_stack.push({'XPATH_U -: XPATH XPATH_Up ':[prod_2, prod_1]});\n\nbreak;\ncase 3:\n\n\t\tprod_1 = grammar_stack.pop();\n\t\tprod_2 = grammar_stack.pop();\n\t\tgrammar_stack.push({'XPATH_Up -: tk_line XPATH XPATH_Up ':['token: tk_line\\t Lexema: ' + $$[$0-2], prod_2, prod_1]});\n\nbreak;\ncase 4:\n grammar_stack.push({'XPATH_Up -: Empty': ['EMPTY']}); \nbreak;\ncase 5:\n\n\t\tprod_1 = grammar_stack.pop();\n\t\tprod_2 = grammar_stack.pop();\n\t\tgrammar_stack.push({'XPATH -: QUERY XPATHp ':[prod_2, prod_1]});\n\nbreak;\ncase 6:\n\n\t\tprod_1 = grammar_stack.pop();\n\t\tprod_2 = grammar_stack.pop();\n\t\tgrammar_stack.push({'XPATHp -: QUERY XPATHp ':[prod_2, prod_1]});\n\nbreak;\ncase 7:\n grammar_stack.push({'XPATHp -: Empty': ['EMPTY']}); \nbreak;\ncase 8:\n //this.$=builder.newDoubleAxis($$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t \t\t   grammar_stack.push({'QUERY -: tk_2bar QUERY': ['token: tk_2bar\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 9:\n //this.$=builder.newAxis($$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t \t\t grammar_stack.push({'QUERY -: tk_bar QUERY': ['token: tk_bar\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 10:\n //this.$=$$[$0];\n\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t   grammar_stack.push({'QUERY -: EXP_PR': [prod_1]}); \nbreak;\ncase 11:\n //this.$=$$[$0];\n\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t grammar_stack.push({'QUERY -: AXIS': [prod_1]}); \nbreak;\ncase 12:\n\n\t\t\tprod_1 = grammar_stack.pop();\n\t\t\tprod_2 = grammar_stack.pop();\n\t\t\tgrammar_stack.push({'CORCHET -: tk_corA E tk_corC CORCHETpp': ['token: tk_menorigual\\t Lexema: ' + $$[$0-3], prod_2, 'token: tk_menorigual\\t Lexema: ' + $$[$0-1], prod_1]});\t\n\nbreak;\ncase 13:\n\n\t\t\t\t\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\t\t\t\t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t\t\t\t\t\tgrammar_stack.push({'CORCHETpp -: tk_corA E tk_corC CORCHETpp ':['token: tk_menorigual\\t Lexema: ' + $$[$0-3], prod_2, 'token: tk_menorigual\\t Lexema: ' + $$[$0-1], prod_1]});\t\n\nbreak;\ncase 14:\n grammar_stack.push({'CORCHETpp -: Empty': ['EMPTY']}); \nbreak;\ncase 15:\n prod_1 = grammar_stack.pop();\n\t\t\t\t\tgrammar_stack.push({'CORCHETP -: CORCHET': [prod_1]}) \nbreak;\ncase 16:\n grammar_stack.push({'CORCHETP -: Empty': ['EMPTY']}); \nbreak;\ncase 17:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENORIGUAL, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t \t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t    grammar_stack.push({'E -: E tk_menorigual E': [prod_2, 'token: tk_menorigual\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 18:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENOR, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t\t \t prod_2 = grammar_stack.pop();\n\t\t\t\t \t grammar_stack.push({'E -: E tk_menor E': [prod_2, 'token: tk_menor\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 19:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYORIGUAL, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t  prod_1 = grammar_stack.pop();\n\t\t\t\t \t\t  prod_2 = grammar_stack.pop();\n\t\t\t\t\t\t  grammar_stack.push({'E -: E tk_mayorigual E': [prod_2, 'token: tk_mayorigual\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 20:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYOR, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t\t \t prod_2 = grammar_stack.pop();\n\t\t\t\t \t grammar_stack.push({'E -: E tk_mayor E': [prod_2, 'token: tk_mayor\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 21:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_SUMA, this._$.first_line, this._$.first_column+1);\n\t\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t\t   prod_2 = grammar_stack.pop();\n\t\t\t\t   grammar_stack.push({'E -: E tk_mas E': [prod_2, 'token: tk_mas\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 22:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_RESTA, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t\t \t prod_2 = grammar_stack.pop();\n\t\t\t\t  \t grammar_stack.push({'E -: E tk_menos E': [prod_2, 'token: tk_menos\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 23:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MULTIPLICACION, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t\t \t\t prod_2 = grammar_stack.pop();\n\t\t\t\t  \t\t grammar_stack.push({'E -: E tk_asterisco E': [prod_2, 'token: tk_asterisco\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 24:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_DIVISION, this._$.first_line, this._$.first_column+1);\n\t\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t\t   prod_2 = grammar_stack.pop();\n\t\t\t\t   grammar_stack.push({'E -: E tk_div E': [prod_2, 'token: tk_div\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 25:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MODULO, this._$.first_line, this._$.first_column+1);\n\t\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t\t   prod_2 = grammar_stack.pop();\n\t\t\t\t   grammar_stack.push({'E -: E tk_mod E': [prod_2, 'token: tk_mod\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 26:\n //this.$=builder.newOperation($$[$0], null, Tipos.OPERACION_NEGACION_UNARIA, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\t  \t\tgrammar_stack.push({'E -: tk_menos E': ['token: tk_menos\\t Lexema: ' + $$[$0-1], prod_1]});\nbreak;\ncase 27:\n //this.$=$$[$0-1];\n\t\t\t\t\t\t  prod_1 = grammar_stack.pop();\n\t\t\t\t\t\t  grammar_stack.push({'E -: tk_ParA E tk_ParC': ['token: tk_ParA\\t Lexema: ' + $$[$0-2], prod_1, 'token: tk_ParC\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 28:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_OR, this._$.first_line, this._$.first_column+1);\n\t\t\t\t  prod_1 = grammar_stack.pop();\n\t\t\t\t  prod_2 = grammar_stack.pop();\n\t\t\t\t  grammar_stack.push({'E -: E tk_or E': [prod_2, 'token: tk_or\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 29:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_AND, this._$.first_line, this._$.first_column+1);\n\t\t\t\t   prod_1 = grammar_stack.pop();\n\t\t\t\t   prod_2 = grammar_stack.pop();\n\t\t\t\t   grammar_stack.push({'E -: E tk_and E': [prod_2, 'token: tk_and\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 30:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_IGUAL, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t prod_1 = grammar_stack.pop();\n\t\t\t\t\t prod_2 = grammar_stack.pop();\n\t\t\t\t\t grammar_stack.push({'E -: E tk_equal E': [prod_2, 'token: tk_equal\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 31:\n //this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_DIFERENTE, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t\tgrammar_stack.push({'E -: E tk_diferent E': [prod_2, 'token: tk_diferent\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 32:\n //this.$=$$[$0];\n\t\t\t  prod_1 = grammar_stack.pop();\n\t\t\t  grammar_stack.push({'E -: QUERY': [prod_1]}); \nbreak;\ncase 33:\n //this.$=builder.newExpression($$[$0-1], $$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t\tgrammar_stack.push({'EXP_PR -: FUNC CORCHETP': [prod_2, prod_1]}); \nbreak;\ncase 34:\n //this.$=builder.newExpression($$[$0-1], $$[$0], this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\t\t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t\t\t\tgrammar_stack.push({'EXP_PR -: PRIMITIVO CORCHETP': [prod_2, prod_1]}); \nbreak;\ncase 35:\n //this.$=builder.newNodename($$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t   grammar_stack.push({'PRIMITIVO -: tk_id':['token: tk_text\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 36:\n //this.$=builder.newValue($$[$0], Tipos.STRING, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t   grammar_stack.push({'PRIMITIVO -: tk_attribute_d':['token: tk_attribute_d\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 37:\n //this.$=builder.newValue($$[$0], Tipos.STRING, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t   grammar_stack.push({'PRIMITIVO -: tk_attribute_s':['token: tk_attribute_s\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 38:\n //this.$=builder.newValue($$[$0], Tipos.NUMBER, this._$.first_line, this._$.first_column+1);\n\t\t\t\tgrammar_stack.push({'PRIMITIVO -: num':['token: num\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 39:\n //this.$=builder.newValue($$[$0], Tipos.ASTERISCO, this._$.first_line, this._$.first_column+1);\n\t\t\t\t   grammar_stack.push({'PRIMITIVO -: tk_asterisco':['token: tk_asterisco\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 40:\n //this.$=builder.newCurrent($$[$0], this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t grammar_stack.push({'PRIMITIVO -: tk_punto':['token: tk_punto\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 41:\n //this.$=builder.newParent($$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t   grammar_stack.push({'PRIMITIVO -: tk_2puntos':['token: tk_2puntos\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 42:\n //this.$=builder.newAttribute($$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t\tgrammar_stack.push({'PRIMITIVO -: tk_arroba tk_id':['token: tk_arroba\\t Lexema: ' + $$[$0-1], 'token: tk_id\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 43:\n //this.$=builder.newAttribute($$[$0], this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t\t grammar_stack.push({'PRIMITIVO -: tk_arroba tk_asterisco':['token: tk_arroba\\t Lexema: ' + $$[$0-1], 'token: tk_asterisco\\t Lexema: ' + $$[$0]]});\nbreak;\ncase 44:\n //this.$=builder.newValue($$[$0-2], Tipos.FUNCION_TEXT, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t\t\tgrammar_stack.push({'FUNC -: tk_text tk_ParA tk_ParC':['token: tk_text\\t Lexema: ' + $$[$0-2], 'token: tk_ParA\\t Lexema: ' + $$[$0-1], 'token: tk_ParC\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 45:\n //this.$=builder.newValue($$[$0-2], Tipos.FUNCION_LAST, this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t\t\tgrammar_stack.push({'FUNC -: tk_last tk_ParA tk_ParC':['token: tk_last\\t Lexema: ' + $$[$0-2], 'token: tk_ParA\\t Lexema: ' + $$[$0-1], 'token: tk_ParC\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 46:\n //this.$=builder.newValue($$[$0-2], Tipos.FUNCION_POSITION, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t\t\t\tgrammar_stack.push({'FUNC -: tk_position tk_ParA tk_ParC':['token: tk_position\\t Lexema: ' + $$[$0-2], 'token: tk_ParA\\t Lexema: ' + $$[$0-1], 'token: tk_ParC\\t Lexema: ' + $$[$0]]});\nbreak;\ncase 47:\n //this.$=builder.newValue($$[$0-2], Tipos.FUNCION_NODE, this._$.first_line, this._$.first_column+1); \n\t\t\t\t\t\t\t\tgrammar_stack.push({'FUNC -: tk_node tk_ParA tk_ParC':['token: tk_node\\t Lexema: ' + $$[$0-2], 'token: tk_ParA\\t Lexema: ' + $$[$0-1], 'token: tk_ParC\\t Lexema: ' + $$[$0]]});\nbreak;\ncase 48:\n //this.$=builder.newAxisObject($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1);\n\t\t\t\t\t\t\t\tprod_1 = grammar_stack.pop();\n\t\t\t\t\t\t\t\tprod_2 = grammar_stack.pop();\n\t\t\t\t\t\t\t\tgrammar_stack.push({'AXIS -: AXISNAME tk_4puntos QUERY':[prod_2, 'token: tk_4puntos\\t Lexema: ' + $$[$0-1], prod_1]}); \nbreak;\ncase 49:\n //this.$ = Tipos.AXIS_ANCESTOR;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_ancestor':['token: tk_ancestor\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 50:\n //this.$ = Tipos.AXIS_ANCESTOR_OR_SELF;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_ancestor2':['token: tk_ancestor2\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 51:\n //this.$ = Tipos.AXIS_ATTRIBUTE;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_attribute':['token: tk_attribute\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 52:\n //this.$ = Tipos.AXIS_CHILD;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_child':['token: tk_child\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 53:\n //this.$ = Tipos.AXIS_DESCENDANT;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_descendant':['token: tk_descendant\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 54:\n //this.$ = Tipos.AXIS_DESCENDANT_OR_SELF;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_descendant2':['token: tk_descendant2\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 55:\n //this.$ = Tipos.AXIS_FOLLOWING;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_following':['token: tk_following\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 56:\n //this.$ = Tipos.AXIS_FOLLOWING_SIBLING;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_following2':['token: tk_follownig2\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 57:\n //this.$ = Tipos.AXIS_NAMESPACE;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_namespace':['token: tk_namespace\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 58:\n //this.$ = Tipos.AXIS_PARENT;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_parent':['token: tk_parent\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 59:\n //this.$ = Tipos.AXIS_PRECEDING;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_preceding':['token: tk_preceding\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 60:\n //this.$ = Tipos.AXIS_PRECEDING_SIBLING;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_preceding2':['token: tk_preceding2\\t Lexema: ' + $$[$0]]}); \nbreak;\ncase 61:\n //this.$ = Tipos.AXIS_SELF;\n\t\t\t\t\t\tgrammar_stack.push({'AXISNAME -: tk_self':['token: tk_self\\t Lexema: ' + $$[$0]]}); \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,9:4,11:$V0,12:$V1,13:7,14:8,27:$V2,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{1:[3]},{5:[1,37]},{5:$Vr,7:38,8:$Vs},o($Vt,$Vu,{13:7,14:8,36:9,37:10,49:11,10:40,9:41,11:$V0,12:$V1,27:$V2,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq}),{9:42,11:$V0,12:$V1,13:7,14:8,27:$V2,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:43,11:$V0,12:$V1,13:7,14:8,27:$V2,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($Vv,[2,10]),o($Vv,[2,11]),o($Vv,$Vw,{20:44,15:45,16:$Vx}),o($Vv,$Vw,{15:45,20:47,16:$Vx}),{50:[1,48]},{30:[1,49]},{30:[1,50]},{30:[1,51]},{30:[1,52]},o($Vy,[2,35]),o($Vy,[2,36]),o($Vy,[2,37]),o($Vy,[2,38]),o($Vy,[2,39]),o($Vy,[2,40]),o($Vy,[2,41]),{27:[1,54],38:[1,53]},{50:[2,49]},{50:[2,50]},{50:[2,51]},{50:[2,52]},{50:[2,53]},{50:[2,54]},{50:[2,55]},{50:[2,56]},{50:[2,57]},{50:[2,58]},{50:[2,59]},{50:[2,60]},{50:[2,61]},{1:[2,1]},{5:[2,2]},{6:55,9:4,11:$V0,12:$V1,13:7,14:8,27:$V2,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($Vt,[2,5]),o($Vt,$Vu,{13:7,14:8,36:9,37:10,49:11,9:41,10:56,11:$V0,12:$V1,27:$V2,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq}),o($Vv,[2,8]),o($Vv,[2,9]),o($Vv,[2,33]),o($Vv,[2,15]),{9:60,11:$V0,12:$V1,13:7,14:8,17:57,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($Vv,[2,34]),{9:61,11:$V0,12:$V1,13:7,14:8,27:$V2,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{31:[1,62]},{31:[1,63]},{31:[1,64]},{31:[1,65]},o($Vy,[2,42]),o($Vy,[2,43]),{5:$Vr,7:66,8:$Vs},o($Vt,[2,6]),{18:[1,67],21:$VB,22:$VC,23:$VD,24:$VE,25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ,32:$VK,33:$VL,34:$VM,35:$VN},{9:60,11:$V0,12:$V1,13:7,14:8,17:81,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:82,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($VO,[2,32]),o($Vv,[2,48]),o($Vy,[2,44]),o($Vy,[2,45]),o($Vy,[2,46]),o($Vy,[2,47]),{5:[2,3]},o($Vv,$VP,{19:83,16:$VQ}),{9:60,11:$V0,12:$V1,13:7,14:8,17:85,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:86,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:87,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:88,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:89,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:90,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:91,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:92,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:93,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:94,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:95,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:96,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},{9:60,11:$V0,12:$V1,13:7,14:8,17:97,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($VO,[2,26]),{21:$VB,22:$VC,23:$VD,24:$VE,25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ,31:[1,98],32:$VK,33:$VL,34:$VM,35:$VN},o($Vv,[2,12]),{9:60,11:$V0,12:$V1,13:7,14:8,17:99,26:$Vz,27:$V2,30:$VA,36:9,37:10,38:$V3,39:$V4,40:$V5,41:$V6,42:$V7,43:$V8,44:$V9,45:$Va,46:$Vb,47:$Vc,48:$Vd,49:11,51:$Ve,52:$Vf,53:$Vg,54:$Vh,55:$Vi,56:$Vj,57:$Vk,58:$Vl,59:$Vm,60:$Vn,61:$Vo,62:$Vp,63:$Vq},o($VR,[2,17],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VR,[2,18],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VR,[2,19],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VR,[2,20],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VS,[2,21],{27:$VH,28:$VI,29:$VJ}),o($VS,[2,22],{27:$VH,28:$VI,29:$VJ}),o($VO,[2,23]),o($VO,[2,24]),o($VO,[2,25]),o([18,31,32],[2,28],{21:$VB,22:$VC,23:$VD,24:$VE,25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ,33:$VL,34:$VM,35:$VN}),o([18,31,32,33],[2,29],{21:$VB,22:$VC,23:$VD,24:$VE,25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ,34:$VM,35:$VN}),o($VR,[2,30],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VR,[2,31],{25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ}),o($VO,[2,27]),{18:[1,100],21:$VB,22:$VC,23:$VD,24:$VE,25:$VF,26:$VG,27:$VH,28:$VI,29:$VJ,32:$VK,33:$VL,34:$VM,35:$VN},o($Vv,$VP,{19:101,16:$VQ}),o($Vv,[2,13])],\ndefaultActions: {24:[2,49],25:[2,50],26:[2,51],27:[2,52],28:[2,53],29:[2,54],30:[2,55],31:[2,56],32:[2,57],33:[2,58],34:[2,59],35:[2,60],36:[2,61],37:[2,1],38:[2,2],66:[2,3]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n\tvar attribute = '';\n\tvar errors = [];\n\tlet grammar_stack = [];\n\tfunction printstrack(obj, lines){\n        if(Array.isArray(obj)){ //IS ARRAY\n            str = \"\"\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\n            obj.forEach((value)=>{\n                if(typeof value === 'string' ){\n                     str = \"\"\n                     for(let i = 0; i < lines; i++){str = str + \"- \";}\n                     console.log(str + value);\n                }else if(Array.isArray(value)){console.log(\"ERROR 5\");}else{\n                    str = \"\"\n                    for(let i = 0; i < lines; i++){ str = str + \"- \";}\n                    for(let key in value){\n                       console.log(`${str}${key}`);\n                       printstrack(value[key], lines + 1);\n                    }\n                }\n\n                //printstrack(value, lines +1);\n            });\n        }else if(typeof obj === 'string' ){ // IS STRING\n            str = \"\"\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\n            console.log(str + obj);\n        }else{// IS OBJECT\n            str = \"\"\n            for(let i = 0; i < lines; i++){ str = str + \"- \";}\n            for(let key in obj){\n                console.log(`${str}Key: ${key}`);\n                //console.log(obj[key]);\n                printstrack(obj[key], lines + 1);\n            }\n        }\n\t}\n\nfunction getASTTree(obj){\n    let str = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\">\n  <!-- Bootstrap CSS -->\n  <link crossorigin=\"anonymous\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" rel=\"stylesheet\">\n  <title>Title</title>\n  <style>\n    #divheight{\n      height: 400px;\n      width: 1050px;\n    }\n    .nav-tabs > li .close {\n      margin: -2px 0 0 10px;\n      font-size: 18px;\n    }\n    .nav-tabs2 > li .close {\n      margin: -2px 0 0 10px;\n      font-size: 18px;\n    }\n\n  </style>\n\n  <style>\n    body {\n      font-family: sans-serif;\n      font-size: 15px;\n    }\n\n    .tree ul {\n      position: relative;\n      padding: 1em 0;\n      white-space: nowrap;\n      margin: 0 auto;\n      text-align: center;\n    }\n    .tree ul::after {\n      content: \"\";\n      display: table;\n      clear: both;\n    }\n\n    .tree li {\n      display: inline-block;\n      vertical-align: top;\n      text-align: center;\n      list-style-type: none;\n      position: relative;\n      padding: 1em 0.5em 0 0.5em;\n    }\n    .tree li::before, .tree li::after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      right: 50%;\n      border-top: 1px solid #ccc;\n      width: 50%;\n      height: 1em;\n    }\n    .tree li::after {\n      right: auto;\n      left: 50%;\n      border-left: 1px solid #ccc;\n    }\n    /*\n    ul:hover::after  {\n        transform: scale(1.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\n    }*/\n\n    .tree li:only-child::after, .tree li:only-child::before {\n      display: none;\n    }\n    .tree li:only-child {\n      padding-top: 0;\n    }\n    .tree li:first-child::before, .tree li:last-child::after {\n      border: 0 none;\n    }\n    .tree li:last-child::before {\n      border-right: 1px solid #ccc;\n      border-radius: 0 5px 0 0;\n    }\n    .tree li:first-child::after {\n      border-radius: 5px 0 0 0;\n    }\n\n    .tree ul ul::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 50%;\n      border-left: 1px solid #ccc;\n      width: 0;\n      height: 1em;\n    }\n\n    .tree li a {\n      border: 1px solid #ccc;\n      padding: 0.5em 0.75em;\n      text-decoration: none;\n      display: inline-block;\n      border-radius: 5px;\n      color: #333;\n      position: relative;\n      top: 1px;\n    }\n\n    .tree li a:hover,\n    .tree li a:hover + ul li a {\n      background: #e9453f;\n      color: #fff;\n      border: 1px solid #e9453f;\n    }\n\n    .tree li a:hover + ul li::after,\n    .tree li a:hover + ul li::before,\n    .tree li a:hover + ul::before,\n    .tree li a:hover + ul ul::before {\n      border-color: #e9453f;\n    }\n\n    /*# sourceMappingURL=sytle_.css.map */\n\n\n  </style>\n</head>\n<body>\n\n\n\n<div class=\"tree\">\n  <ul id=\"tree-list\">\n\n    <!--AQUI-->\n    `\n\n    str = str +printObj(obj, 0, \"\")\n    str =  str + `</ul>\n\n\n\n</div>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\n        src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n<script crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\n        src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n</body>\n</html>\n`\n    return str;\n}\n\n\nfunction printObj(obj, lines, name){\n    console.log(obj)\n    let str = \"\";\n    let str_ = \"\";\n    if(Array.isArray(obj)) { //IS ARRAY\n        for (let i = 0; i < obj.length; i++){\n            str = str +printObj(obj[i], lines, \"\");\n        }\n    }else if (typeof obj === 'object' ){// IS OBJECT\n        if(obj.tipo === 'SELECT_FROM_CURRENT' || obj.tipo === 'SELECT_FROM_ROOT'){ // TODO select Parent\n            str = `<li>`;\n            str = str + printObj(obj.expresion, 0, (obj.tipo === 'SELECT_FROM_ROOT'? \"/\": \"//\" ));\n            str = str + getPredicados(obj.expresion);\n            str = str + `</li>`\n            console.log(str);\n        }else if(obj.tipo === 'EXPRESION'){\n            if (typeof obj.expresion === 'object'){\n                str = `<a>` + name + getName(obj.expresion) + `</a>`;\n            }\n        }\n    } else { // IS STRING\n        for (let i = 0; i < lines; i++) {\n\n            str_ = str_ + \"- \";\n        }\n    }\n    return str;\n}\n\n\n\nfunction getName(obj){\n\n    let str = \"\";\n    if (obj.tipo ==='NODENAME'){\n        //console.log(obj)\n        return obj.nodename;\n    }else if(obj.tipo === 'SELECT_PARENT'){\n        return  obj.expresion;\n    }else if(obj.tipo === 'SELECT_CURRENT'){\n        return obj.expresion;\n    }else if(obj.tipo === 'ASTERISCO'){\n        return obj.valor;\n    }else if(obj.tipo === 'FUNCION_TEXT'){\n        return obj.valor;\n    }else if(obj.tipo === 'FUNCION_NODE'){\n        return obj.valor;\n    }else if(obj.tipo === 'SELECT_ATTRIBUTES'){\n        return obj.expresion;\n    }else {\n        console.log(\"Error 1\")\n        console.log(obj)\n    }\n    return str\n}\n\nfunction getPredicados(obj){\n    let str = \"\";\n    console.log(obj)\n    if (obj.predicate !== null && obj.predicate !== undefined){\n\n        str = `<ul>\\n`;\n        for (let i = 0; i < obj.predicate.length;i++){\n            str = str + getPredicado(obj.predicate[i]);\n        }\n        str = str + `</ul>`;\n    }\n    return str;\n}\n\n\nfunction getPredicado(obj){\n    let str = \"\"\n    if(obj.tipo === 'PREDICATE'){\n        //str = `<li><a> ` + obj.condicion.tipo + `</a>\n        //<ul>`\n        str = str + getPredicado(obj.condicion);\n        //str = str + `\n        //</ul></li>`;\n    }else if(obj.tipo === 'EXPRESION'){ //TODO to check\n        if('valor' in obj.expresion){\n            str = `<li><a>` + obj.expresion.valor + `</a></li>\n            `;\n\n        }else if('nodename' in obj.expresion){\n            str = `<li><a>` + obj.expresion.nodename + `</a></li>\n            `;\n\n        }else if(obj.expresion.tipo === 'SELECT_ATTRIBUTES'){\n            str = `<li><a>` + \"@\" + obj.expresion.expresion + `</a></li>\n            `;\n\n        }else {\n            console.log(\"error 2\")\n            console.log(obj)\n        }\n\n\n    }else{\n        str = `<li><a>` + obj.tipo + `</a>\n                <ul>`\n        str = str + getPredicado(obj.opIzq);\n        str = str + getPredicado(obj.opDer);\n        str = str + `</ul></li>`\n    }\n\n    return str;\n}\n\n\n\n\n\tconst { Objeto } = require('../model/xpath/Objeto');\n\tconst { Tipos } = require('../model/xpath/Enum');\n\tvar builder = new Objeto();\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// XPATHComment\nbreak;\ncase 2:// MultiLineComment\nbreak;\ncase 3:// Declaration XML\nbreak;\ncase 4:return 28\nbreak;\ncase 5:return 41\nbreak;\ncase 6:return 21\nbreak;\ncase 7:return 23\nbreak;\ncase 8:return 22\nbreak;\ncase 9:return 24\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 12\nbreak;\ncase 12:return 34\nbreak;\ncase 13:return 43\nbreak;\ncase 14:return 42\nbreak;\ncase 15:return 50\nbreak;\ncase 16:return 44\nbreak;\ncase 17:return 16\nbreak;\ncase 18:return 18\nbreak;\ncase 19:return 30\nbreak;\ncase 20:return 31\nbreak;\ncase 21:return 27\nbreak;\ncase 22:return 52\nbreak;\ncase 23:return 51\nbreak;\ncase 24:return 53\nbreak;\ncase 25:return 54\nbreak;\ncase 26:return 56\nbreak;\ncase 27:return 55\nbreak;\ncase 28:return 58\nbreak;\ncase 29:return 57\nbreak;\ncase 30:return 59\nbreak;\ncase 31:return 60\nbreak;\ncase 32:return 62\nbreak;\ncase 33:return 61\nbreak;\ncase 34:return 63\nbreak;\ncase 35:return 48\nbreak;\ncase 36:return 46\nbreak;\ncase 37:return 45\nbreak;\ncase 38:return 47\nbreak;\ncase 39:return 8\nbreak;\ncase 40:return 25\nbreak;\ncase 41:return 26\nbreak;\ncase 42:return 35\nbreak;\ncase 43:return 32\nbreak;\ncase 44:return 33\nbreak;\ncase 45:return 29\nbreak;\ncase 46:return 38\nbreak;\ncase 47: attribute = ''; this.begin(\"string_doubleq\"); \nbreak;\ncase 48: attribute += yy_.yytext; \nbreak;\ncase 49: attribute += \"\\\"\"; \nbreak;\ncase 50: attribute += \"\\n\"; \nbreak;\ncase 51: attribute += \" \";  \nbreak;\ncase 52: attribute += \"\\t\"; \nbreak;\ncase 53: attribute += \"\\\\\"; \nbreak;\ncase 54: attribute += \"\\'\"; \nbreak;\ncase 55: attribute += \"\\r\"; \nbreak;\ncase 56: yy_.yytext = attribute; this.popState(); return 39; \nbreak;\ncase 57: attribute = ''; this.begin(\"string_singleq\"); \nbreak;\ncase 58: attribute += yy_.yytext; \nbreak;\ncase 59: attribute += \"\\\"\"; \nbreak;\ncase 60: attribute += \"\\n\"; \nbreak;\ncase 61: attribute += \" \";  \nbreak;\ncase 62: attribute += \"\\t\"; \nbreak;\ncase 63: attribute += \"\\\\\"; \nbreak;\ncase 64: attribute += \"\\'\"; \nbreak;\ncase 65: attribute += \"\\r\"; \nbreak;\ncase 66: yy_.yytext = attribute; this.popState(); return 40; \nbreak;\ncase 67:return 5\nbreak;\ncase 68:return 'anything'\nbreak;\ncase 69: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XPath\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:\\(:[\\s\\S\\n]*?:\\))/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:div\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:::)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\*)/i,/^(?:ancestor-or-self\\b)/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:child\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:descendant\\b)/i,/^(?:following-sibling\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:preceding\\b)/i,/^(?:self\\b)/i,/^(?:node\\b)/i,/^(?:last\\b)/i,/^(?:text\\b)/i,/^(?:position\\b)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:!=)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:['])/i,/^(?:[^'\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:['])/i,/^(?:$)/i,/^(?:[^><\\/]+)/i,/^(?:.)/i],\nconditions: {\"string_singleq\":{\"rules\":[58,59,60,61,62,63,64,65,66],\"inclusive\":false},\"string_doubleq\":{\"rules\":[48,49,50,51,52,53,54,55,56],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,67,68,69],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xpath_down;\nexports.Parser = xpath_down.Parser;\nexports.parse = function () { return xpath_down.parse.apply(xpath_down, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xml_up = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,12],$V2=[1,18],$V3=[1,16],$V4=[1,17],$V5=[2,13],$V6=[2,6,23],$V7=[2,21,22,23],$V8=[2,6,21,23],$V9=[1,34],$Va=[1,35],$Vb=[1,36],$Vc=[1,37],$Vd=[2,21,23],$Ve=[2,11,12,14,16,17,18,21,22,23,24];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INI\":3,\"XML_DECLARATION\":4,\"ROOT\":5,\"EOF\":6,\"XML\":7,\"tk_open_declaration\":8,\"ATTRIBUTE_LIST\":9,\"XML_CLOSE_DECLARATION\":10,\"tk_close_delcaraton\":11,\"tk_close\":12,\"ATTRIBUTE\":13,\"tk_attribute_name\":14,\"tk_string\":15,\"tk_equal\":16,\"tk_tag_name\":17,\"cadena_err\":18,\"XML_OPEN\":19,\"CHILDREN\":20,\"tk_open_end_tag\":21,\"tk_content\":22,\"tk_open\":23,\"tk_bar\":24,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\"tk_open_declaration\",11:\"tk_close_delcaraton\",12:\"tk_close\",14:\"tk_attribute_name\",15:\"tk_string\",16:\"tk_equal\",17:\"tk_tag_name\",18:\"cadena_err\",21:\"tk_open_end_tag\",22:\"tk_content\",23:\"tk_open\",24:\"tk_bar\"},\nproductions_: [0,[3,3],[3,2],[3,2],[3,1],[3,2],[5,2],[5,1],[4,3],[10,1],[10,1],[10,2],[9,2],[9,0],[13,2],[13,1],[13,2],[13,1],[13,2],[13,1],[7,5],[7,5],[7,5],[7,4],[7,3],[7,3],[7,4],[7,4],[7,6],[7,4],[7,4],[7,4],[7,3],[7,3],[7,2],[19,4],[19,3],[19,1],[19,2],[20,2],[20,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n/*$$[$0-2][0].printTest(0);console.log($$[$0-2][0].getTree());*/\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            prod_2 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI-> XML_DECLARATION ROOT EOF {﹩ = [﹩1, ﹩2]}': [prod_2, prod_1, 'EOF' ]});\r\n                                            //printstrack(grammar_stack, 0); //TODO: Delete is just for testing purposes\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n                                            cst = getCST(grammar_stack);\r\n\r\n                                            if($$[$0-2]!= null){\r\n                                                encoding = new Encoding($$[$0-2]);\r\n                                                ast = { ast: $$[$0-1], encoding: encoding, errors: errors, cst: cst, grammar_report: grammar_report};\r\n                                            } else{\r\n                                                errors.push({ tipo: \"Sintáctico\", error: \"La codificación del XML no es válida.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors };\r\n                                                ast = { ast: $$[$0-1], encoding: null,  errors: errors, cst: cst, grammar_report: grammar_report};\r\n                                            }\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 2:\n\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI -> XML_DECLARATION  EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [prod_1, 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 3:\n\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            grammar_stack.push({'INI -> ROOT EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [prod_1, 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Falta declaración del XML\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 4:\n\r\n                                            grammar_stack.push({'INI -> EOF {\terrors.add(new Error()); ﹩﹩ = null;}': [ 'EOF']});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"El archivo viene vacío.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n\t                                        ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report }\r\n\t                                        errors = [];\r\n\t                                        return ast;\r\n\t                                        \nbreak;\ncase 5:\n\r\n\t                                        grammar_stack.push({'INI -> error EOF {\terrors.add(new Error()); ﹩﹩ = null;}': ['Token: error\\t Lexema: ', 'EOF' ]});\r\n                                            grammar_report =  getGrammarReport(grammar_stack);\r\n\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            ast = { ast: null, encoding: null,  errors: errors, cst: null, grammar_report: grammar_report };\r\n                                            errors = [];\r\n                                            return ast;\r\n                                            \nbreak;\ncase 6:\n$$[$0-1].push($$[$0]);\r\n                                                prod_1 = grammar_stack.pop();\r\n                                                prod_2 = grammar_stack.pop();\r\n                                                grammar_stack.push({'ROOT -> ROOT XML {﹩﹩ = ﹩1.push(₤2);}': [prod_2, prod_1 ]});\r\n                                                \nbreak;\ncase 7:\nthis.$ = [$$[$0]];\r\n\t                                            prod_1 = grammar_stack.pop();\r\n\t                                            grammar_stack.push({'ROOT -> XML{﹩﹩ = []; ﹩﹩.push($$[$0]);}': [prod_1 ]});\r\n\t                                            \nbreak;\ncase 8:\nif($$[$0-1] == null || $$[$0] == null){\r\n                                                                            this.$ = null}else{\r\n                                                                            let str = \"\";\r\n                                                                           $$[$0-1].forEach((value)=>{\r\n                                                                           str = str + value.id+value.value;\r\n                                                                           });\r\n                                                                           this.$=str;\r\n                                                                           }\r\n\r\n                                                                           prod_3 = grammar_stack.pop();\r\n                                                                           prod_2 = grammar_stack.pop();\r\n                                                                           grammar_stack.push({'XML_DECLARATION -> tk_open_declaration ATTRIBUTE_LIST XML_CLOSE_DECLARATION {﹩﹩ = ﹩2}': ['Token: tk_open_declaration\\t Lexema: ' + '&lt;?', prod_2, prod_3]} );\r\n                                                                           \nbreak;\ncase 9:\n  this.$ = \"?>\"\r\n                                                grammar_stack.push({'XML_CLOSE_DECLARATION -> tk_close_delcaraton { ﹩﹩= ﹩1}': ['Token: tk_close_delcaraton\\t Lexema: ' + '?&gt;']});\r\n                                                \nbreak;\ncase 10:\nthis.$ = null;\r\n                                                 errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba token /\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                grammar_stack.push({'XML_CLOSE_DECLARATION -> tk_close {errors.add(new Error()); ﹩﹩ = null;}': ['Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                \nbreak;\ncase 11:\n this.$ = null;\r\n                                                 errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado. \" + $$[$0-1], origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                 grammar_stack.push({'XML_CLOSE_DECLARATION -> error tk_close {\terrors.add(new Error()); ﹩﹩ = null;}': ['Token: error\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                 \nbreak;\ncase 12:\nif($$[$0] == null){this.$ = null}else if($$[$0-1] == null){this.$ = [$$[$0]]}else{$$[$0-1].push($$[$0]); this.$ = $$[$0-1]}\r\n                                            prod_1 = grammar_stack.pop();\r\n                                            prod_2 = grammar_stack.pop();\r\n                                            grammar_stack.push({'ATTRIBUTE_LIST -> ATTRIBUTE_LIST ATTRIBUTE {if(﹩1 == null){﹩﹩=[]; ﹩﹩.push(﹩2)}else{﹩1.push(﹩2)}}': [ prod_2, prod_1 ] });\r\n                                          \nbreak;\ncase 13:\nthis.$ = null;             grammar_stack.push({'ATTRIBUTE_LIST -> Empty {﹩﹩ = null}': ['EMPTY'] });      \nbreak;\ncase 14:\nattr = new Atributo($$[$0-1].slice(0, -1), $$[$0].slice(1,-1), this._$.first_line, this._$.first_column+1);\r\n                                            attr.Cst= `<li><a href=''>ATTRIBUTE</a>\r\n                                            <ul>\r\n                                            <li><a href=''>tk_attribute_name</a><ul>\\n<li><a href=''>${$$[$0-1]}</a></li></ul></li>\r\n                                            <li><a href=''>tk_string</a><ul>\\n<li><a href=''>${$$[$0]}</a></li></ul></li>\r\n                                            </ul>\r\n                                            </li>`;\r\n                                            this.$ = attr;\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_attribute_name tk_string {\t﹩﹩ = new Attribute(﹩1, ﹩2)}': ['Token: tk_attribute_name\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0] ]});\r\n                                            \nbreak;\ncase 15:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un atributo despues de =.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_attribute_name {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_attribute_name\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 16:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un nombre para atributo antes de =.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_equal tk_string {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_equal\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 17:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba signo =\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> tk_tag_name {\terrors.add(new Error()); ﹩﹩ = null;}':['Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 18:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Lexico\", error: \"Nombre del atributo no puede empezar con dígitos.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> cadena_err tk_string {errors.add(new Error()); ﹩﹩ = null;}':['Token: cadena_err\\t Lexema: ' + $$[$0-1], 'Token: tk_string\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 19:\n this.$ = null;\r\n                                            errors.push({ tipo: \"Lexico\", error: \"Nombre del atributo no puede empezar con dígitos, y debe tener signo = y atributo a continuación.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                            grammar_stack.push({'ATTRIBUTE -> cadena_err {\terrors.add(new Error()); ﹩﹩ = null;}':['Token: cadena_err\\t Lexema: ' + $$[$0]]});\r\n                                            \nbreak;\ncase 20:\nif($$[$0-4] != null){  $$[$0-4].Children = $$[$0-3]; $$[$0-4].Close = $$[$0-1]; this.$ = $$[$0-4];\r\n                                                                                let hasConflict = $$[$0-4].verificateNames();\r\n                                                                                if(hasConflict === \"\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$$[$0-4].childs.forEach(child => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.Father = {id: $$[$0-4].id_open, line: $$[$0-4].line, column: $$[$0-4].column};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$ = $$[$0-4];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n                                                                                 else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                                                    this.$ = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\r\n                                                                                } else{this.$ = null;}\r\n                                                                                 prod_1 = grammar_stack.pop();\r\n                                                                                 prod_2 = grammar_stack.pop();\r\n                                                                                 grammar_stack.push({'XML-> XML_OPEN CHILDREN tk_open_end_tag tk_tag_name tk_close {﹩﹩ = ﹩1; ﹩1.children = ﹩2}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                                                 \nbreak;\ncase 21:\nif($$[$0-4] != null){$$[$0-4].Value = $$[$0-3]; $$[$0-4].Close = $$[$0-1];  this.$ = $$[$0-4];\r\n                                                                                let hasConflict = $$[$0-4].verificateNames();\r\n                                                                                if(hasConflict !== \"\"){\r\n                                                                                 errors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                                                 this.$ = null;\r\n                                                                                 }\r\n\t                                                                             }else{this.$ = null;}\r\n\t                                                                             prod_1 = grammar_stack.pop();\r\n\t                                                                             grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag tk_tag_name tk_close {﹩﹩ = ﹩1; ﹩﹩.content = ﹩2}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-3], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                             \nbreak;\ncase 22:\nthis.$ = new Element($$[$0-3], $$[$0-2], null, null, _$[$0-4].first_line, _$[$0-4].first_column+1, null);\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                grammar_stack.push({'XML -> tk_open tk_tag_name ATTRIBUTE_LIST tk_bar tk_close {﹩﹩ = new Element(); ﹩﹩.attributes = ﹩3}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-3], prod_1, 'Token: tk_bar\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 23:\nif($$[$0-3] != null){$$[$0-3].Close = $$[$0-1]; this.$ = $$[$0-3];\r\n\t                                                                            let hasConflict = $$[$0-3].verificateNames();\r\n\t                                                                             if(hasConflict !== \"\"){\r\n                                                                                errors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                                                this.$ = null;\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                }\r\n\t                                                                            }else{this.$ = null;}\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag tk_tag_name tk_close {\t﹩﹩ = ﹩1;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 24:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: '  + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 25:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador. \", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 26:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 27:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador. \", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                grammar_stack.push({'XML -> XML_OPEN tk_content tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_1, 'Token: tk_content\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: ' + $$[$0]  ]});\r\n                                                                            \t\nbreak;\ncase 28:\nthis.$ =null;\r\n                                                                                errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba etiqueta de cierre. \", origen: \"XML\", linea: _$[$0-4].first_line, columna: _$[$0-4].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN tk_content  tk_open tk_tag_name ATTRIBUTE_LIST tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, 'Token: tk_content\\t Lexema: ' + $$[$0-4],  'Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-2], prod_1, 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 29:\nthis.$ =null;\r\n\t                                                                            errors.push({ tipo: \"Sintáctico\", error: \"Falta etiquta de cierre \\\">\\\". \", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN CHILDREN tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n\t                                                                            \nbreak;\ncase 30:\nthis.$ =null;\r\n\t                                                                            errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador.\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n                                                                                prod_1 = grammar_stack.pop();\r\n                                                                                prod_2 = grammar_stack.pop();\r\n\t                                                                            grammar_stack.push({'XML -> XML_OPEN CHILDREN tk_open_end_tag  tk_close {errors.add(new Error()); ﹩﹩ = null;}':[prod_2, prod_1, 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/',  'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n\t                                                                            \nbreak;\ncase 31:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-3], origen: \"XML\", linea: _$[$0-3].first_line, columna: _$[$0-3].first_column+1 });\r\n\r\n                                                                             grammar_stack.push({'XML -> error tk_open_end_tag tk_tag_name tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-3], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: '  + '&gt;']});\r\n                                                                             \nbreak;\ncase 32:\nthis.$ =null;\r\n    \t                                                                    errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-2], origen: \"XML\", linea: _$[$0-2].first_line, columna: _$[$0-2].first_column+1 });\r\n\r\n                                                                            grammar_stack.push({'XML -> error tk_open_end_tag tk_tag_name {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-2], 'Token: tk_open_end_tag\\t Lexema: ' + '&lt;/', 'Token: tk_tag_name\\t Lexema: ' + $$[$0]]});\r\n                                                                            \nbreak;\ncase 33:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-2], origen: \"XML\", linea: _$[$0-2].first_line, columna: _$[$0-2].first_column+1 });\r\n\r\n\t                                                                        grammar_stack.push({'XML -> error tk_bar tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-2], 'Token: tk_bar\\t Lexema: ' + $$[$0-1], 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                        \nbreak;\ncase 34:\nthis.$ =null;\r\n\t                                                                        errors.push({ tipo: \"Sintáctico\", error: \"Token no esperado \" + $$[$0-1], origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n\r\n\t                                                                        grammar_stack.push({'XML -> error  tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: error\\t Lexema: ' + $$[$0-1],  'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n\t                                                                        \nbreak;\ncase 35:\n this.$ = new Element($$[$0-2], $$[$0-1], null, null,  _$[$0-3].first_line,  _$[$0-3].first_column+1);\r\n\r\n                                                        prod_1 = grammar_stack.pop();\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open tk_tag_name ATTRIBUTE_LIST tk_close {﹩﹩ = new Element(); ﹩﹩.attributes = ﹩3}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-2], prod_1, 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                         \nbreak;\ncase 36:\n\r\n                                                        this.$ = null;\r\n                                                        errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba \\\">\\\" despues de la cadena de atributos.\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n\r\n                                                        prod_1 = grammar_stack.pop();\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open tk_tag_name ATTRIBUTE_LIST {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_tag_name\\t Lexema: ' + $$[$0-1], prod_1]});\r\n                                                        \nbreak;\ncase 37:\n this.$ = null;\r\n                                                        errors.push({ tipo: \"Sintáctico\", error: \"\", origen: \"XML\", linea: _$[$0].first_line, columna: _$[$0].first_column+1 });\r\n                                                        grammar_stack.push({'XML_OPEN -> tk_open {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;']});\r\n                                                        \nbreak;\ncase 38:\n this.$ = null;\r\n                                                         errors.push({ tipo: \"Sintáctico\", error: \"Se esperaba un identificador para la etiqueta\", origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\r\n                                                         grammar_stack.push({'XML_OPEN -> tk_open tk_close {errors.add(new Error()); ﹩﹩ = null;}':['Token: tk_open\\t Lexema: ' + '&lt;', 'Token: tk_close\\t Lexema: ' + '&gt;']});\r\n                                                         \nbreak;\ncase 39:\nif($$[$0-1] != null && $$[$0] != null){ $$[$0-1].push($$[$0]); this.$ = $$[$0-1]; } else{this.$ = null;}\r\n                                                            prod_1 = grammar_stack.pop();\r\n                                                            prod_2 = grammar_stack.pop();\r\n                                                             grammar_stack.push({'CHILDREN -> CHILDREN XML {﹩1.push(﹩2); ﹩﹩ = $$[$0-1];}':[prod_2,  prod_1]});\r\n                                                            \nbreak;\ncase 40:\n if($$[$0]!=null ){this.$ = [$$[$0]];}else{this.$ = null;}\r\n\t                                                        prod_1 = grammar_stack.pop();\r\n                                                            grammar_stack.push({'CHILDREN -> XML {﹩﹩ = [﹩1]}':[prod_1]});\r\n\t                                                        \nbreak;\n}\n},\ntable: [{2:[1,5],3:1,4:2,5:3,6:[1,4],7:7,8:[1,6],19:8,23:$V0},{1:[3]},{2:$V1,5:10,6:[1,11],7:7,19:8,23:$V0},{2:$V1,6:[1,13],7:14,19:8,23:$V0},{1:[2,4]},{6:[1,15],12:$V2,21:$V3,24:$V4},o([2,11,12,14,16,17,18],$V5,{9:19}),o($V6,[2,7]),{2:$V1,7:23,19:8,20:20,21:[1,22],22:[1,21],23:$V0},o($V7,[2,37],{12:[1,25],17:[1,24]}),{2:$V1,6:[1,26],7:14,19:8,23:$V0},{1:[2,2]},{12:$V2,21:$V3,24:$V4},{1:[2,3]},o($V6,[2,6]),{1:[2,5]},{17:[1,27]},{12:[1,28]},o($V8,[2,34]),{2:[1,33],10:29,11:[1,31],12:[1,32],13:30,14:$V9,16:$Va,17:$Vb,18:$Vc},{2:$V1,7:39,19:8,21:[1,38],23:$V0},{21:[1,40],23:[1,41]},{12:[1,43],17:[1,42]},o($Vd,[2,40]),o([2,12,14,16,17,18,21,22,23,24],$V5,{9:44}),o($V7,[2,38]),{1:[2,1]},o($V8,[2,32],{12:[1,45]}),o($V8,[2,33]),o($V6,[2,8]),o($Ve,[2,12]),o($V6,[2,9]),o($V6,[2,10]),{12:[1,46]},o($Ve,[2,15],{15:[1,47]}),{15:[1,48]},o($Ve,[2,17]),o($Ve,[2,19],{15:[1,49]}),{12:[1,51],17:[1,50]},o($Vd,[2,39]),{12:[1,53],17:[1,52]},{17:[1,54]},o($V8,[2,24],{12:[1,55]}),o($V8,[2,25]),o($V7,[2,36],{13:30,12:[1,57],14:$V9,16:$Va,17:$Vb,18:$Vc,24:[1,56]}),o($V8,[2,31]),o($V6,[2,11]),o($Ve,[2,14]),o($Ve,[2,16]),o($Ve,[2,18]),o($V8,[2,29],{12:[1,58]}),o($V8,[2,30]),o($V8,[2,26],{12:[1,59]}),o($V8,[2,27]),o([12,14,16,17,18],$V5,{9:60}),o($V8,[2,23]),{12:[1,61]},o($V7,[2,35]),o($V8,[2,20]),o($V8,[2,21]),{12:[1,62],13:30,14:$V9,16:$Va,17:$Vb,18:$Vc},o($V8,[2,22]),o($V8,[2,28])],\ndefaultActions: {4:[2,4],11:[2,2],13:[2,3],15:[2,5],26:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n\tvar attribute = '';\r\n\tvar errors = [];\r\n\tlet re = /[^\\n\\t\\r ]+/g\r\n\t//let ast = null;\r\n\tlet grammar_stack = [];\r\n\r\n\r\n\r\n    function getGrammarReport(obj){\r\n        let str = `<!DOCTYPE html>\r\n                     <html lang=\"en\" xmlns=\"http://www.w3.org/1999/html\">\r\n                     <head>\r\n                         <meta charset=\"UTF-8\">\r\n                         <meta\r\n                         content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\r\n                         name=\"viewport\">\r\n                         <!-- Bootstrap CSS -->\r\n                         <link\r\n                         crossorigin=\"anonymous\"\r\n                         href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n                               integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n                               rel=\"stylesheet\">\r\n                         <title>Reporte gramatical</title>\r\n                         <style>\r\n                             table, th, td {\r\n                                 border: 1px solid black;\r\n                             }\r\n                             ul, .ul-tree-view {\r\n                                 list-style-type: none;\r\n                             }\r\n\r\n                             #div-table{\r\n                                 width: 1200px;\r\n                                 margin: 100px;\r\n                                 border: 3px solid #73AD21;\r\n                             }\r\n\r\n                             .ul-tree-view {\r\n                                 margin: 0;\r\n                                 padding: 0;\r\n                             }\r\n\r\n                             .caret {\r\n                                 cursor: pointer;\r\n                                 -webkit-user-select: none; /* Safari 3.1+ */\r\n                                 -moz-user-select: none; /* Firefox 2+ */\r\n                                 -ms-user-select: none; /* IE 10+ */\r\n                                 user-select: none;\r\n                             }\r\n\r\n                             .caret::before {\r\n                                 content: \"\\u25B6\";\r\n                                 color: black;\r\n                                 display: inline-block;\r\n                                 margin-right: 6px;\r\n                             }\r\n\r\n                             .caret-down::before {\r\n                                 -ms-transform: rotate(90deg); /* IE 9 */\r\n                                 -webkit-transform: rotate(90deg); /* Safari */'\r\n                             transform: rotate(90deg);\r\n                             }\r\n\r\n                             .nested {\r\n                                 display: none;\r\n                             }\r\n\r\n                             .active {\r\n                                 display: block;\r\n                             }\r\n\r\n                             li span:hover {\r\n                                 font-weight: bold;\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n\r\n                             li span:hover + ul li  {\r\n                                 font-weight: bold;\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n\r\n                             .tree-view{\r\n                                 display: inline-block;\r\n                             }\r\n\r\n                             li.string {\r\n                                 list-style-type: square;\r\n                             }\r\n                             li.string:hover {\r\n                                 color : white;\r\n                                 background-color: #dc5b27;\r\n                             }\r\n                             .center {\r\n                                margin: auto;\r\n                                width: 50%;\r\n                                border: 3px solid green;\r\n                                padding-left: 15%;\r\n                             }\r\n                         </style>\r\n                     </head>\r\n                     <body>\r\n                     <h1 class=\"center\">Reporte Gramatical</h1>\r\n                     <div class=\"tree-view\">\r\n                     <ul class=\"ul-tree-view\" id=\"tree-root\">`;\r\n\r\n\r\n        str = str + buildGrammarReport(obj);\r\n\r\n\r\n        str = str + `\r\n                    </ul>\r\n                    </ul>\r\n                    </div>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                             <br>\r\n                        <button onclick=\"fun1()\">Expand Grammar Tree</button>\r\n                     <div id=\"div-table\">\r\n                     <table style=\"width:100%\">\r\n                         <tr>\r\n                         <th>Produccion</th>\r\n                         <th>Cuerpo</th>\r\n                         <th>Accion</th>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>INI-&gt;</th>\r\n                         <td>XML_DECLARATION ROOT EOF</td>\r\n                         <td>$$ = [$1, $2] </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_DECLARATION  EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>ROOT EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error EOF</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>ROOT-&gt;</th>\r\n                         <td>ROOT XML</td>\r\n                         <td>$$ = $1.push($2);</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML</td>\r\n                         <td>$$ = []; $$.push($1);</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>XML_DECLARATION-&gt;</th>\r\n                         <td>tk_open_declaration ATTRIBUTE_LIST XML_CLOSE_DECLARATION</td>\r\n                         <td>$$ = $2</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>XML_CLOSE_DECLARATION-&gt;</th>\r\n                         <td>tk_close_delcaraton</td>\r\n                         <td>$$ = $1</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>ATTRIBUTE_LIST-&gt;</th>\r\n                         <td>ATTRIBUTE_LIST ATTRIBUTE </td>\r\n                         <td>if($1 == null){$$=[]; $$.push($2)}else{$1.push($2)}</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>Empty</td>\r\n                         <td>$$ = null</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n\r\n                         <tr>\r\n                         <th>ATTRIBUTE-&gt;</th>\r\n                         <td>tk_attribute_name tk_string  </td>\r\n                         <td>$$ = new Attribute($1, $2)</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_attribute_name</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_equal tk_string   </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_tag_name</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>cadena_err tk_string </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>cadena_err</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <th>XML-&gt;</th>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag tk_tag_name tk_close   </td>\r\n                         <td>$$ = $1; $1.children = $2</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag tk_tag_name tk_close  </td>\r\n                         <td>$$ = $1; $$.content = $2</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST tk_bar tk_close </td>\r\n                         <td>$$ = new Element(); $$.attributes = $3</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag tk_tag_name tk_close </td>\r\n                         <td>$$ = $1; </td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_open_end_tag  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content tk_open_end_tag  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN tk_content  tk_open tk_tag_name ATTRIBUTE_LIST tk_close</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML_OPEN CHILDREN tk_open_end_tag  tk_close  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_open_end_tag tk_tag_name tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_open_end_tag tk_tag_name  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error tk_bar tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>error  tk_close </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <th>XML_OPEN-&gt;</th>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST tk_close </td>\r\n                         <td>$$ = new Element(); $$.attributes = $3</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open tk_tag_name ATTRIBUTE_LIST  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open</td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>tk_open   tk_close  </td>\r\n                         <td>errors.add(new Error()); $$ = null;</td>\r\n                         </tr>\r\n\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         </tr>\r\n\r\n\r\n                         <tr>\r\n                         <th>CHILDREN-&gt;</th>\r\n                         <td>CHILDREN XML </td>\r\n                         <td>$1.push($2); $$ = $1;</td>\r\n                         </tr>\r\n                         <tr>\r\n                         <td></td>\r\n                         <td>XML</td>\r\n                         <td>$$ = [$1]</td>\r\n                         </tr>\r\n\r\n                     </table>\r\n\r\n                     </div>\r\n\r\n                     <script\r\n                     src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\">\r\n                     </script>\r\n                     <script\r\n                     crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n                             src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\">\r\n                             </script>\r\n                     <script\r\n                     crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n                             src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\">\r\n                             </script>\r\n\r\n                             <script>\r\n                                 var toggler = document.getElementsByClassName(\"caret\");\r\n                                 var i;\r\n\r\n                                 for (i = 0; i < toggler.length; i++) {\r\n                                     toggler[i].addEventListener(\"click\", function() {\r\n                                         this.parentElement\r\n                                         .querySelector(\".nested\")\r\n                                         .classList.toggle(\"active\");\r\n                                         this.classList.toggle(\"caret-down\");\r\n                                     });\r\n                                 }\r\n\r\n\r\n                                        function fun1() {\r\n                                            if ($(\"#tree-root\").length > 0) {\r\n\r\n                                                $(\"#tree-root\").find(\"li\").each\r\n                                                (\r\n                                                    function () {\r\n                                                        var $span = $(\"<span></span>\");\r\n                                                        //$(this).toggleClass(\"expanded\");\r\n                                                        if ($(this).find(\"ul:first\").length > 0) {\r\n                                                            $span.removeAttr(\"class\");\r\n                                                            $span.attr(\"class\", \"expanded\");\r\n                                                            $(this).find(\"ul:first\").css(\"display\", \"block\");\r\n                                                            $(this).append($span);\r\n                                                        }\r\n\r\n                                                    }\r\n                                                )\r\n                                            }\r\n\r\n                                        }\r\n\r\n\r\n\r\n\r\n                             </script>\r\n\r\n                     </body>\r\n                     </html>`;\r\n                     return str;\r\n    }\r\n    // .replace(\"₤\",\"$\")\r\n    function buildGrammarReport(obj){\r\n        if(obj == null){return \"\";}\r\n        let str = \"\";\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            obj.forEach((value)=>{\r\n            if(typeof value === 'string' ){\r\n                str = str + `<li class= \"string\">\r\n                ${value}\r\n                </li>\r\n                `;\r\n            }else if(Array.isArray(value)){console.log(\"ERROR 5: Arreglo de arreglos\");}else{\r\n                for(let key in value){\r\n                    str = str + buildGrammarReport(value);\r\n                }\r\n            }\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            return \"\";\r\n            console.log(\"ERROR**************************\");\r\n        }else{// IS OBJECT\r\n            for(let key in obj){\r\n\r\n                str = `<li class=\"grammar-tree\"><span class=\"caret\">\r\n                ${key}\r\n                </span>\r\n                <ul class=\"nested\">\r\n                `;\r\n                str = str + buildGrammarReport(obj[key]);\r\n                str = str + `\r\n                </ul>\r\n                </li>`;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n//just for testing purposes\r\n\tfunction printstrack(obj, lines){\r\n\treturn;\r\n\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n            obj.forEach((value)=>{\r\n                if(typeof value === 'string' ){\r\n                     str = \"\"\r\n                     for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n                     console.log(str + value);\r\n                }else if(Array.isArray(value)){console.log(\"ERROR 5\");}else{\r\n                    str = \"\"\r\n                    for(let i = 0; i < lines; i++){ str = str + \"- \";}\r\n                    for(let key in value){\r\n                       console.log(`${str}${key}`);\r\n                       printstrack(value[key], lines + 1);\r\n                    }\r\n                }\r\n\r\n                //printstrack(value, lines +1);\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){str = str + \"- \";}\r\n            console.log(str + obj);\r\n        }else{// IS OBJECT\r\n            str = \"\"\r\n            for(let i = 0; i < lines; i++){ str = str + \"- \";}\r\n            for(let key in obj){\r\n                console.log(`${str}Key: ${key}`);\r\n                //console.log(obj[key]);\r\n                printstrack(obj[key], lines + 1);\r\n            }\r\n        }\r\n\t}\r\n\r\n\r\n\r\n\r\n    function getCST(obj){\r\n        let str = `\r\n        <!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\">\r\n            <!-- Bootstrap CSS -->\r\n            <link crossorigin=\"anonymous\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n                  integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" rel=\"stylesheet\">\r\n            <title>CST</title>\r\n            <style>\r\n\r\n                #divheight{\r\n                    height: 400px;\r\n                    width: 1050px;\r\n                }\r\n\r\n                .nav-tabs > li .close {\r\n                    margin: -2px 0 0 10px;\r\n                    font-size: 18px;\r\n                }\r\n\r\n                .nav-tabs2 > li .close {\r\n                    margin: -2px 0 0 10px;\r\n                    font-size: 18px;\r\n                }\r\n\r\n            </style>\r\n\r\n            <style>\r\n                body {\r\n                    font-family: sans-serif;\r\n                    font-size: 15px;\r\n                }\r\n\r\n                .tree ul {\r\n                    position: relative;\r\n                    padding: 1em 0;\r\n                    white-space: nowrap;\r\n                    margin: 0 auto;\r\n                    text-align: center;\r\n                }\r\n                .tree ul::after {\r\n                    content: \"\";\r\n                    display: table;\r\n                    clear: both;\r\n                }\r\n\r\n                .tree li {\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    text-align: center;\r\n                    list-style-type: none;\r\n                    position: relative;\r\n                    padding: 1em 0.5em 0 0.5em;\r\n                }\r\n                .tree li::before, .tree li::after {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: 50%;\r\n                    border-top: 1px solid #ccc;\r\n                    width: 50%;\r\n                    height: 1em;\r\n                }\r\n                .tree li::after {\r\n                    right: auto;\r\n                    left: 50%;\r\n                    border-left: 1px solid #ccc;\r\n                }\r\n                /*\r\n                ul:hover::after  {\r\n                    transform: scale(1.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport)\r\n                }*/\r\n\r\n                .tree li:only-child::after, .tree li:only-child::before {\r\n                    display: none;\r\n                }\r\n                .tree li:only-child {\r\n                    padding-top: 0;\r\n                }\r\n                .tree li:first-child::before, .tree li:last-child::after {\r\n                    border: 0 none;\r\n                }\r\n                .tree li:last-child::before {\r\n                    border-right: 1px solid #ccc;\r\n                    border-radius: 0 5px 0 0;\r\n                }\r\n                .tree li:first-child::after {\r\n                    border-radius: 5px 0 0 0;\r\n                }\r\n\r\n                .tree ul ul::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 50%;\r\n                    border-left: 1px solid #ccc;\r\n                    width: 0;\r\n                    height: 1em;\r\n                }\r\n\r\n                .tree li a {\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em 0.75em;\r\n                    text-decoration: none;\r\n                    display: inline-block;\r\n                    border-radius: 5px;\r\n                    color: #333;\r\n                    position: relative;\r\n                    top: 1px;\r\n                }\r\n\r\n                .tree li a:hover,\r\n                .tree li a:hover + ul li a {\r\n                    background: #e9453f;\r\n                    color: #fff;\r\n                    border: 1px solid #e9453f;\r\n                }\r\n\r\n                .tree li a:hover + ul li::after,\r\n                .tree li a:hover + ul li::before,\r\n                .tree li a:hover + ul::before,\r\n                .tree li a:hover + ul ul::before {\r\n                    border-color: #e9453f;\r\n                }\r\n\r\n                /*# sourceMappingURL=sytle_.css.map */\r\n\r\n\r\n            </style>\r\n        </head>\r\n        <body>\r\n\r\n\r\n\r\n        <div class=\"tree\">\r\n            <ul id=\"tree-list\">\r\n\r\n            <!--AQUI-->\r\n        `;\r\n        str = str + buildCSTTree(obj);\r\n        str = str + `\r\n        </ul>\r\n        </div>\r\n\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js\"></script>\r\n        <script crossorigin=\"anonymous\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n                src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\r\n        <script crossorigin=\"anonymous\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n                src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\r\n        </body>\r\n        </html>\r\n        `;\r\n        return str;\r\n    }\r\n\r\n    function buildCSTTree(obj){\r\n        if(obj == null){return \"\";}\r\n        let str = \"\";\r\n        if(Array.isArray(obj)){ //IS ARRAY\r\n            obj.forEach((value)=>{\r\n            if(typeof value === 'string' ){\r\n                let words = value.split('Lexema:');\r\n                if(words.length == 2){\r\n                    let lex = words[1];     //TODO check not go out of bounds\r\n                    let token = words[0];\r\n                    str = str + `<li><a href=\"\">${token}</a><ul>\r\n                    <li><a href=\"\">${lex}\r\n                    </a></li>\r\n                    </ul></li>\r\n                    `;\r\n                }else{\r\n                    str = str + `<li><a href=\"\">${value}</a></li>\r\n                    `;\r\n                }\r\n\r\n\r\n            }else if(Array.isArray(value)){console.log(\"ERROR 5: Arreglo de arreglos\");}else{\r\n                for(let key in value){\r\n                    str = str + buildCSTTree(value);\r\n                }\r\n            }\r\n            });\r\n        }else if(typeof obj === 'string' ){ // IS STRING\r\n            return \"\";\r\n            console.log(\"ERROR**************************\");\r\n        }else{// IS OBJECT\r\n            for(let key in obj){\r\n                const words = key.split('->');\r\n                //console.log(words[3]);\r\n                str = `<li><a href=\"\">${words[0]}</a>\r\n                <ul>\r\n                `;\r\n                str = str + buildCSTTree(obj[key]) + `\r\n                </ul>\r\n                </li>`;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst { Atributo } = require('../model/xml/Atributo');\r\n\tconst { Element } = require('../model/xml/Element');\r\n\tconst { Encoding } = require('../model/xml/Encoding/Encoding');\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:/* MultiLineComment*/\nbreak;\ncase 2:return 8;\nbreak;\ncase 3:return 11;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 21\nbreak;\ncase 7:return 23;\nbreak;\ncase 8: this.pushState('content');  return 12;\nbreak;\ncase 9:return 24;\nbreak;\ncase 10:return 16;\nbreak;\ncase 11:return 15;\nbreak;\ncase 12:return cadena_err;\nbreak;\ncase 13:return id_err;\nbreak;\ncase 14:/* MultiLineComment*/\nbreak;\ncase 15:\r\n                                    if(yy_.yytext.match(re)){return 22;}\r\n                                 \nbreak;\ncase 16:return 6\nbreak;\ncase 17:this.popState(); return 12;\nbreak;\ncase 18: this.popState(); return 21\nbreak;\ncase 19:  this.popState();\r\n                                    return 23;\nbreak;\ncase 20: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\ncase 21:return 6\nbreak;\ncase 22: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:<!--([^-]|-[^-])*-->)/i,/^(?:<\\?([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*))/i,/^(?:\\?>)/i,/^(?:(([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*)\\s*=))/i,/^(?:([_a-zA-Z]([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*))/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:((\"[^\\\"\\n]*[\\\"\\n])|('[^\\'\\n]*[\\'\\n])))/i,/^(?:([0-9]+(\\.[0-9]+)?([a-zA-Z0-9_.-]|([\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+))*=?))/i,/^(?:{id_err})/i,/^(?:<!--([^-]|-[^-])*-->)/i,/^(?:(([^<>&\\\"]|&lt;|&gt;|&amp;|&apos;|&quot;)+))/i,/^(?:$)/i,/^(?:>)/i,/^(?:<\\/)/i,/^(?:<)/i,/^(?:.)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"content\":{\"rules\":[14,15,16,17,18,19,20],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,21,22],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xml_up;\nexports.Parser = xml_up.Parser;\nexports.parse = function () { return xml_up.parse.apply(xml_up, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../../Expresion/Expresion\"));\nvar Funciones_1 = __importDefault(require(\"./Funciones\"));\nvar Predicate_1 = require(\"../Predicate\");\nfunction SelectAxis(_instruccion, _ambito, _contexto) {\n    var _404 = { notFound: \"No se encontraron elementos.\" };\n    var contexto = (_contexto.elementos) ? (_contexto) : null;\n    var expresion = Expresion_1.default(_instruccion, _ambito, contexto);\n    if (expresion.error)\n        return expresion;\n    var root = getAxis(expresion.axisname, expresion.nodetest, expresion.predicate, contexto, _ambito, false);\n    if (root === null || root.error || root.elementos.error || (root.elementos.length === 0 && root.atributos.length === 0))\n        return _404;\n    return root;\n}\nfunction getAxis(_axisname, _nodetest, _predicate, _contexto, _ambito, _isDoubleBar) {\n    if (_contexto)\n        return firstFiler(_axisname, _nodetest, _predicate, _contexto, _ambito, _isDoubleBar);\n    else\n        return { error: \"Indstrucción no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: 1, columna: 1 };\n}\n// Revisa el axisname y extrae los elementos\nfunction firstFiler(_axisname, _nodetest, _predicate, _contexto, _ambito, _isDoubleBar) {\n    var elements = Array();\n    var attributes = Array();\n    var cadena = Enum_1.Tipos.ELEMENTOS;\n    switch (_axisname) {\n        case Enum_1.Tipos.AXIS_ANCESTOR: // Selects all ancestors (parent, grandparent, etc.) of the current node\n        case Enum_1.Tipos.AXIS_ANCESTOR_OR_SELF: // Selects all ancestors (parent, grandparent, etc.) of the current node and the current node itself\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                var element = _contexto.elementos[i];\n                if (_axisname === Enum_1.Tipos.AXIS_ANCESTOR_OR_SELF) {\n                    if (element.father)\n                        elements.push(element);\n                    else\n                        elements.push(element.childs[0]);\n                }\n                var dad = element.father;\n                if (dad) {\n                    elements = _ambito.compareCurrent(element, elements, _axisname);\n                }\n            }\n            break;\n        case Enum_1.Tipos.AXIS_ATTRIBUTE: // Selects all attributes of the current node\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                var element = _contexto.elementos[i];\n                if (_isDoubleBar) {\n                    attributes = _ambito.searchAnyAttributes(\"*\", element, attributes);\n                }\n                else if (element.attributes)\n                    element.attributes.forEach(function (attribute) {\n                        attributes.push(attribute);\n                    });\n            }\n            cadena = Enum_1.Tipos.ATRIBUTOS;\n            break;\n        case Enum_1.Tipos.AXIS_CHILD: // Selects all children of the current node\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                var element = _contexto.elementos[i];\n                // if (_isDoubleBar) {\n                //     elements = _ambito.searchNodes(\"*\", element, elements);\n                // }\n                if (element.childs)\n                    element.childs.forEach(function (child) {\n                        elements.push(child);\n                    });\n            }\n            break;\n        case Enum_1.Tipos.AXIS_DESCENDANT: // Selects all descendants (children, grandchildren, etc.) of the current node\n        case Enum_1.Tipos.AXIS_DESCENDANT_OR_SELF: // Selects all descendants (children, grandchildren, etc.) of the current node and the current node itself\n            console.log(_contexto.elementos, 8989);\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                var element = _contexto.elementos[i];\n                if (_axisname === Enum_1.Tipos.AXIS_DESCENDANT_OR_SELF) {\n                    if (element.father)\n                        elements.push(element);\n                    // else elements.push(element.childs[0]);\n                }\n                if (element.father)\n                    elements = _ambito.searchNodes(\"*\", element, elements);\n                else\n                    elements = _ambito.searchNodes(\"*\", element.childs[0], elements);\n            }\n            break;\n        case Enum_1.Tipos.AXIS_FOLLOWING: // Selects everything in the document after the closing tag of the current node\n        case Enum_1.Tipos.AXIS_PRECEDING: // Selects all nodes that appear before the current node in the document\n        case Enum_1.Tipos.AXIS_FOLLOWING_SIBLING: // Selects all siblings after the current node:\n        case Enum_1.Tipos.AXIS_PRECEDING_SIBLING: // Selects all siblings before the current node\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                var element = _contexto.elementos[i];\n                var dad = element.father;\n                if (dad && (_axisname === Enum_1.Tipos.AXIS_PRECEDING || _axisname === Enum_1.Tipos.AXIS_PRECEDING_SIBLING)) {\n                    elements = _ambito.compareCurrent(element, elements, _axisname);\n                }\n                else if (_axisname === Enum_1.Tipos.AXIS_FOLLOWING || _axisname === Enum_1.Tipos.AXIS_FOLLOWING_SIBLING) {\n                    elements = _ambito.compareCurrent(element, elements, _axisname);\n                }\n            }\n            break;\n        case Enum_1.Tipos.AXIS_NAMESPACE: // Selects all namespace nodes of the current node\n            return { error: \"Error: la funcionalidad 'namespace' no está disponible.\", tipo: \"Semántico\", origen: \"Query\", linea: _nodetest.linea, columna: _nodetest.columna };\n        case Enum_1.Tipos.AXIS_PARENT: // Selects the parent of the current node\n            var _loop_1 = function (i) {\n                var element = _contexto.elementos[i];\n                var dad = element.father;\n                if (dad)\n                    _ambito.tablaSimbolos.forEach(function (elm) {\n                        if (elm.id_open === dad.id && elm.line == dad.line && elm.column == dad.column)\n                            elements.push(elm);\n                        if (elm.childs)\n                            elm.childs.forEach(function (child) {\n                                elements = _ambito.searchDad(child, dad.id, dad.line, dad.column, elements);\n                            });\n                    });\n            };\n            for (var i = 0; i < _contexto.elementos.length; i++) {\n                _loop_1(i);\n            }\n            break;\n        case Enum_1.Tipos.AXIS_SELF: // Selects the current node\n            if (_contexto.atributos)\n                attributes = _contexto.atributos;\n            else\n                elements = _contexto.elementos;\n            break;\n        default:\n            return { error: \"Error: axisname no válido.\", tipo: \"Semántico\", origen: \"Query\", linea: _nodetest.linea, columna: _nodetest.columna };\n    }\n    // return { elementos: elements, atributos: attributes, cadena: cadena };\n    return secondFilter(elements, attributes, _nodetest, _predicate, cadena, _ambito, _isDoubleBar);\n}\n// Revisa el nodetest y busca hacer match\nfunction secondFilter(_elements, _atributos, _nodetest, _predicate, _cadena, _ambito, _isDoubleBar) {\n    var elements = Array();\n    var attributes = Array();\n    var text = Array();\n    var valor = _nodetest.valor;\n    switch (_nodetest.tipo) {\n        case Enum_1.Tipos.ELEMENTOS:\n        case Enum_1.Tipos.ASTERISCO:\n        case Enum_1.Tipos.FUNCION_TEXT:\n            if (_atributos.length > 0) {\n                for (var i = 0; i < _atributos.length; i++) {\n                    var attribute = _atributos[i];\n                    if (attribute.id == valor || valor === \"*\") {\n                        attributes.push(attribute);\n                    }\n                    if (attribute.value == valor) {\n                        attributes.push(attribute);\n                    }\n                }\n            }\n            for (var i = 0; i < _elements.length; i++) {\n                var element = _elements[i];\n                if (_nodetest.tipo === Enum_1.Tipos.FUNCION_TEXT && element.value) {\n                    var x_1 = Funciones_1.default.f1(element, elements, text, _isDoubleBar);\n                    elements.concat(x_1.elementos);\n                    text.concat(x_1.texto);\n                    _cadena = Enum_1.Tipos.TEXTOS;\n                    continue;\n                }\n                else if (_atributos.length > 0 && element.attributes) {\n                    var x_2 = Funciones_1.default.f2(element, elements, attributes, valor, _isDoubleBar);\n                    elements.concat(x_2.elementos);\n                    attributes = attributes.concat(x_2.atributos);\n                    _cadena = Enum_1.Tipos.ATRIBUTOS;\n                    continue;\n                }\n                var x = Funciones_1.default.f3(element, elements, text, valor, _nodetest.tipo, _isDoubleBar);\n                if (x.elementos.length > 0 || x.texto.length > 0) {\n                    elements.concat(x.elementos);\n                    text.concat(x.texto);\n                    continue;\n                }\n                x = Funciones_1.default.f4(element, elements, text, valor, _nodetest.tipo, _isDoubleBar);\n                if (x.elementos.length > 0 || x.texto.length > 0) {\n                    elements.concat(x.elementos);\n                    text.concat(x.texto);\n                    break;\n                }\n            }\n            break;\n        default:\n            return { error: \"Error: nodetest no válido.\", tipo: \"Semántico\", origen: \"Query\", linea: _nodetest.linea, columna: _nodetest.columna };\n    }\n    // En caso de tener algún predicado\n    if (_predicate) {\n        var filter = new Predicate_1.Predicate(_predicate, _ambito, elements);\n        if (attributes.length > 0) {\n            attributes = filter.filterAttributes(attributes);\n            return { elementos: [], atributos: attributes, cadena: _cadena };\n        }\n        elements = filter.filterElements(elements);\n    }\n    return { elementos: elements, atributos: attributes, texto: text, cadena: _cadena };\n}\nmodule.exports = { SA: SelectAxis, GetAxis: getAxis };\n","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Aritmetica(_expresion, _ambito, _contexto) {\n    var operators = init(_expresion.opIzq, _expresion.opDer, _ambito, _expresion.tipo, _contexto);\n    if (operators.error)\n        return operators;\n    switch (operators.tipo) {\n        case Enum_1.Tipos.OPERACION_SUMA:\n            return suma(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_RESTA:\n            return resta(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_MULTIPLICACION:\n            return multiplicacion(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_DIVISION:\n            return division(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_MODULO:\n            return modulo(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_NEGACION_UNARIA:\n            return negacionUnaria(operators.op1);\n        default:\n            return null;\n    }\n}\nfunction init(_opIzq, _opDer, _ambito, _tipo, _contexto) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito, _contexto);\n    if (op1.error)\n        return op1;\n    var op2 = Expresion(_opDer, _ambito, _contexto);\n    if (op2.error)\n        return op2;\n    var tipo = _tipo;\n    if (op1.tipo === Enum_1.Tipos.FUNCION_LAST && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = _contexto.length;\n        op2 = Number(op2.valor);\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_LAST) {\n        op1 = Number(op1.valor);\n        op2 = _contexto.length;\n    }\n    else if (op1.tipo === Enum_1.Tipos.FUNCION_POSITION && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = _contexto.length;\n        op2 = Number(op2.valor);\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        op1 = Number(op1.valor);\n        op2 = _contexto.length;\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = Number(op1.valor);\n        op2 = Number(op2.valor);\n    }\n    else\n        return { error: \"Solamente se pueden operar aritméticamente valores numéricos.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n    return { op1: op1, op2: op2, tipo: tipo };\n}\nfunction suma(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq + _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction resta(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq - _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction multiplicacion(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq * _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction division(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq / _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction modulo(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq % _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction negacionUnaria(_opIzq) {\n    return {\n        valor: (0 - _opIzq),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nmodule.exports = Aritmetica;\n","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Relacional(_expresion, _ambito, _contexto) {\n    var operators = init(_expresion.opIzq, _expresion.opDer, _ambito, _expresion.tipo, _contexto);\n    if (operators.error)\n        return operators;\n    switch (operators.tipo) {\n        case Enum_1.Tipos.RELACIONAL_MAYOR:\n            return mayor(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MAYORIGUAL:\n            return mayorigual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MENOR:\n            return menor(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MENORIGUAL:\n            return menorigual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_IGUAL:\n            return igual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_DIFERENTE:\n            return diferente(operators.op1, operators.op2);\n        default:\n            return null;\n    }\n}\nfunction init(_opIzq, _opDer, _ambito, _tipo, _contexto) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito, _contexto);\n    if (op1.error)\n        return op1;\n    var op2 = Expresion(_opDer, _ambito, _contexto);\n    if (op2.error)\n        return op2;\n    var tipo = _tipo;\n    // Numéricas\n    if (tipo === Enum_1.Tipos.RELACIONAL_MAYOR || tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL ||\n        tipo === Enum_1.Tipos.RELACIONAL_MENOR || tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL) {\n        if ((op1.tipo === Enum_1.Tipos.FUNCION_POSITION || op1.tipo === Enum_1.Tipos.FUNCION_LAST) && op2.tipo === Enum_1.Tipos.NUMBER) {\n            op1 = _contexto.length;\n            op2 = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && (op2.tipo === Enum_1.Tipos.FUNCION_POSITION || op2.tipo === Enum_1.Tipos.FUNCION_LAST)) {\n            op2 = Number(op1.valor);\n            op1 = _contexto.length;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MENOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MENORIGUAL;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYORIGUAL;\n        }\n        else if (op1.tipo === Enum_1.Tipos.ATRIBUTOS || op2.tipo === Enum_1.Tipos.ATRIBUTOS) {\n            var opIzq = { valor: 0, tipo: op1.tipo };\n            var opDer = { valor: 0, tipo: op2.tipo };\n            opIzq.tipo = Enum_1.Tipos.ATRIBUTOS;\n            opDer.tipo = (op1.tipo === Enum_1.Tipos.ATRIBUTOS) ? (op2.tipo) : (op1.tipo);\n            if (op1.tipo === Enum_1.Tipos.ATRIBUTOS && (op2.tipo === Enum_1.Tipos.STRING || op2.tipo === Enum_1.Tipos.NUMBER)) {\n                opIzq.valor = op1.valor;\n                opDer.valor = op2.valor;\n            }\n            else if ((op1.tipo === Enum_1.Tipos.STRING || op1.tipo === Enum_1.Tipos.NUMBER) && op2.tipo === Enum_1.Tipos.ATRIBUTOS) {\n                opIzq.valor = op2.valor;\n                opDer.valor = op1.valor;\n            }\n            else\n                return { error: \"Desigualdad no compatible.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n            return { op1: opIzq, op2: opDer, tipo: tipo };\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.NUMBER) {\n            op1 = Number(op1.valor);\n            op2 = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.ELEMENTOS || op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n            if (op1.tipo === Enum_1.Tipos.ELEMENTOS && (op2.tipo === Enum_1.Tipos.STRING || op2.tipo === Enum_1.Tipos.NUMBER)) {\n                op1 = op1.valor;\n                op2 = op2.valor;\n            }\n            else if ((op1.tipo === Enum_1.Tipos.STRING || op1.tipo === Enum_1.Tipos.NUMBER) && op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n                var tmp = op1.valor;\n                op1 = op2.valor;\n                op2 = tmp;\n            }\n            else if (op1.tipo === Enum_1.Tipos.ELEMENTOS && op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n                op1 = op1.valor;\n                op2 = op2.valor;\n            }\n            return { op1: { valor: op1, id: true }, op2: op2, tipo: tipo };\n        }\n        else\n            return { error: \"Solamente se pueden comparar desigualdades entre valores numéricos.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n        return { op1: op1, op2: op2, tipo: tipo };\n    }\n    // Numéricas o texto\n    if (tipo === Enum_1.Tipos.RELACIONAL_IGUAL || tipo === Enum_1.Tipos.RELACIONAL_DIFERENTE) {\n        var opIzq = { valor: 0, tipo: op1.tipo };\n        var opDer = { valor: 0, tipo: op2.tipo };\n        if ((op1.tipo === Enum_1.Tipos.FUNCION_POSITION || op1.tipo === Enum_1.Tipos.FUNCION_LAST) && op2.tipo === Enum_1.Tipos.NUMBER) {\n            opIzq.valor = _contexto.length;\n            opDer.valor = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && (op2.tipo === Enum_1.Tipos.FUNCION_POSITION || op2.tipo === Enum_1.Tipos.FUNCION_LAST)) {\n            opIzq.valor = Number(op1.valor);\n            opDer.valor = _contexto.length;\n        }\n        else if (op1.tipo === Enum_1.Tipos.ATRIBUTOS || op2.tipo === Enum_1.Tipos.ATRIBUTOS) {\n            opIzq.tipo = Enum_1.Tipos.ATRIBUTOS;\n            opDer.tipo = (op1.tipo === Enum_1.Tipos.ATRIBUTOS) ? (op2.tipo) : (op1.tipo);\n            if (op1.tipo === Enum_1.Tipos.ATRIBUTOS && (op2.tipo === Enum_1.Tipos.STRING || op2.tipo === Enum_1.Tipos.NUMBER)) {\n                opIzq.valor = op1.valor;\n                opDer.valor = op2.valor;\n            }\n            else if ((op1.tipo === Enum_1.Tipos.STRING || op1.tipo === Enum_1.Tipos.NUMBER) && op2.tipo === Enum_1.Tipos.ATRIBUTOS) {\n                opIzq.valor = op2.valor;\n                opDer.valor = op1.valor;\n            }\n            else\n                return { error: \"Igualdad no compatible.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n            return { op1: opIzq, op2: opDer, tipo: tipo };\n        }\n        else if (op1.tipo === Enum_1.Tipos.FUNCION_TEXT || op2.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n            opIzq.tipo = Enum_1.Tipos.FUNCION_TEXT;\n            opDer.tipo = (op1.tipo === Enum_1.Tipos.FUNCION_TEXT) ? (op2.tipo) : (op1.tipo);\n            if (op1.tipo === Enum_1.Tipos.FUNCION_TEXT && (op2.tipo === Enum_1.Tipos.STRING || op2.tipo === Enum_1.Tipos.NUMBER)) {\n                opIzq.valor = op1.valor;\n                opDer.valor = op2.valor;\n            }\n            else if ((op1.tipo === Enum_1.Tipos.STRING || op1.tipo === Enum_1.Tipos.NUMBER) && op2.tipo === Enum_1.Tipos.FUNCION_TEXT) {\n                opIzq.valor = op2.valor;\n                opDer.valor = op1.valor;\n            }\n            else\n                return { error: \"Igualdad no compatible.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n            return { op1: opIzq, op2: opDer, tipo: tipo };\n        }\n        else if (op1.tipo === Enum_1.Tipos.ELEMENTOS || op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n            if (op1.tipo === Enum_1.Tipos.ELEMENTOS && (op2.tipo === Enum_1.Tipos.STRING || op2.tipo === Enum_1.Tipos.NUMBER)) {\n                op1 = op1.valor;\n                op2 = op2.valor;\n            }\n            else if ((op1.tipo === Enum_1.Tipos.STRING || op1.tipo === Enum_1.Tipos.NUMBER) && op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n                var tmp = op1.valor;\n                op1 = op2.valor;\n                op2 = tmp;\n            }\n            else if (op1.tipo === Enum_1.Tipos.ELEMENTOS && op2.tipo === Enum_1.Tipos.ELEMENTOS) {\n                op1 = op1.valor;\n                op2 = op2.valor;\n            }\n        }\n        else {\n            return { error: \"Igualdad no compatible.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n        }\n        return { op1: op1, op2: op2, tipo: tipo };\n    }\n    return { error: \"Relación no procesada.\", tipo: \"Semántico\", origen: \"Query\", linea: _opIzq.linea, columna: _opIzq.columna };\n}\nfunction mayor(_opIzq, _opDer) {\n    if (_opIzq.id)\n        return { e1: _opIzq.valor, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_MAYOR };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MAYOR, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { referencia: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MAYOR, tipo: Enum_1.Tipos.ELEMENTOS };\n    return {\n        valor: (_opDer + 1),\n        tipo: Enum_1.Tipos.RELACIONAL_MAYOR\n    };\n}\nfunction mayorigual(_opIzq, _opDer) {\n    if (_opIzq.id)\n        return { e1: _opIzq.valor, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_MAYORIGUAL };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MAYORIGUAL, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { referencia: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MAYORIGUAL, tipo: Enum_1.Tipos.ELEMENTOS };\n    return {\n        valor: _opDer,\n        tipo: Enum_1.Tipos.RELACIONAL_MAYORIGUAL\n    };\n}\nfunction menor(_opIzq, _opDer) {\n    if (_opIzq.id)\n        return { e1: _opIzq.valor, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_MENOR };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MENOR, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { referencia: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MENOR, tipo: Enum_1.Tipos.ELEMENTOS };\n    return {\n        valor: (_opDer - 1),\n        tipo: Enum_1.Tipos.RELACIONAL_MENOR\n    };\n}\nfunction menorigual(_opIzq, _opDer) {\n    if (_opIzq.id)\n        return { e1: _opIzq.valor, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_MENORIGUAL };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MENORIGUAL, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { referencia: _opIzq.valor, condicion: _opDer.valor, desigualdad: Enum_1.Tipos.RELACIONAL_MENORIGUAL, tipo: Enum_1.Tipos.ELEMENTOS };\n    return {\n        valor: _opDer,\n        tipo: Enum_1.Tipos.RELACIONAL_MENORIGUAL\n    };\n}\nfunction igual(_opIzq, _opDer) {\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { e1: _opIzq, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_IGUAL };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION || _opDer.tipo === Enum_1.Tipos.FUNCION_POSITION)\n        return { valor: ((_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION) ? (_opDer.valor) : (_opIzq.valor)), tipo: Enum_1.Tipos.NUMBER };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_LAST || _opDer.tipo === Enum_1.Tipos.FUNCION_LAST)\n        return { valor: ((_opIzq.valor == _opDer.valor) ? (_opDer.valor) : (-1)), tipo: Enum_1.Tipos.NUMBER };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_TEXT)\n        return { condicion: _opDer.valor, tipo: Enum_1.Tipos.FUNCION_TEXT };\n    return { e1: _opIzq, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_IGUAL };\n}\nfunction diferente(_opIzq, _opDer) {\n    if (_opIzq.tipo === Enum_1.Tipos.ELEMENTOS)\n        return { e1: _opIzq, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_DIFERENTE };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION || _opDer.tipo === Enum_1.Tipos.FUNCION_POSITION)\n        return { valor: ((_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION) ? (_opDer.valor) : (_opIzq.valor)), tipo: Enum_1.Tipos.EXCLUDE };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_LAST || _opDer.tipo === Enum_1.Tipos.FUNCION_LAST)\n        return { valor: ((_opIzq.valor == _opDer.valor) ? (_opDer.valor) : (-1)), tipo: Enum_1.Tipos.EXCLUDE };\n    if (_opIzq.tipo === Enum_1.Tipos.ATRIBUTOS)\n        return { atributo: _opIzq.valor, condicion: _opDer.valor, exclude: true, tipo: Enum_1.Tipos.ATRIBUTOS };\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_TEXT)\n        return { condicion: _opDer.valor, exclude: true, tipo: Enum_1.Tipos.FUNCION_TEXT };\n    return { e1: _opIzq, e2: _opDer, tipo: Enum_1.Tipos.ELEMENTOS, desigualdad: Enum_1.Tipos.RELACIONAL_DIFERENTE };\n}\nmodule.exports = Relacional;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Atributo = void 0;\nvar Atributo = /** @class */ (function () {\n    function Atributo(id, value, line, column) {\n        this.id = id;\n        this.value = value;\n        this.line = line;\n        this.column = column;\n    }\n    Object.defineProperty(Atributo.prototype, \"Cst\", {\n        get: function () {\n            return this.cst;\n        },\n        set: function (value) {\n            this.cst = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Atributo;\n}());\nexports.Atributo = Atributo;\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}