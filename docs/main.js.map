{"version":3,"sources":["fs (ignored)","path (ignored)","./src/environments/environment.ts","./src/app/app.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/js/routes/compile.js","./src/js/analyzers/xml_up.js","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,iCAAqB;AAC1D,8DAA8D,EAAE;AAChE;AACA;AACA,4DAA4D;AAC5D,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;ACvElB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,kNAAkN;AAC7N,aAAa,6GAA6G;AAC1H;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,mCAAmC,aAAa,Y;AACxD;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,iB;AACA;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,e;AACA;AACA;AACA,a;AACA;AACA;AACA,qBAAqB,uBAAuB,iB;AAC5C;AACA;AACA,qBAAqB,iB;AACrB;AACA;AACA,sBAAsB,iB;AACtB;AACA;AACA,CAAC;AACD,SAAS,kBAAkB,EAAE,MAAM,EAAE,kBAAkB,eAAe,MAAM,EAAE,QAAQ,2BAA2B,kBAAkB,GAAG,oBAAoB,cAAc,SAAS,GAAG,UAAU,EAAE,0CAA0C,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,4BAA4B,EAAE,SAAS,yDAAyD,UAAU,gBAAgB,gBAAgB,EAAE,SAAS,EAAE,UAAU,6BAA6B,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;AAC1gB,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sB;AACvB;AACA,gC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,aAAa,UAAU,sDAAsD,YAAY;AACzF,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;;;;;;;AClqB+C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n\r\n  _url = \"http://localhost:3080\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  compile(input: any) {\r\n    return this.http.post<any>(this._url + '/compile', input);\r\n  }\r\n\r\n  getAST(input: any) {\r\n    return this.http.post(this._url + '/AST_report', input, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  getCST(input: any) {\r\n    return this.http.post(this._url + '/CST_report', input, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  getDAG(input: any) {\r\n    return this.http.post(this._url + '/DAG_report', input, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { saveAs } from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private appService: AppService) { }\r\n\r\n  EditorOptions = {\r\n    theme: \"vs-dark\",\r\n    automaticLayout: true,\r\n    scrollBeyondLastLine: false,\r\n    fontSize: 16,\r\n    minimap: {\r\n      enabled: true\r\n    },\r\n    language: 'xml'\r\n  }\r\n\r\n  ConsoleOptions = {\r\n    theme: \"vs-dark\",\r\n    readOnly: true,\r\n    automaticLayout: true,\r\n    scrollBeyondLastLine: false,\r\n    fontSize: 16,\r\n    minimap: {\r\n      enabled: true\r\n    },\r\n    language: 'xml'\r\n  }\r\n\r\n  entrada: string = '';\r\n  consulta: string = '';\r\n  salida: string = '';\r\n\r\n  fname: string = '';\r\n  simbolos: any = [];\r\n  errores: any = [];\r\n\r\n  newTab() {\r\n    window.open(\"/tytusx-G23\", \"_blank\");\r\n  }\r\n\r\n  closeTab() {\r\n    window.close();\r\n  }\r\n\r\n  onSubmit() {\r\n    let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\r\n    if (this.entrada != \"\" && this.consulta != \"\") {\r\n      const x = {\r\n        xml: this.entrada, // documento XML\r\n        query: this.consulta, // consultas\r\n        grammar: Number(grammar_value) // gramática 1=ascendente, 2=descendente\r\n      }\r\n      // llamo a la función compile que devuelve un objeto de retorno\r\n      let data = require('../js/routes/compile').compile(x);\r\n      this.salida = data.output;\r\n      console.log('Data received!');\r\n    } else\r\n      alert(\"Alguna entrada se encuentra vacía. Intente de nuevo.\");\r\n  }\r\n\r\n  getAST() {\r\n    this.simbolos = [];\r\n    this.errores = [];\r\n    if (this.entrada != \"\") {\r\n      const x = { \"input\": this.entrada }\r\n      this.appService.getAST(x).subscribe(\r\n        data => {\r\n          saveAs(data, \"AST\");\r\n          this.salida = \"AST has been generated!\";\r\n          console.log('AST received!');\r\n        },\r\n        error => {\r\n          console.log('There was an error :(', error);\r\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el AST.\"\r\n        }\r\n      );\r\n    } else\r\n      alert(\"Entrada vacía. No se puede generar el AST.\");\r\n  }\r\n\r\n  getCST() {\r\n    this.simbolos = [];\r\n    this.errores = [];\r\n    if (this.entrada != \"\") {\r\n      const x = { \"input\": this.entrada }\r\n      this.appService.getCST(x).subscribe(\r\n        data => {\r\n          saveAs(data, \"CST\");\r\n          this.salida = \"CST has been generated!\";\r\n          console.log('CST received!');\r\n        },\r\n        error => {\r\n          console.log('There was an error :(', error);\r\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el CST.\"\r\n        }\r\n      );\r\n    } else\r\n      alert(\"Entrada vacía. No se puede generar el CST.\");\r\n  }\r\n\r\n  getDAG() {\r\n    this.simbolos = [];\r\n    this.errores = [];\r\n    if (this.entrada != \"\") {\r\n      const x = { \"input\": this.entrada }\r\n      this.appService.getDAG(x).subscribe(\r\n        data => {\r\n          saveAs(data, \"DAG\");\r\n          this.salida = \"DAG has been generated!\";\r\n          console.log('DAG received!');\r\n        },\r\n        error => {\r\n          console.log('There was an error :(', error);\r\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el DAG.\"\r\n        }\r\n      );\r\n    } else\r\n      alert(\"Entrada vacía. No se puede generar el DAG.\");\r\n  }\r\n\r\n\r\n  saveFile() {\r\n    var f = document.createElement('a');\r\n    f.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(this.entrada));\r\n    f.setAttribute('download', this.fname ? this.fname.replace(\"C:\\\\fakepath\\\\\", \"\") : 'newFile.ty');\r\n    if (document.createEvent) {\r\n      var event = document.createEvent('MouseEvents');\r\n      event.initEvent('click', true, true);\r\n      f.dispatchEvent(event);\r\n    }\r\n    else {\r\n      f.click();\r\n    }\r\n    console.log('File saved!');\r\n  }\r\n\r\n  openDialog() {\r\n    document.getElementById(\"fileInput\")!.click();\r\n  }\r\n\r\n  readFile(event: any) {\r\n    let input = event.target;\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      var text = reader.result;\r\n      if (text) {\r\n        this.entrada = text.toString();\r\n      }\r\n    }\r\n    reader.readAsText(input.files[0]);\r\n    this.salida = '';\r\n    console.log('File opened!')\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid title pt-2 pb-1\">\r\n  <h2>TytusX</h2>\r\n</div>\r\n<div class=\"btn-toolbar\" role=\"toolbar\">\r\n  <div class=\"mb-2 btn-group\">\r\n    <button type=\"button\" class=\"btn btn-dark rounded-0\" (click)=\"openDialog()\">Abrir\r\n      <input id=\"fileInput\" type=\"file\" style=\"display:none\" accept=\".xml\" (change)=\"readFile($event)\"\r\n        [(ngModel)]=\"fname\">\r\n    </button>\r\n    <button (click)=\"saveFile()\" type=\"button\" class=\"btn btn-dark rounded-0\">Guardar</button>\r\n    <button (click)=\"newTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Nueva pestaña</button>\r\n    <button (click)=\"closeTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Cerrar pestaña</button>\r\n    <div class=\"dropdown\">\r\n      <button class=\"btn btn-dark rounded-0 dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\r\n        aria-haspopup=\"true\" aria-expanded=\"false\">\r\n        Reportes\r\n      </button>\r\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\r\n        <button (click)=\"getAST()\" class=\"dropdown-item text-white item\" type=\"button\">AST</button>\r\n        <button (click)=\"getCST()\" class=\"dropdown-item text-white item\" type=\"button\">CST</button>\r\n        <button (click)=\"getDAG()\" class=\"dropdown-item text-white item\" type=\"button\">DAG</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"btn-group sel_g\" role=\"group\">\r\n    <select id=\"grammar_selector\" class=\"form-select btn btn-dark rounded-0\">\r\n      <option disabled>Seleccione gramática</option>\r\n      <option selected value=\"1\">Ascendente</option>\r\n      <option value=\"2\">Descendente</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"container-fluid px-5 pt-2\">\r\n\r\n  <form #iForm=\"ngForm\" class=\"mb-4\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n    <div class=\"row mb-5 file-editors\">\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n        <p class=\"my-0 text-white subtitulo\">Entrada XML</p>\r\n        <ngx-monaco-editor id=\"entrada\" name=\"entrada\" class=\"codebox\" [options]=\"EditorOptions\" [(ngModel)]=\"entrada\">\r\n        </ngx-monaco-editor>\r\n      </div>\r\n      <div class=\"col-lg-6 col-sm-12\">\r\n        <p class=\"my-0 text-white subtitulo\">Editor de consultas</p>\r\n        <ngx-monaco-editor id=\"consulta\" name=\"consulta\" class=\"codebox\" [options]=\"EditorOptions\"\r\n          [(ngModel)]=\"consulta\">\r\n        </ngx-monaco-editor>\r\n      </div>\r\n    </div>\r\n    <div class=\"row text-center\">\r\n      <div class=\"col-12\">\r\n        <button type=\"submit\" class=\"btn btn-outline-light btn-lg\"><i class=\"fas fa-play-circle\"></i> COMPILAR</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-5 file-console\">\r\n      <div class=\"col-12\">\r\n        <p class=\"my-0 text-white subtitulo\">Consola de salida</p>\r\n        <ngx-monaco-editor id=\"salida\" name=\"salida\" class=\"console\" [options]=\"ConsoleOptions\" [(ngModel)]=\"salida\">\r\n        </ngx-monaco-editor>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <br>\r\n  <hr>\r\n\r\n  <div class=\"row my-5\">\r\n    <div class=\"col-12\">\r\n      <p class=\"my-1 text-white subtitulo\">Tabla de símbolos</p>\r\n      <table class=\"table table-striped table-dark text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Tipo</th>\r\n            <th scope=\"col\">Ámbito</th>\r\n            <th scope=\"col\">Fila</th>\r\n            <th scope=\"col\">Columna</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of simbolos; let i = index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{item.id}}</td>\r\n            <td>{{item.tipo}}</td>\r\n            <td>{{item.entorno}}</td>\r\n            <td>{{item.linea}}</td>\r\n            <td>{{item.columna}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"row my-5\">\r\n    <div class=\"col-12\">\r\n      <p class=\"mt-2 mb-1 text-white subtitulo\">Tabla de errores</p>\r\n      <table class=\"table table-striped table-dark\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tipo</th>\r\n            <th scope=\"col\">Error</th>\r\n            <th class=\"text-center\" scope=\"col\">Fila</th>\r\n            <th class=\"text-center\" scope=\"col\">Columna</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of errores; let i = index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{item.tipo}}</td>\r\n            <td class=\"fc\">{{item.error}}</td>\r\n            <td class=\"text-center\">{{item.linea}}</td>\r\n            <td class=\"text-center\">{{item.columna}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<footer class=\"text-center text-lg-start\">\r\n  <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\r\n    <p class=\"foot my-0\">\r\n      © 2021 Grupo 23 - Organización de Lenguajes y Compiladores 2 - TytusX\r\n    </p>\r\n  </div>\r\n</footer>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AppService } from './app.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { MonacoEditorModule, MONACO_PATH } from '@materia-ui/ngx-monaco-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MonacoEditorModule\r\n  ],\r\n  providers: [\r\n    AppService,\r\n    {\r\n      provide: MONACO_PATH,\r\n      useValue: 'https://unpkg.com/monaco-editor@0.19.3/min/vs'\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\"use strict\";\r\nfunction compile(req) {\r\n    try {\r\n        console.log('Petición:', req);\r\n        // Datos de la petición desde Angular\r\n        var xml = req.xml;\r\n        var xPath = req.query;\r\n        var grammar_selected = req.grammar;\r\n        // Gramáticas a usarse según la selección: 1=ascendente, 2=descendente\r\n        var parser_xml = void 0, parser_xPath = void 0;\r\n        switch (grammar_selected) {\r\n            case 1:\r\n                parser_xml = require('../analyzers/xml_up');\r\n                parser_xPath = \"require('analyzers/xpath_up');\"; //falta hacerlas\r\n                break;\r\n            case 2:\r\n                parser_xml = \"require('analyzers/xml_down');\";\r\n                parser_xPath = \"require('analyzers/xpath_down');\";\r\n                break;\r\n        }\r\n        // Análisis de XML\r\n        var xml_ast = parser_xml.parse(xml);\r\n        if (xml_ast.parse === null) {\r\n            var output_1 = {\r\n                arreglo_simbolos: [],\r\n                arreglo_errores: xml_ast.errors,\r\n                output: \"No se ha podido recuperar del error en el documento XML.\\nIntente de nuevo.\"\r\n            };\r\n            return output_1;\r\n        }\r\n        var xml_parse = xml_ast.parse;\r\n        var xml_errors = xml_ast.errors;\r\n        // Ignorar comentarios, falta toda la lógica\r\n        // const global = new Ambito(null, \"global\");\r\n        // let cadena = Global(parse, global);\r\n        // let simbolos = global.getArraySimbols();\r\n        // for (let i = 0; i < cadena.errores.length; i++) {\r\n        //     const err = cadena.errores[i];\r\n        //     errores.push(err);\r\n        // }\r\n        // Análisis de XPath\r\n        // let xPath_ast = parser_xPath.parse(xPath);\r\n        // if (xPath_ast.parse === null) {\r\n        //     let output = {\r\n        //         arreglo_simbolos: [],\r\n        //         arreglo_errores: xPath_ast.errors,\r\n        //         output: \"No se ha podido recuperar del error en las consultas.\\nIntente de nuevo.\"\r\n        //     }\r\n        //     res.status(500).send(output);\r\n        //     return;\r\n        // }\r\n        // let xPath_parse = xPath_ast.parse;\r\n        // let xPath_errors = xPath_ast.errors;\r\n        console.log(xml_parse);\r\n        var output = {\r\n            arreglo_simbolos: [],\r\n            arreglo_errores_xml: xml_errors,\r\n            output: xml_parse[0] //de prueba\r\n        };\r\n        return output;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n        var output = {\r\n            arreglo_simbolos: [],\r\n            arreglo_errores: [],\r\n            output: \"Ha ocurrido algún error.\\nIntente de nuevo.\"\r\n        };\r\n        return output;\r\n    }\r\n}\r\nmodule.exports = { compile: compile };\r\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xml_up = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[5,7],$V2=[1,7],$V3=[10,12],$V4=[1,19],$V5=[1,20],$V6=[7,8,18],$V7=[8,10,12];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"ROOT\":4,\"EOF\":5,\"XML\":6,\"tk_open\":7,\"tk_id\":8,\"ATTR\":9,\"tk_close\":10,\"CHILD\":11,\"tk_bar\":12,\"CONTENT\":13,\"ATTR_P\":14,\"tk_equal\":15,\"attribute\":16,\"PROP\":17,\"anything\":18,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"tk_open\",8:\"tk_id\",10:\"tk_close\",12:\"tk_bar\",15:\"tk_equal\",16:\"attribute\",18:\"anything\"},\nproductions_: [0,[3,2],[4,2],[4,1],[6,9],[6,9],[6,5],[9,1],[9,0],[14,4],[14,3],[11,2],[11,1],[13,2],[13,1],[17,1],[17,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n ast = { parse: $$[$0-1], errors: errors }; errors = []; return ast; \nbreak;\ncase 2: case 11:\n $$[$0-1].push($$[$0]); this.$=$$[$0-1]; \nbreak;\ncase 3: case 12:\n this.$=[$$[$0]]; \nbreak;\ncase 4:\n console.log($$[$0-7]); this.$=$$[$0-7]; \nbreak;\ncase 5:\n console.log($$[$0-4]); this.$=$$[$0-7]; \nbreak;\ncase 6:\n console.log($$[$0-3]); this.$=$$[$0-3]; \nbreak;\ncase 7: case 14: case 15: case 16:\n this.$=$$[$0]; \nbreak;\ncase 8:\n this.$=null; \nbreak;\ncase 9:\n console.log($$[$0]); $$[$0-3].push($$[$0]); this.$=$$[$0-3]; \nbreak;\ncase 10:\n console.log($$[$0]); this.$=[$$[$0]]; \nbreak;\ncase 13:\n $$[$0-1]+=' '+$$[$0]; this.$=$$[$0-1]; \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:$V0},{1:[3]},{5:[1,5],6:6,7:$V0},o($V1,[2,3]),{8:$V2},{1:[2,1]},o($V1,[2,2]),o($V3,[2,8],{9:8,14:9,8:[1,10]}),{10:[1,11],12:[1,12]},o($V3,[2,7],{8:[1,13]}),{15:[1,14]},{6:17,7:$V0,8:$V4,11:15,13:16,17:18,18:$V5},{10:[1,21]},{15:[1,22]},{16:[1,23]},{6:25,7:[1,24]},{7:[1,26],8:$V4,17:27,18:$V5},{7:[2,12]},o($V6,[2,14]),o($V6,[2,15]),o($V6,[2,16]),o($V1,[2,6]),{16:[1,28]},o($V7,[2,10]),{8:$V2,12:[1,29]},{7:[2,11]},{12:[1,30]},o($V6,[2,13]),o($V7,[2,9]),{8:[1,31]},{8:[1,32]},{10:[1,33]},{10:[1,34]},o($V1,[2,4]),o($V1,[2,5])],\ndefaultActions: {5:[2,1],17:[2,12],25:[2,11]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n\tvar attribute = '';\r\n\tvar errors = [];\r\n\r\n\t\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// MultiLineComment\nbreak;\ncase 2:// Declaration XML\nbreak;\ncase 3:return 7\nbreak;\ncase 4:return 10\nbreak;\ncase 5:return 12\nbreak;\ncase 6:return 15\nbreak;\ncase 7:return 8\nbreak;\ncase 8: attribute = ''; this.begin(\"string\"); \nbreak;\ncase 9: attribute += yy_.yytext; \nbreak;\ncase 10: attribute += \"\\\"\"; \nbreak;\ncase 11: attribute += \"\\n\"; \nbreak;\ncase 12: attribute += \" \";  \nbreak;\ncase 13: attribute += \"\\t\"; \nbreak;\ncase 14: attribute += \"\\\\\"; \nbreak;\ncase 15: attribute += \"\\'\"; \nbreak;\ncase 16: attribute += \"\\r\"; \nbreak;\ncase 17: yy_.yytext = attribute; this.popState(); return 16; \nbreak;\ncase 18:return 5\nbreak;\ncase 19:return 18\nbreak;\ncase 20:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:$)/i,/^(?:[^></]+)/i,/^(?:.)/i],\nconditions: {\"string\":{\"rules\":[9,10,11,12,13,14,15,16,17],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,18,19,20],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xml_up;\nexports.Parser = xml_up.Parser;\nexports.parse = function () { return xml_up.parse.apply(xml_up, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}