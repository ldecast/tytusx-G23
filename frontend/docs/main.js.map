{"version":3,"sources":["fs (ignored)","path (ignored)","./src/js/controller/xpath/Instruccion/Selecting/DobleEje.js","./src/js/controller/xpath/Instruccion/Bloque.js","./src/js/analyzers/xpath_up.js","./src/environments/environment.ts","./src/js/controller/xpath/Instruccion/Selecting/Eje.js","./src/js/model/xml/Encoding/Encoding.js","./src/app/app.service.ts","./src/js/model/xml/Ambito/Global.js","./src/js/controller/xpath/Instruccion/Selecting/Predicate.js","./src/js/model/xml/Element.js","./src/js/model/xpath/Enum.js","./src/js/model/xml/Ambito/Ambito.js","./src/app/app.component.ts","./src/app/app.component.html","./src/js/controller/xpath/Expresion/Operators/Logica.js","./src/js/model/xml/Encoding/Enum.js","./src/js/model/xpath/Objeto.js","./src/app/app.module.ts","./src/js/analyzers/xml_down.js","./src/js/controller/xpath/Expresion/Expresion.js","./src/js/routes/compile.js","./src/js/model/xml/Ambito/Hijos.js","./src/js/analyzers/xml_up.js","./src/js/controller/xpath/Expresion/Operators/Aritmetica.js","./src/js/controller/xpath/Expresion/Operators/Relacional.js","./src/js/model/xml/Atributo.js","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACAa;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE,kBAAkB,mBAAO,CAAC,yBAAa;AACvC;AACA,mBAAmB;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxMa;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,uCAA2B;AAChD,iCAAiC,mBAAO,CAAC,kCAAsB;AAC/D,4BAA4B,mBAAO,CAAC,6BAAiB;AACrD;AACA,mBAAmB;AACnB;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qCAAqC;AACrC,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gDAAgD;AAChD;AACA;AACA,gBAAgB;AAChB,iDAAiD;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjHA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,q1BAAq1B;AACh2B,aAAa,yrBAAyrB;AACtsB;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,QAAQ,iCAAiC,aAAa,Y;AACjF;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,iB;AACA;AACA;AACA,uBAAuB,iB;AACvB;AACA;AACA,kF;AACA;AACA;AACA,4E;AACA;AACA;AACA,e;AACA;AACA;AACA,2FAA2F,iB;AAC3F;AACA;AACA,qF;AACA;AACA;AACA,a;AACA;AACA;AACA,wH;AACA;AACA;AACA,mH;AACA;AACA;AACA,wH;AACA;AACA;AACA,mH;AACA;AACA;AACA,iH;AACA;AACA;AACA,kH;AACA;AACA;AACA,2H;AACA;AACA;AACA,qH;AACA;AACA;AACA,mH;AACA;AACA;AACA,uL;AACA;AACA;AACA;AACA;AACA;AACA,4G;AACA;AACA;AACA,6G;AACA;AACA;AACA,mH;AACA;AACA;AACA,uH;AACA;AACA;AACA,4F;AACA;AACA;AACA,gF;AACA;AACA;AACA,2F;AACA;AACA;AACA,2F;AACA;AACA;AACA,8F;AACA;AACA;AACA,+E;AACA;AACA;AACA,8E;AACA;AACA;AACA,iF;AACA;AACA;AACA,mG;AACA;AACA;AACA,mG;AACA;AACA;AACA,uG;AACA;AACA;AACA,mG;AACA;AACA;AACA,4F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,SAAS,uOAAuO,EAAE,MAAM,EAAE,kBAAkB,cAAc,4NAA4N,gBAAgB,4NAA4N,EAAE,4NAA4N,sCAAsC,mBAAmB,aAAa,mBAAmB,GAAG,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,oGAAoG,oBAAoB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,gOAAgO,oEAAoE,UAAU,GAAG,gPAAgP,gBAAgB,4NAA4N,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,0CAA0C,4NAA4N,GAAG,gPAAgP,EAAE,qGAAqG,EAAE,gPAAgP,EAAE,gPAAgP,sFAAsF,qGAAqG,gBAAgB,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,EAAE,gPAAgP,gBAAgB,qGAAqG,6BAA6B,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,mCAAmC,gBAAgB,qBAAqB,gBAAgB,qBAAqB,iEAAiE,oFAAoF,0BAA0B,6EAA6E,gBAAgB,mCAAmC,gBAAgB,mCAAmC;AACpwO,iBAAiB,2IAA2I;AAC5J;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,SAAS,GAAG,mBAAO,CAAC,mCAAuB;AACnD,QAAQ,QAAQ,GAAG,mBAAO,CAAC,iCAAqB;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA;AACA;AACA,sBAAsB,uHAAuH,EAAE,kB;AAC/I;AACA;AACA,CAAC;AACD;AACA,aAAa,kBAAkB,uDAAuD,mBAAmB,uDAAuD,YAAY;AAC5K,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACl4BA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACftD;AACb;AACA,4CAA4C;AAC5C;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE,kBAAkB,mBAAO,CAAC,yBAAa;AACvC;AACA,mBAAmB;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD,iBAAiB;AACjB;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD,gBAAgB;AAChB;AACA,8BAA8B,wBAAwB;AACtD,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpQa;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;AC9BO,MAAM,UAAU;IAIrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,SAAI,GAAG,uBAAuB,CAAC;IAES,CAAC;IAEzC,OAAO,CAAC,KAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,KAAK,EAAE;YACtD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;;oEA1BU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACJP;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,8BAA8B,mBAAO,CAAC,qBAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACfa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,0CAA8B;AACnD,kCAAkC,mBAAO,CAAC,uCAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yCAAyC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC9Ia;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpKa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;;;;;;;;;;;ACnElC;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;;;IC4G1B,qEAAiD;IAC/C,yEAAgB;IAAA,uDAAO;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,0EAAwB;IAAA,wDAAc;IAAA,4DAAK;IAC3C,0EAAwB;IAAA,wDAAgB;IAAA,4DAAK;IAC/C,4DAAK;;;;IAPa,0DAAO;IAAP,yEAAO;IACnB,0DAAW;IAAX,2EAAW;IACX,0DAAa;IAAb,6EAAa;IACb,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;IACI,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;;;IAwB1C,qEAAgD;IAC9C,yEAAgB;IAAA,uDAAO;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,yEAAwB;IAAA,wDAAc;IAAA,4DAAK;IAC3C,0EAAwB;IAAA,wDAAgB;IAAA,4DAAK;IAC/C,4DAAK;;;;IANa,0DAAO;IAAP,yEAAO;IACnB,0DAAa;IAAb,6EAAa;IACb,0DAAc;IAAd,8EAAc;IACd,0DAAe;IAAf,+EAAe;IACK,0DAAc;IAAd,8EAAc;IACd,0DAAgB;IAAhB,gFAAgB;;AD1I7C,MAAM,YAAY;IACvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,kBAAa,GAAG;YACd,KAAK,EAAE,SAAS;YAChB,eAAe,EAAE,IAAI;YACrB,oBAAoB,EAAE,KAAK;YAC3B,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE;gBACP,OAAO,EAAE,IAAI;aACd;YACD,QAAQ,EAAE,KAAK;SAChB;QAED,mBAAc,GAAG;YACf,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,IAAI;YACrB,oBAAoB,EAAE,KAAK;YAC3B,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE;gBACP,OAAO,EAAE,IAAI;aACd;YACD,QAAQ,EAAE,KAAK;SAChB;QAED,YAAO,GAAW,EAAE,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;QACtB,WAAM,GAAW,EAAE,CAAC;QAEpB,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,YAAO,GAAQ,EAAE,CAAC;IA/B4B,CAAC;IAiC/C,MAAM;QACJ,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ;QACN,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ;QACN,IAAI,aAAa,GAAuB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAE,CAAC,KAAK,CAAC;QAC3F,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;YAC7C,MAAM,CAAC,GAAG;gBACR,GAAG,EAAE,IAAI,CAAC,OAAO;gBACjB,KAAK,EAAE,IAAI,CAAC,QAAQ;gBACpB,OAAO,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,wCAAwC;aACxE;YACD,+DAA+D;YAC/D,IAAI,IAAI,GAAG,mBAAO,CAAC,kCAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC/B;;YACC,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;YACtB,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CACjC,IAAI,CAAC,EAAE;gBACL,yDAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,yBAAyB,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC/B,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,MAAM,GAAG,gEAAgE;YAChF,CAAC,CACF,CAAC;SACH;;YACC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACxD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;YACtB,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CACjC,IAAI,CAAC,EAAE;gBACL,yDAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,yBAAyB,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC/B,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,MAAM,GAAG,gEAAgE;YAChF,CAAC,CACF,CAAC;SACH;;YACC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACxD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;YACtB,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CACjC,IAAI,CAAC,EAAE;gBACL,yDAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,yBAAyB,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC/B,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,MAAM,GAAG,gEAAgE;YAChF,CAAC,CACF,CAAC;SACH;;YACC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACxD,CAAC;IAGD,QAAQ,CAAC,EAAU;QACjB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,EAAE,KAAK,CAAC;YACV,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;;YAEpB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,gCAAgC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QACpF,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAC3H,IAAI,QAAQ,CAAC,WAAW,EAAE;YACxB,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAChD,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACrC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB;aACI;YACH,CAAC,CAAC,KAAK,EAAE,CAAC;SACX;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,EAAE,KAAK,CAAC;YACV,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC,KAAK,EAAE,CAAC;;YAE/C,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;IAED,QAAQ,CAAC,KAAU,EAAE,EAAU;QAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QACzB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;YACzB,IAAI,IAAI,EAAE;gBACR,QAAQ,EAAE,EAAE;oBACV,KAAK,CAAC;wBACJ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC5B,MAAM;oBACR,KAAK,CAAC;wBACJ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC7B,MAAM;iBACT;aACF;QACH,CAAC;QACD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,QAAQ,EAAE,EAAE;YACV,KAAK,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,MAAM;SACT;QACD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;;wEAnLU,YAAY;4FAAZ,YAAY;QCTzB,yEAA6C;QAC3C,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACjB,4DAAM;QACN,yEAAwC;QACtC,yEAA4B;QAC1B,yEAAsB;QACpB,4EAC8C;QAC5C,kEACF;QAAA,4DAAS;QACT,yEAA6C;QAC3C,4EAAoF;QAA5E,oIAAS,eAAW,CAAC,CAAC,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QAChG,4EACsB;QADgD,4IAAU,qBAAgB,CAAC,CAAC,IAAC;QAAnG,4DACsB;QACtB,6EAAoF;QAA5E,qIAAS,eAAW,CAAC,CAAC,IAAC;QAAqD,iEAAK;QAAA,4DAAS;QAClG,4EAA0G;QAAlD,4IAAU,qBAAgB,CAAC,CAAC,IAAC;QAArF,4DAA0G;QAC5G,4DAAM;QACR,4DAAM;QACN,0EAAsB;QACpB,6EAC8C;QAC5C,qEACF;QAAA,4DAAS;QACT,0EAA6C;QAC3C,6EAAkF;QAA1E,qIAAS,aAAS,CAAC,CAAC,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QAC9F,6EAAkF;QAA1E,qIAAS,aAAS,CAAC,CAAC,IAAC;QAAqD,iEAAK;QAAA,4DAAS;QAClG,4DAAM;QACR,4DAAM;QACN,6EAAwE;QAAhE,qIAAS,YAAQ,IAAC;QAA8C,8EAAa;QAAA,4DAAS;QAC9F,6EAA0E;QAAlE,qIAAS,cAAU,IAAC;QAA8C,+EAAc;QAAA,4DAAS;QACjG,0EAAsB;QACpB,6EAC8C;QAC5C,qEACF;QAAA,4DAAS;QACT,0EAA6C;QAC3C,6EAAqF;QAA7E,qIAAS,gBAAY,CAAC,CAAC,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QACjG,6EAAqF;QAA7E,qIAAS,gBAAY,CAAC,CAAC,IAAC;QAAqD,iEAAK;QAAA,4DAAS;QACrG,4DAAM;QACR,4DAAM;QACN,0EAAsB;QACpB,8EAC6C;QAC3C,sEACF;QAAA,4DAAS;QACT,0EAA6C;QAC3C,6EAA+E;QAAvE,qIAAS,YAAQ,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QAC3F,6EAA+E;QAAvE,qIAAS,YAAQ,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QAC3F,6EAA+E;QAAvE,qIAAS,YAAQ,IAAC;QAAqD,+DAAG;QAAA,4DAAS;QAC7F,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EAA0C;QACxC,8EAAyE;QACvE,8EAAiB;QAAA,qFAAoB;QAAA,4DAAS;QAC9C,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAkB;QAAA,uEAAW;QAAA,4DAAS;QACxC,4DAAS;QACX,4DAAM;QACR,4DAAM;QAGN,2EAAuC;QAErC,gFAAsE;QAAnC,yIAAY,cAAU,IAAC;QACxD,2EAAmC;QACjC,2EAAgC;QAC9B,yEAAqC;QAAA,uEAAW;QAAA,4DAAI;QACpD,yFAA+G;QAAtB,8LAAqB;QAC9G,4DAAoB;QACtB,4DAAM;QACN,2EAAgC;QAC9B,yEAAqC;QAAA,+EAAmB;QAAA,4DAAI;QAC5D,yFACyB;QAAvB,+LAAsB;QACxB,4DAAoB;QACtB,4DAAM;QACR,4DAAM;QACN,2EAA6B;QAC3B,2EAAoB;QAClB,8EAA2D;QAAA,oEAAkC;QAAC,qEAAQ;QAAA,4DAAS;QACjH,4DAAM;QACR,4DAAM;QACN,2EAAmC;QACjC,2EAAoB;QAClB,yEAAqC;QAAA,6EAAiB;QAAA,4DAAI;QAC1D,yFAA6G;QAArB,6LAAoB;QAC5G,4DAAoB;QACtB,4DAAM;QACR,4DAAM;QACR,4DAAO;QACP,iEAAI;QACJ,iEAAI;QAEJ,2EAAsB;QACpB,2EAAoB;QAClB,yEAAqC;QAAA,kFAAiB;QAAA,4DAAI;QAC1D,6EAA8C;QAC5C,yEAAO;QACL,sEAAI;QACF,0EAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,0EAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,uEAAM;QAAA,4DAAK;QAC3B,0EAAoC;QAAA,gEAAI;QAAA,4DAAK;QAC7C,0EAAoC;QAAA,mEAAO;QAAA,4DAAK;QAClD,4DAAK;QACP,4DAAQ;QACR,yEAAO;QACL,0GAQK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QAEN,kEAAI;QAEJ,4EAAsB;QACpB,4EAAoB;QAClB,0EAA0C;QAAA,6EAAgB;QAAA,4DAAI;QAC9D,8EAA8C;QAC5C,0EAAO;QACL,uEAAI;QACF,2EAAgB;QAAA,8DAAC;QAAA,4DAAK;QACtB,2EAAgB;QAAA,iEAAI;QAAA,4DAAK;QACzB,2EAAgB;QAAA,kEAAK;QAAA,4DAAK;QAC1B,2EAAgB;QAAA,mEAAM;QAAA,4DAAK;QAC3B,2EAAoC;QAAA,iEAAI;QAAA,4DAAK;QAC7C,2EAAoC;QAAA,oEAAO;QAAA,4DAAK;QAClD,4DAAK;QACP,4DAAQ;QACR,0EAAO;QACL,4GAOK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QAER,4DAAM;QAEN,+EAA0C;QACxC,4EAA2E;QACzE,0EAAqB;QACnB,8IACF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAS;;QArJC,2DAAmB;QAAnB,8EAAmB;QAEiE,0DAAmB;QAAnB,8EAAmB;QAqD1C,2DAAyB;QAAzB,sFAAyB;QAKvB,0DAAyB;QAAzB,sFAAyB;QAa7B,2DAA0B;QAA1B,uFAA0B;QAwBhE,2DAAa;QAAb,iFAAa;QA+Bb,2DAAY;QAAZ,gFAAY;;;;;;;;;;;;;;AC7I9B;AACb,aAAa,mBAAO,CAAC,0CAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;;;;;;;;;;;ACTlC;AACb,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,oBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AAEE;AAEJ;AACa;AAEwB;;AAqBzE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAPb;QACT,uDAAU;QACV;YACE,OAAO,EAAE,yEAAW;YACpB,QAAQ,EAAE,+CAA+C;SAC1D;KACF,YAZQ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,gFAAkB;SACnB;mIAUU,SAAS,mBAjBlB,2DAAY,aAGZ,uEAAa;QACb,0DAAW;QACX,qEAAgB;QAChB,gFAAkB;;;;;;;;;;;;ACnBtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,gRAAgR;AAC3R,aAAa,6JAA6J;AAC1K;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,4IAA4I,EAAE,SAAS;AACvK;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,8IAA8I,EAAE,SAAS,6B;AACvK;AACA;AACA,uBAAuB,uBAAuB,eAAe,EAAE,OAAO,aAAa,E;AACnF;AACA;AACA,qBAAqB,iBAAiB,EAAE,OAAO,WAAW,E;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;AACA,cAAc,sJAAsJ,EAAE,e;AACtK;AACA;AACA,e;AACA;AACA;AACA,a;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB,EAAE,iB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA,UAAU;;AAEV;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,CAAC;AACD,SAAS,oBAAoB,EAAE,MAAM,EAAE,oBAAoB,EAAE,QAAQ,EAAE,QAAQ,EAAE,6BAA6B,EAAE,MAAM,EAAE,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,eAAe,kBAAkB,8BAA8B,oBAAoB,gBAAgB,UAAU,EAAE,wEAAwE,EAAE,UAAU,EAAE,0BAA0B,EAAE,oBAAoB,EAAE,SAAS,EAAE,gBAAgB,gBAAgB,uDAAuD,kGAAkG,YAAY,+BAA+B,gBAAgB,gBAAgB,UAAU,EAAE,SAAS,EAAE,SAAS,gBAAgB,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACvxB,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,WAAW,GAAG,mBAAO,CAAC,mCAAuB;AACrD,QAAQ,UAAU,GAAG,mBAAO,CAAC,kCAAsB;AACnD,QAAQ,WAAW,GAAG,mBAAO,CAAC,4CAAgC;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8B;AACvB;AACA,gC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA,CAAC;AACD;AACA,aAAa,kBAAkB,uDAAuD,mBAAmB,sDAAsD,YAAY;AAC3K,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACn4Ba;AACb,aAAa,mBAAO,CAAC,uCAA2B;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qBAAqB,uCAAuC;AAC5D,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,oCAAwB;AACzD;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,oCAAwB;AACzD;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,gCAAoB;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;ACxDa;AACb;AACA,4CAA4C;AAC5C;AACA,+BAA+B,mBAAO,CAAC,oDAAwC;AAC/E,eAAe,mBAAO,CAAC,wCAA4B;AACnD,eAAe,mBAAO,CAAC,wCAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,iCAAqB;AAC1D,+BAA+B,mBAAO,CAAC,mCAAuB;AAC9D;AACA;AACA,6BAA6B,mBAAO,CAAC,mCAAuB;AAC5D,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wGAAwG;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uGAAuG;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sGAAsG;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kGAAkG;AACjI;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;;AC5EL;AACb,eAAe,mBAAO,CAAC,sBAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;;;;;;;;;;;;ACXlB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,0BAA0B,EAAE;AAC1C,MAAM;AACN,WAAW,gRAAgR;AAC3R,aAAa,6JAA6J;AAC1K;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,4IAA4I,EAAE,SAAS;AACvK;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,8IAA8I,EAAE,SAAS,6B;AACvK;AACA;AACA,qBAAqB,uBAAuB,iBAAiB,EAAE,OAAO,aAAa,E;AACnF;AACA;AACA,qBAAqB,iBAAiB,EAAE,OAAO,WAAW,E;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qHAAqH;AACtI;AACA;;AAEA;AACA;AACA,cAAc,sJAAsJ,EAAE,e;AACtK;AACA;AACA,e;AACA;AACA;AACA,a;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB,EAAE,iB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA,UAAU;;AAEV;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,SAAS,oB;AACT;AACA;AACA,CAAC;AACD,SAAS,oBAAoB,EAAE,MAAM,EAAE,oBAAoB,EAAE,QAAQ,EAAE,yBAAyB,eAAe,MAAM,EAAE,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,4BAA4B,qBAAqB,8BAA8B,oBAAoB,eAAe,SAAS,GAAG,UAAU,EAAE,wEAAwE,EAAE,UAAU,EAAE,UAAU,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,iDAAiD,EAAE,gBAAgB,iHAAiH,oBAAoB,4CAA4C,gBAAgB,gBAAgB,UAAU,gBAAgB,SAAS,gBAAgB,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AACrzB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,WAAW,GAAG,mBAAO,CAAC,mCAAuB;AACrD,QAAQ,UAAU,GAAG,mBAAO,CAAC,kCAAsB;AACnD,QAAQ,WAAW,GAAG,mBAAO,CAAC,4CAAgC;AAC9D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8B;AACvB;AACA,gC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA,wBAAwB,8B;AACxB;AACA,iC;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,0B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,2B;AACA;AACA,gCAAgC,iBAAiB,W;AACjD;AACA;AACA;AACA;AACA;AACA,sBAAsB,qHAAqH,EAAE,kB;AAC7I;AACA;AACA,CAAC;AACD;AACA,aAAa,kBAAkB,uDAAuD,mBAAmB,sDAAsD,YAAY;AAC3K,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACn4Ba;AACb,aAAa,mBAAO,CAAC,0CAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFa;AACb,aAAa,mBAAO,CAAC,0CAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,0BAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB;AAClB,kBAAkB;AAClB;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ja;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACtB+C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate_1 = require(\"./Predicate\");\nfunction DobleEje(_instruccion, _ambito, _contexto) {\n    var retorno = { cadena: Enum_1.Tipos.NONE, retorno: Array() };\n    var err = { err: \"No se encontraron elementos.\\n\", linea: _instruccion.linea, columna: _instruccion.columna };\n    var contexto = (_contexto.retorno) ? (_contexto.retorno) : null;\n    var expresion = Expresion_1.default(_instruccion.expresion.expresion, _ambito, contexto);\n    if (expresion.err)\n        return expresion;\n    var predicate = _instruccion.expresion.predicate;\n    var root;\n    if (expresion.tipo === Enum_1.Tipos.ELEMENTOS) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        retorno.cadena = Enum_1.Tipos.ELEMENTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        if (root.atributos.length === 0)\n            return err;\n        retorno.cadena = Enum_1.Tipos.ATRIBUTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ASTERISCO) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        retorno.cadena = Enum_1.Tipos.ELEMENTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_NODE) {\n        root = getAllSymbolFromCurrent(expresion.valor, contexto, _ambito, predicate);\n        if (root.nodos.length === 0)\n            return err;\n        retorno.cadena = root.tipo;\n    }\n    else {\n        return { err: \"Expresión no válida.\\n\", linea: _instruccion.linea, columna: _instruccion.columna };\n    }\n    if (root.err)\n        return root;\n    if (root.length === 0 || root === null)\n        return err;\n    retorno.retorno = root;\n    return retorno;\n}\nfunction getAllSymbolFromCurrent(_nodename, _contexto, _ambito, _condicion) {\n    if (_contexto)\n        return getFromCurrent(_nodename, _contexto, _ambito, _condicion);\n    else\n        return getFromRoot(_nodename, _ambito, _condicion);\n}\nfunction getFromCurrent(_id, _contexto, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    var nodes = Array();\n    // Selecciona todos los descencientes (elementos y/o texto)\n    if (_id === \"node()\") {\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    nodes = _ambito.nodesFunction(child, nodes);\n                });\n            }\n            else if (element.value)\n                nodes.push({ textos: element.value });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes = filter.filterNodes(nodes);\n        }\n        return { tipo: Enum_1.Tipos.COMBINADO, nodos: nodes };\n    }\n    // Selecciona todos los atributos a partir del contexto\n    else if (_id.tipo === \"@\") {\n        var a = { atributos: attributes, elementos: elements };\n        if (_id.id === \"*\") {\n            for (var i = 0; i < _contexto.length; i++) {\n                var element = _contexto[i];\n                a = _ambito.searchAnyAttributes(element, attributes, elements);\n            }\n        }\n        else {\n            for (var i = 0; i < _contexto.length; i++) {\n                var element = _contexto[i];\n                a = _ambito.searchAttributesFromCurrent(element, _id.id, attributes, elements);\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, a.elementos);\n            a.elementos = filter.filterElements();\n            a.atributos = filter.filterAttributes(a.atributos);\n        }\n        return a;\n    }\n    else if (_id === \"..\") {\n        if (_contexto.atributos) {\n            var _loop_1 = function (i) {\n                var attribute = _contexto.atributos[i];\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    elements = _ambito.searchDadFromAttribute(elm, attribute, elements);\n                });\n            };\n            for (var i = 0; i < _contexto.atributos.length; i++) {\n                _loop_1(i);\n            }\n            if (_condicion) {\n                var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n                elements = filter.filterElements();\n            }\n            return elements;\n        }\n        var _loop_2 = function (i) {\n            var element = _contexto[i];\n            var dad = element.father;\n            if (dad) {\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    if (elm.id_open === dad.id && elm.line == dad.line && elm.column == dad.column)\n                        elements.push(elm);\n                    if (elm.childs)\n                        elm.childs.forEach(function (child) {\n                            elements = _ambito.searchDad(child, dad.id, dad.line, dad.column, elements);\n                        });\n                });\n            }\n        };\n        for (var i = 0; i < _contexto.length; i++) {\n            _loop_2(i);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Selecciona todos los descendientes con el id\n    else {\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.childs)\n                element.childs.forEach(function (child) {\n                    elements = _ambito.searchNodes(_id, child, elements);\n                });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n}\nfunction getFromRoot(_id, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    // Selecciona todos los descencientes (elementos y/o texto)\n    if (_id === \"node()\") {\n        var nodes_1 = Array();\n        _ambito.tablaSimbolos.forEach(function (element) {\n            nodes_1 = _ambito.nodesFunction(element, nodes_1);\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes_1 = filter.filterNodes(nodes_1);\n        }\n        return { tipo: Enum_1.Tipos.COMBINADO, nodos: nodes_1 };\n    }\n    // Selecciona todos los atributos a partir de la raíz\n    else if (_id.tipo === \"@\") {\n        var a_1 = { atributos: attributes, elementos: elements };\n        _ambito.tablaSimbolos.forEach(function (element) {\n            if (_id.id === \"*\")\n                a_1 = _ambito.searchAnyAttributes(element, attributes, elements);\n            else\n                a_1 = _ambito.searchAttributesFromCurrent(element, _id.id, attributes, elements);\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, a_1.elementos);\n            a_1.elementos = filter.filterElements();\n            a_1.atributos = filter.filterAttributes(a_1.atributos);\n        }\n        return a_1;\n    }\n    // Selecciona todos los descendientes con el id o si es un *\n    else {\n        _ambito.tablaSimbolos.forEach(function (element) {\n            if (element.id_open === _id || _id === \"*\")\n                elements.push(element);\n            if (element.childs)\n                element.childs.forEach(function (child) {\n                    elements = _ambito.searchNodes(_id, child, elements);\n                });\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n}\nmodule.exports = DobleEje;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../model/xpath/Enum\");\nvar DobleEje_1 = __importDefault(require(\"./Selecting/DobleEje\"));\nvar Eje_1 = __importDefault(require(\"./Selecting/Eje\"));\nfunction Bloque(_instruccion, _ambito) {\n    var retorno = { cadena: \"\", retorno: null };\n    var tmp;\n    console.log(_instruccion, 888888);\n    for (var i = 0; i < _instruccion.length; i++) {\n        var camino = _instruccion[i]; // En caso de tener varios caminos\n        for (var j = 0; j < camino.length; j++) {\n            var instr = camino[j];\n            console.log(instr, 7777777);\n            switch (instr.tipo) {\n                case Enum_1.Tipos.SELECT_FROM_ROOT:\n                    tmp = Eje_1.default(instr, _ambito, retorno);\n                    if (tmp.err)\n                        return tmp;\n                    retorno = tmp;\n                    break;\n                case Enum_1.Tipos.SELECT_FROM_CURRENT:\n                    tmp = DobleEje_1.default(instr, _ambito, retorno);\n                    if (tmp.err)\n                        return tmp;\n                    retorno = tmp;\n                    break;\n                default:\n                    return { err: \"Instrucción no procesada.\\n\", linea: instr.linea, columna: instr.columna };\n            }\n        }\n    }\n    console.log(retorno, 888888888);\n    if (retorno.retorno) {\n        var cadena_1 = \"\";\n        if (retorno.cadena === Enum_1.Tipos.TEXTOS) {\n            var root = retorno.retorno;\n            root.forEach(function (txt) {\n                cadena_1 += concatText(txt);\n            });\n        }\n        else if (retorno.cadena === Enum_1.Tipos.ELEMENTOS) {\n            var root = retorno.retorno;\n            root.forEach(function (element) {\n                cadena_1 += concatChilds(element, \"\");\n            });\n        }\n        else if (retorno.cadena === Enum_1.Tipos.ATRIBUTOS) {\n            // let root: Array<Atributo> = attr; // <-- muestra sólo el atributo\n            // root.forEach(attribute => {\n            //     cadena += concatAttributes(attribute);\n            // });\n            var root = retorno.retorno.elementos; // <-- muestra toda la etiqueta\n            root.forEach(function (element) {\n                cadena_1 += extractAttributes(element, \"\");\n            });\n        }\n        else if (retorno.cadena === Enum_1.Tipos.COMBINADO) {\n            console.log(retorno, 3523523);\n            var root = retorno.retorno.nodos;\n            root.forEach(function (elemento) {\n                if (elemento.elementos) {\n                    cadena_1 += concatChilds(elemento.elementos, \"\");\n                }\n                else if (elemento.textos) {\n                    cadena_1 += concatText(elemento.textos);\n                }\n            });\n        }\n        retorno.cadena = cadena_1.substring(1);\n    }\n    return retorno;\n}\nfunction concatChilds(_element, cadena) {\n    cadena = (\"\\n<\" + _element.id_open);\n    if (_element.attributes) {\n        _element.attributes.forEach(function (attribute) {\n            cadena += (\" \" + attribute.id + \"=\\\"\" + attribute.value + \"\\\"\");\n        });\n    }\n    if (_element.childs) {\n        cadena += \">\";\n        _element.childs.forEach(function (child) {\n            cadena += concatChilds(child, cadena);\n        });\n        cadena += (\"\\n</\" + _element.id_close + \">\");\n    }\n    else {\n        if (_element.id_close === null)\n            cadena += \"/>\";\n        else {\n            cadena += \">\";\n            cadena += (_element.value + \"</\" + _element.id_close + \">\");\n        }\n    }\n    return cadena;\n}\nfunction concatAttributes(_attribute) {\n    return \"\\n\" + _attribute.id + \"=\\\"\" + _attribute.value + \"\\\"\";\n}\nfunction extractAttributes(_element, cadena) {\n    if (_element.attributes) {\n        _element.attributes.forEach(function (attribute) {\n            cadena += \"\\n\" + attribute.id + \"=\\\"\" + attribute.value + \"\\\"\";\n        });\n    }\n    return cadena;\n}\nfunction concatText(_text) {\n    return \"\\n\" + _text;\n}\nmodule.exports = Bloque;\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xpath_up = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,20],$V3=[1,16],$V4=[1,17],$V5=[1,18],$V6=[1,19],$V7=[1,21],$V8=[1,22],$V9=[1,23],$Va=[1,12],$Vb=[1,13],$Vc=[1,14],$Vd=[1,15],$Ve=[1,24],$Vf=[1,25],$Vg=[1,26],$Vh=[1,27],$Vi=[1,28],$Vj=[1,29],$Vk=[1,30],$Vl=[1,31],$Vm=[1,32],$Vn=[1,33],$Vo=[1,34],$Vp=[1,35],$Vq=[1,36],$Vr=[5,6],$Vs=[5,6,9,10,24,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vt=[5,6,9,10,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vu=[2,13],$Vv=[1,44],$Vw=[5,6,9,10,14,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60],$Vx=[1,56],$Vy=[1,57],$Vz=[1,66],$VA=[1,67],$VB=[1,68],$VC=[1,69],$VD=[1,70],$VE=[1,71],$VF=[1,72],$VG=[1,73],$VH=[1,74],$VI=[1,75],$VJ=[1,76],$VK=[1,77],$VL=[1,78],$VM=[16,18,19,20,21,22,23,24,25,26,28,29,30,31,32],$VN=[16,18,19,20,21,28,29,30,31,32],$VO=[16,18,19,20,21,22,23,28,29,30,31,32];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"XPATH_U\":4,\"EOF\":5,\"tk_line\":6,\"XPATH\":7,\"QUERY\":8,\"tk_2bar\":9,\"tk_bar\":10,\"EXP_PR\":11,\"AXIS\":12,\"CORCHET\":13,\"tk_corA\":14,\"E\":15,\"tk_corC\":16,\"CORCHETP\":17,\"tk_menorigual\":18,\"tk_menor\":19,\"tk_mayorigual\":20,\"tk_mayor\":21,\"tk_mas\":22,\"tk_menos\":23,\"tk_asterisco\":24,\"tk_div\":25,\"tk_mod\":26,\"tk_ParA\":27,\"tk_ParC\":28,\"tk_or\":29,\"tk_and\":30,\"tk_equal\":31,\"tk_diferent\":32,\"FUNC\":33,\"PRIMITIVO\":34,\"tk_id\":35,\"tk_attribute_d\":36,\"tk_attribute_s\":37,\"num\":38,\"tk_punto\":39,\"tk_2puntos\":40,\"tk_arroba\":41,\"tk_text\":42,\"tk_last\":43,\"tk_position\":44,\"tk_node\":45,\"AXISNAME\":46,\"tk_4puntos\":47,\"tk_ancestor\":48,\"tk_ancestor2\":49,\"tk_attribute\":50,\"tk_child\":51,\"tk_descendant\":52,\"tk_descendant2\":53,\"tk_following\":54,\"tk_following2\":55,\"tk_namespace\":56,\"tk_parent\":57,\"tk_preceding\":58,\"tk_preceding2\":59,\"tk_self\":60,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"tk_line\",9:\"tk_2bar\",10:\"tk_bar\",14:\"tk_corA\",16:\"tk_corC\",18:\"tk_menorigual\",19:\"tk_menor\",20:\"tk_mayorigual\",21:\"tk_mayor\",22:\"tk_mas\",23:\"tk_menos\",24:\"tk_asterisco\",25:\"tk_div\",26:\"tk_mod\",27:\"tk_ParA\",28:\"tk_ParC\",29:\"tk_or\",30:\"tk_and\",31:\"tk_equal\",32:\"tk_diferent\",35:\"tk_id\",36:\"tk_attribute_d\",37:\"tk_attribute_s\",38:\"num\",39:\"tk_punto\",40:\"tk_2puntos\",41:\"tk_arroba\",42:\"tk_text\",43:\"tk_last\",44:\"tk_position\",45:\"tk_node\",47:\"tk_4puntos\",48:\"tk_ancestor\",49:\"tk_ancestor2\",50:\"tk_attribute\",51:\"tk_child\",52:\"tk_descendant\",53:\"tk_descendant2\",54:\"tk_following\",55:\"tk_following2\",56:\"tk_namespace\",57:\"tk_parent\",58:\"tk_preceding\",59:\"tk_preceding2\",60:\"tk_self\"},\nproductions_: [0,[3,2],[4,3],[4,1],[7,2],[7,1],[8,2],[8,2],[8,1],[8,1],[13,4],[13,3],[17,1],[17,0],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,3],[15,2],[15,3],[15,3],[15,3],[15,3],[15,3],[15,1],[11,2],[11,2],[34,1],[34,1],[34,1],[34,1],[34,1],[34,1],[34,1],[34,2],[34,2],[33,3],[33,3],[33,3],[33,3],[12,3],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n console.log($$[$0-1],999); ast = { ast: $$[$0-1], errors: errors }; errors = []; return ast; \nbreak;\ncase 2:\n $$[$0-2].push($$[$0]); this.$=$$[$0-2]; \nbreak;\ncase 3: case 5:\n this.$=[$$[$0]]; \nbreak;\ncase 4:\n $$[$0-1].push($$[$0]); this.$=$$[$0-1]; \nbreak;\ncase 6:\n this.$=builder.newDoubleAxis($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 7:\n this.$=builder.newAxis($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 8: case 9: case 12: case 29:\n this.$=$$[$0]; \nbreak;\ncase 10:\n $$[$0-3].push(builder.newPredicate($$[$0-1], this._$.first_line, this._$.first_column+1)); this.$=$$[$0-3]; \nbreak;\ncase 11:\n this.$=[builder.newPredicate($$[$0-1], this._$.first_line, this._$.first_column+1)]; \nbreak;\ncase 13:\n this.$=null; \nbreak;\ncase 14:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENORIGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 15:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MENOR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 16:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYORIGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 17:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_MAYOR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 18:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_SUMA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 19:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_RESTA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 20:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MULTIPLICACION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 21:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_DIVISION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 22:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.OPERACION_MODULO, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 23:\n this.$=builder.newOperation(builder.newValue(0, Tipos.NUMBER, this._$.first_line, this._$.first_column+1), $$[$0], Tipos.OPERACION_RESTA, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 24:\n this.$=$$[$0-1] \nbreak;\ncase 25:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_OR, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 26:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.LOGICA_AND, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 27:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_IGUAL, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 28:\n this.$=builder.newOperation($$[$0-2], $$[$0], Tipos.RELACIONAL_DIFERENTE, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 30: case 31:\n this.$=builder.newExpression($$[$0-1], $$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 32:\n this.$=builder.newNodename($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 33: case 34:\n this.$=builder.newValue($$[$0], Tipos.STRING, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 35:\n this.$=builder.newValue($$[$0], Tipos.NUMBER, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 36:\n this.$=builder.newValue($$[$0], Tipos.ASTERISCO, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 37:\n this.$=builder.newCurrent($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 38:\n this.$=builder.newParent($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 39: case 40:\n this.$=builder.newAttribute($$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 41:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_TEXT, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 42:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_LAST, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 43:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_POSITION, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 44:\n this.$=builder.newValue($$[$0-2], Tipos.FUNCION_NODE, this._$.first_line, this._$.first_column+1); \nbreak;\ncase 45:\n this.$=builder.newAxisObject($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1); \nbreak;\ncase 46:\n this.$ = Tipos.AXIS_ANCESTOR \nbreak;\ncase 47:\n this.$ = Tipos.AXIS_ANCESTOR_OR_SELF \nbreak;\ncase 48:\n this.$ = Tipos.AXIS_ATTRIBUTE \nbreak;\ncase 49:\n this.$ = Tipos.AXIS_CHILD \nbreak;\ncase 50:\n this.$ = Tipos.AXIS_DESCENDANT \nbreak;\ncase 51:\n this.$ = Tipos.AXIS_DESCENDANT_OR_SELF \nbreak;\ncase 52:\n this.$ = Tipos.AXIS_FOLLOWING \nbreak;\ncase 53:\n this.$ = Tipos.AXIS_FOLLOWING_SIBLING \nbreak;\ncase 54:\n this.$ = Tipos.AXIS_NAMESPACE \nbreak;\ncase 55:\n this.$ = Tipos.AXIS_PARENT \nbreak;\ncase 56:\n this.$ = Tipos.AXIS_PRECEDING \nbreak;\ncase 57:\n this.$ = Tipos.AXIS_PRECEDING_SIBLING \nbreak;\ncase 58:\n this.$ = Tipos.AXIS_SELF \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,8:4,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{1:[3]},{5:[1,37],6:[1,38]},o($Vr,[2,3],{11:7,12:8,33:9,34:10,46:11,8:39,9:$V0,10:$V1,24:$V2,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq}),o($Vs,[2,5]),{8:40,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:41,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vt,[2,8]),o($Vt,[2,9]),o($Vt,$Vu,{17:42,13:43,14:$Vv}),o($Vt,$Vu,{13:43,17:45,14:$Vv}),{47:[1,46]},{27:[1,47]},{27:[1,48]},{27:[1,49]},{27:[1,50]},o($Vw,[2,32]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),{24:[1,52],35:[1,51]},{47:[2,46]},{47:[2,47]},{47:[2,48]},{47:[2,49]},{47:[2,50]},{47:[2,51]},{47:[2,52]},{47:[2,53]},{47:[2,54]},{47:[2,55]},{47:[2,56]},{47:[2,57]},{47:[2,58]},{1:[2,1]},{7:53,8:4,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vs,[2,4]),o($Vt,[2,6]),o($Vt,[2,7]),o($Vt,[2,30]),o($Vt,[2,12],{14:[1,54]}),{8:58,9:$V0,10:$V1,11:7,12:8,15:55,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($Vt,[2,31]),{8:59,9:$V0,10:$V1,11:7,12:8,24:$V2,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{28:[1,60]},{28:[1,61]},{28:[1,62]},{28:[1,63]},o($Vw,[2,39]),o($Vw,[2,40]),o($Vr,[2,2],{11:7,12:8,33:9,34:10,46:11,8:39,9:$V0,10:$V1,24:$V2,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq}),{8:58,9:$V0,10:$V1,11:7,12:8,15:64,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{16:[1,65],18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,29:$VI,30:$VJ,31:$VK,32:$VL},{8:58,9:$V0,10:$V1,11:7,12:8,15:79,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:80,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($VM,[2,29]),o($Vt,[2,45]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),{16:[1,81],18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,29:$VI,30:$VJ,31:$VK,32:$VL},o($Vw,[2,11]),{8:58,9:$V0,10:$V1,11:7,12:8,15:82,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:83,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:84,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:85,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:86,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:87,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:88,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:89,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:90,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:91,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:92,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:93,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},{8:58,9:$V0,10:$V1,11:7,12:8,15:94,23:$Vx,24:$V2,27:$Vy,33:9,34:10,35:$V3,36:$V4,37:$V5,38:$V6,39:$V7,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,46:11,48:$Ve,49:$Vf,50:$Vg,51:$Vh,52:$Vi,53:$Vj,54:$Vk,55:$Vl,56:$Vm,57:$Vn,58:$Vo,59:$Vp,60:$Vq},o($VM,[2,23]),{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,28:[1,95],29:$VI,30:$VJ,31:$VK,32:$VL},o($Vw,[2,10]),o($VN,[2,14],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,15],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,16],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,17],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VO,[2,18],{24:$VF,25:$VG,26:$VH}),o($VO,[2,19],{24:$VF,25:$VG,26:$VH}),o($VM,[2,20]),o($VM,[2,21]),o($VM,[2,22]),o([16,28,29],[2,25],{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,30:$VJ,31:$VK,32:$VL}),o([16,28,29,30],[2,26],{18:$Vz,19:$VA,20:$VB,21:$VC,22:$VD,23:$VE,24:$VF,25:$VG,26:$VH,31:$VK,32:$VL}),o($VN,[2,27],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VN,[2,28],{22:$VD,23:$VE,24:$VF,25:$VG,26:$VH}),o($VM,[2,24])],\ndefaultActions: {24:[2,46],25:[2,47],26:[2,48],27:[2,49],28:[2,50],29:[2,51],30:[2,52],31:[2,53],32:[2,54],33:[2,55],34:[2,56],35:[2,57],36:[2,58],37:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n\tvar attribute = '';\n\tvar errors = [];\n\n\tconst { Objeto } = require('../model/xpath/Objeto');\n\tconst { Tipos } = require('../model/xpath/Enum');\n\tvar builder = new Objeto();\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// XPATHComment\nbreak;\ncase 2:// MultiLineComment\nbreak;\ncase 3:// Declaration XML\nbreak;\ncase 4:return 25\nbreak;\ncase 5:return 38\nbreak;\ncase 6:return 18\nbreak;\ncase 7:return 20\nbreak;\ncase 8:return 19\nbreak;\ncase 9:return 21\nbreak;\ncase 10:return 9\nbreak;\ncase 11:return 10\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 40\nbreak;\ncase 14:return 39\nbreak;\ncase 15:return 47\nbreak;\ncase 16:return 41\nbreak;\ncase 17:return 14\nbreak;\ncase 18:return 16\nbreak;\ncase 19:return 27\nbreak;\ncase 20:return 28\nbreak;\ncase 21:return 24\nbreak;\ncase 22:return 49\nbreak;\ncase 23:return 48\nbreak;\ncase 24:return 50\nbreak;\ncase 25:return 51\nbreak;\ncase 26:return 53\nbreak;\ncase 27:return 52\nbreak;\ncase 28:return 55\nbreak;\ncase 29:return 54\nbreak;\ncase 30:return 56\nbreak;\ncase 31:return 57\nbreak;\ncase 32:return 59\nbreak;\ncase 33:return 58\nbreak;\ncase 34:return 60\nbreak;\ncase 35:return 45\nbreak;\ncase 36:return 43\nbreak;\ncase 37:return 42\nbreak;\ncase 38:return 44\nbreak;\ncase 39:return 6\nbreak;\ncase 40:return 22\nbreak;\ncase 41:return 23\nbreak;\ncase 42:return 32\nbreak;\ncase 43:return 29\nbreak;\ncase 44:return 30\nbreak;\ncase 45:return 26\nbreak;\ncase 46:return 35\nbreak;\ncase 47: attribute = ''; this.begin(\"string_doubleq\"); \nbreak;\ncase 48: attribute += yy_.yytext; \nbreak;\ncase 49: attribute += \"\\\"\"; \nbreak;\ncase 50: attribute += \"\\n\"; \nbreak;\ncase 51: attribute += \" \";  \nbreak;\ncase 52: attribute += \"\\t\"; \nbreak;\ncase 53: attribute += \"\\\\\"; \nbreak;\ncase 54: attribute += \"\\'\"; \nbreak;\ncase 55: attribute += \"\\r\"; \nbreak;\ncase 56: yy_.yytext = attribute; this.popState(); return 36; \nbreak;\ncase 57: attribute = ''; this.begin(\"string_singleq\"); \nbreak;\ncase 58: attribute += yy_.yytext; \nbreak;\ncase 59: attribute += \"\\\"\"; \nbreak;\ncase 60: attribute += \"\\n\"; \nbreak;\ncase 61: attribute += \" \";  \nbreak;\ncase 62: attribute += \"\\t\"; \nbreak;\ncase 63: attribute += \"\\\\\"; \nbreak;\ncase 64: attribute += \"\\'\"; \nbreak;\ncase 65: attribute += \"\\r\"; \nbreak;\ncase 66: yy_.yytext = attribute; this.popState(); return 37; \nbreak;\ncase 67:return 5\nbreak;\ncase 68:return 'anything'\nbreak;\ncase 69: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XPath\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:\\(:[\\s\\S\\n]*?:\\))/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:div\\b)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/\\/)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\.\\.)/i,/^(?:\\.)/i,/^(?:::)/i,/^(?:@)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\*)/i,/^(?:ancestor-or-self\\b)/i,/^(?:ancestor\\b)/i,/^(?:attribute\\b)/i,/^(?:child\\b)/i,/^(?:descendant-or-self\\b)/i,/^(?:descendant\\b)/i,/^(?:following-sibling\\b)/i,/^(?:following\\b)/i,/^(?:namespace\\b)/i,/^(?:parent\\b)/i,/^(?:preceding-sibling\\b)/i,/^(?:preceding\\b)/i,/^(?:self\\b)/i,/^(?:node\\b)/i,/^(?:last\\b)/i,/^(?:text\\b)/i,/^(?:position\\b)/i,/^(?:\\|)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:!=)/i,/^(?:or\\b)/i,/^(?:and\\b)/i,/^(?:mod\\b)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:['])/i,/^(?:[^'\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:['])/i,/^(?:$)/i,/^(?:[^><\\/]+)/i,/^(?:.)/i],\nconditions: {\"string_singleq\":{\"rules\":[58,59,60,61,62,63,64,65,66],\"inclusive\":false},\"string_doubleq\":{\"rules\":[48,49,50,51,52,53,54,55,56],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,67,68,69],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xpath_up;\nexports.Parser = xpath_up.Parser;\nexports.parse = function () { return xpath_up.parse.apply(xpath_up, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate_1 = require(\"./Predicate\");\nfunction Eje(_instruccion, _ambito, _contexto) {\n    var retorno = { cadena: Enum_1.Tipos.NONE, retorno: null };\n    var err = { err: \"No se encontraron elementos.\\n\", linea: _instruccion.linea, columna: _instruccion.columna };\n    var contexto = (_contexto.retorno) ? (_contexto.retorno) : null;\n    var expresion = Expresion_1.default(_instruccion.expresion.expresion, _ambito, contexto);\n    if (expresion.err)\n        return expresion;\n    var predicate = _instruccion.expresion.predicate;\n    var root;\n    if (expresion.tipo === Enum_1.Tipos.ELEMENTOS) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        retorno.cadena = Enum_1.Tipos.ELEMENTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ATRIBUTOS) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        if (root.atributos.length === 0)\n            return err;\n        retorno.cadena = Enum_1.Tipos.ATRIBUTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.ASTERISCO) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        retorno.cadena = Enum_1.Tipos.ELEMENTOS;\n    }\n    else if (expresion.tipo === Enum_1.Tipos.FUNCION_NODE) {\n        root = getSymbolFromRoot(expresion.valor, contexto, _ambito, predicate);\n        if (root.nodos.length === 0)\n            return err;\n        retorno.cadena = root.tipo;\n    }\n    else {\n        return { err: \"Expresión no válida.\\n\", linea: _instruccion.linea, columna: _instruccion.columna };\n    }\n    if (root.err)\n        return root;\n    if (root.length === 0 || root === null)\n        return err;\n    retorno.retorno = root;\n    return retorno;\n}\nfunction getSymbolFromRoot(_nodename, _contexto, _ambito, _condicion) {\n    if (_contexto)\n        return getFromCurrent(_nodename, _contexto, _ambito, _condicion);\n    else\n        return getFromRoot(_nodename, _ambito, _condicion);\n}\n// Desde el ámbito actual\nfunction getFromCurrent(_id, _contexto, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    // Selecciona todos los hijos (elementos o texto)\n    if (_id === \"node()\") {\n        var nodes_1 = Array();\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.childs)\n                element.childs.forEach(function (child) {\n                    nodes_1.push({ elementos: child });\n                });\n            else if (element.value)\n                nodes_1.push({ textos: element.value });\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes_1 = filter.filterNodes(nodes_1);\n        }\n        return { tipo: Enum_1.Tipos.COMBINADO, nodos: nodes_1 };\n    }\n    // Selecciona todos los hijos (elementos)\n    else if (_id === \"*\") {\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    elements.push(child);\n                });\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Selecciona los atributos\n    else if (_id.tipo === \"@\") {\n        var flag_1 = false;\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.attributes)\n                element.attributes.forEach(function (attribute) {\n                    if ((_id.id === attribute.id) || (_id.id === \"*\")) { // En caso de que sea un id ó @*\n                        attributes.push(attribute);\n                        flag_1 = true;\n                    }\n                });\n            if (flag_1) {\n                elements.push(element);\n                flag_1 = false;\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n            attributes = filter.filterAttributes(attributes);\n        }\n        return { atributos: attributes, elementos: elements };\n    }\n    // Selecciona el padre\n    else if (_id === \"..\") {\n        if (_contexto.atributos) {\n            var _loop_1 = function (i) {\n                var attribute = _contexto.atributos[i];\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    elements = _ambito.searchDadFromAttribute(elm, attribute, elements);\n                });\n            };\n            for (var i = 0; i < _contexto.atributos.length; i++) {\n                _loop_1(i);\n            }\n            return elements;\n        }\n        var _loop_2 = function (i) {\n            var element = _contexto[i];\n            var dad = element.father;\n            if (dad) {\n                _ambito.tablaSimbolos.forEach(function (elm) {\n                    if (elm.id_open === dad.id && elm.line == dad.line && elm.column == dad.column)\n                        elements.push(elm);\n                    if (elm.childs)\n                        elm.childs.forEach(function (child) {\n                            elements = _ambito.searchDad(child, dad.id, dad.line, dad.column, elements);\n                        });\n                });\n            }\n        };\n        for (var i = 0; i < _contexto.length; i++) {\n            _loop_2(i);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Selecciona el nodo actual\n    else if (_id === \".\") {\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            elements.push(element);\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Búsqueda en los hijos por id\n    else {\n        for (var i = 0; i < _contexto.length; i++) {\n            var element = _contexto[i];\n            if (element.childs) {\n                element.childs.forEach(function (child) {\n                    elements = _ambito.searchSingleNode(_id, child, elements);\n                });\n            }\n        }\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n}\n// Desde la raíz\nfunction getFromRoot(_id, _ambito, _condicion) {\n    var elements = Array();\n    var attributes = Array();\n    var text = Array();\n    // Selecciona todos los hijos (elementos o texto)\n    if (_id === \"node()\") {\n        var nodes_2 = Array();\n        _ambito.tablaSimbolos.forEach(function (element) {\n            if (element.childs)\n                // element.childs.forEach(child => {\n                nodes_2.push({ elementos: element });\n            // });\n            else if (element.value)\n                nodes_2.push({ textos: element.value });\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            nodes_2 = filter.filterNodes(nodes_2);\n        }\n        return { tipo: Enum_1.Tipos.COMBINADO, nodos: nodes_2 };\n    }\n    // Selecciona todos los hijos (elementos)\n    else if (_id === \"*\") {\n        _ambito.tablaSimbolos.forEach(function (element) {\n            elements.push(element);\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Selecciona los atributos\n    else if (_id.tipo === \"@\") {\n        var flag_2 = false;\n        _ambito.tablaSimbolos.forEach(function (element) {\n            if (element.attributes)\n                element.attributes.forEach(function (attribute) {\n                    if ((_id.id === attribute.id) || (_id.id === \"*\")) {\n                        flag_2 = true;\n                        attributes.push(attribute);\n                    }\n                });\n            if (flag_2) {\n                elements.push(element);\n                flag_2 = false;\n            }\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n            attributes = filter.filterAttributes(attributes);\n        }\n        return { atributos: attributes, elementos: elements };\n    }\n    // Selecciona el nodo actual\n    else if (_id === \".\") {\n        _ambito.tablaSimbolos.forEach(function (element) {\n            elements.push(element);\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n    // Búsqueda por id\n    else {\n        _ambito.tablaSimbolos.forEach(function (element) {\n            if (element.id_open === _id)\n                elements.push(element);\n        });\n        if (_condicion) {\n            var filter = new Predicate_1.Predicate(_condicion, _ambito, elements);\n            elements = filter.filterElements();\n        }\n        return elements;\n    }\n}\nmodule.exports = Eje;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encoding = void 0;\nvar Enum_1 = require(\"./Enum\");\nvar Encoding = /** @class */ (function () {\n    function Encoding(encoding) {\n        this.codes = Enum_1.Codes;\n        this.encoding = encoding;\n        this.getCode();\n    }\n    Encoding.prototype.getCode = function () {\n        var decl = String(this.encoding).replace(/\\s/g, '').toLowerCase();\n        var subs = decl.substr(decl.indexOf(\"encoding=\") + 9);\n        var code;\n        if (subs[0] === \"\\\"\") {\n            code = subs.substr(1, subs.indexOf(\"\\\"\", 1) - 1);\n        }\n        else if (subs[0] === \"\\'\") {\n            code = subs.substr(1, subs.indexOf(\"\\'\", 1) - 1);\n        }\n        switch (code) {\n            case \"utf-8\":\n                this.encoding = this.codes.UTF8;\n                break;\n            case \"iso-8859-1\":\n                this.encoding = this.codes.ISO8859_1;\n                break;\n            case \"ascii\":\n                this.encoding = this.codes.ASCII;\n                break;\n            default:\n                this.encoding = this.codes.INVALID;\n        }\n    };\n    return Encoding;\n}());\nexports.Encoding = Encoding;\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  _url = \"http://localhost:3080\";\n\n  constructor(private http: HttpClient) { }\n\n  compile(input: any) {\n    return this.http.post<any>(this._url + '/compile', input);\n  }\n\n  getAST(input: any) {\n    return this.http.post(this._url + '/AST_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n  getCST(input: any) {\n    return this.http.post(this._url + '/CST_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n  getDAG(input: any) {\n    return this.http.post(this._url + '/DAG_report', input, {\n      responseType: 'blob'\n    });\n  }\n\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Global = void 0;\nvar Hijos_1 = __importDefault(require(\"./Hijos\"));\nvar Global = /** @class */ (function () {\n    function Global(expresiones, ambito) {\n        this.expresiones = expresiones;\n        this.ambito = ambito;\n        Hijos_1.default.exec(expresiones, this.ambito);\n    }\n    return Global;\n}());\nexports.Global = Global;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Predicate = void 0;\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nvar Expresion_1 = __importDefault(require(\"../../Expresion/Expresion\"));\nvar Predicate = /** @class */ (function () {\n    function Predicate(_predicado, _ambito, _contexto) {\n        this.predicado = _predicado;\n        this.contexto = _contexto;\n        this.ambito = _ambito;\n    }\n    Object.defineProperty(Predicate.prototype, \"setContext\", {\n        set: function (v) {\n            this.contexto = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Predicate.prototype.filterElements = function () {\n        var expresion;\n        for (var i = 0; i < this.predicado.length; i++) {\n            var e = this.predicado[i];\n            console.log(e, 8277237281);\n            expresion = Expresion_1.default(e.condicion, this.ambito, this.contexto);\n            if (expresion.err)\n                return expresion;\n            // En caso de ser una posición en los elementos\n            if (expresion.tipo === Enum_1.Tipos.NUMBER) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index < 0 || index >= this.contexto.length)\n                    this.contexto = [];\n                else\n                    this.contexto = [this.contexto[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_LAST) {\n                var index = this.contexto.length - 1;\n                this.contexto = [this.contexto[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n                return this.contexto;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MENOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= this.contexto.length)\n                    index = this.contexto.length - 1;\n                var tmp = [];\n                for (var i_1 = index; i_1 <= this.contexto.length && i_1 >= 0; i_1--) {\n                    var element = this.contexto[i_1];\n                    tmp.push(element);\n                }\n                this.contexto = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_MAYOR) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= this.contexto.length) {\n                    this.contexto = [];\n                    return this.contexto;\n                }\n                if (index <= 0)\n                    index = 0;\n                var tmp = [];\n                for (var i_2 = index; i_2 < this.contexto.length; i_2++) {\n                    var element = this.contexto[i_2];\n                    tmp.push(element);\n                }\n                this.contexto = tmp;\n            }\n            else if (expresion.tipo === Enum_1.Tipos.RELACIONAL_IGUAL || expresion.tipo === Enum_1.Tipos.RELACIONAL_DIFERENTE) {\n                var flag = expresion.valor;\n                if (!flag)\n                    this.contexto = [];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.EXCLUDE) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index >= 0 && index < this.contexto.length) {\n                    var tmp = [];\n                    for (var i_3 = 0; i_3 < this.contexto.length; i_3++) {\n                        var element = this.contexto[i_3];\n                        if (i_3 != index)\n                            tmp.push(element);\n                    }\n                    this.contexto = tmp;\n                }\n            }\n        }\n        return this.contexto;\n    };\n    Predicate.prototype.filterAttributes = function (_attributes) {\n        var expresion;\n        for (var i = 0; i < this.predicado.length; i++) {\n            var e = this.predicado[i];\n            expresion = Expresion_1.default(e.condicion, this.ambito, this.contexto);\n            if (expresion.err)\n                return expresion;\n            // En caso de ser una posición en los elementos\n            if (expresion.tipo === Enum_1.Tipos.NUMBER) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index < 0 || index >= _attributes.length)\n                    _attributes = [];\n                else\n                    _attributes = [_attributes[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_LAST) {\n                var index = _attributes.length - 1;\n                _attributes = [_attributes[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n                return _attributes;\n            }\n        }\n        return _attributes;\n    };\n    Predicate.prototype.filterNodes = function (_nodes) {\n        var expresion;\n        for (var i = 0; i < this.predicado.length; i++) {\n            var e = this.predicado[i];\n            expresion = Expresion_1.default(e.condicion, this.ambito, this.contexto);\n            if (expresion.err)\n                return expresion;\n            // En caso de ser una posición en los elementos\n            if (expresion.tipo === Enum_1.Tipos.NUMBER) {\n                var index = parseInt(expresion.valor) - 1;\n                if (index < 0 || index >= _nodes.length)\n                    _nodes = [];\n                else\n                    _nodes = [_nodes[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_LAST) {\n                var index = _nodes.length - 1;\n                _nodes = [_nodes[index]];\n            }\n            else if (expresion.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n                return _nodes;\n            }\n        }\n        return _nodes;\n    };\n    return Predicate;\n}());\nexports.Predicate = Predicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Element = void 0;\nvar Element = /** @class */ (function () {\n    function Element(id_open, attributes, value, childs, line, column, id_close) {\n        this.id_open = id_open;\n        this.id_close = id_close;\n        this.attributes = attributes;\n        this.value = value;\n        this.childs = childs;\n        this.line = line;\n        this.column = column;\n        this.father = null;\n    }\n    Element.prototype.verificateNames = function () {\n        if ((this.id_close !== null) && (this.id_open !== this.id_close))\n            return \"La etiqueta de apertura no coincide con la de cierre.\";\n        if (this.id_open.replace(/\\s/g, '').toLowerCase() === \"xml\")\n            return \"No se puede nombrar una etiqueta con las letras XML\";\n        return \"\";\n    };\n    /*\n    * Devuelve el HTML para el AST del XML\n    * */\n    Element.prototype.getXMLTree = function () {\n        var str = \"\";\n        str = \"<li><a href=''>\" + this.id_open + \"</a>\";\n        if (this.attributes == null && this.childs == null && this.value == null) {\n            str = str + \"</li>\";\n            return str;\n        }\n        str = str + \"<ul>\";\n        if (this.attributes != null) {\n            str = str + \"<li><a href=''>Atributos</a><ul>\";\n            this.attributes.forEach(function (value) {\n                str = str + \"<li><a href=''>Atributo</a><ul>\";\n                str = str + \"<li><a href=''>\" + value.id.slice(0, -1) + \"</a></li>\";\n                str = str + \"<li><a href=''>\" + value.value + \"</a></li>\";\n                str = str + \"</ul></li>\\n\";\n            });\n            str = str + \"</ul></li>\";\n        }\n        if (this.value != null) {\n            str = str + \"<li><a href=''>Value</a><ul><li><a href=''>\" + this.value + \"</a></li></ul></li></ul></li>\\n\";\n            return str;\n        }\n        if (this.id_close == null) {\n            str = str + \"</ul></li>\\n\";\n            return str;\n        }\n        if (this.childs != null) {\n            str = str + \"<li><a href=''>Children</a><ul>\";\n            this.childs.forEach(function (value) {\n                str = str + value.getXMLTree();\n            });\n            str = str + \"</ul></li>\\n\";\n        }\n        str = str + \"</ul></li>\\n\";\n        return str;\n    };\n    /*\n    * Devuelve el HTML para el CST Ascendente del XML\n    * */\n    Element.prototype.buildAscendingCst = function () {\n        var cst;\n        if (this.value != null) {\n            cst = \"<li><a href=\\\"\\\">XML</a><ul>\";\n            cst = cst + this.getXmlOpenForCST();\n            cst = cst + (\"\\n            <li><a href=\\\"\\\">tk_content</a><ul>\\n            <li><a href=\\\"\\\">\" + this.value + \"</a></li>\\n            </ul></li>\\n\\n            <li><a href=\\\"\\\">tk_open_end_tag</a><ul>\\n            <li><a href=\\\"\\\">&lt/</a></li>\\n            </ul></li>      \\n\\n            <li><a href=\\\"\\\">tk_tag_name</a><ul>\\n            <li><a href=\\\"\\\">\" + this.id_close + \"</a></li>\\n            </ul></li>  \\n\\n            <li><a href=\\\"\\\">tk_close</a><ul>\\n            <li><a href=\\\"\\\">&gt</a></li>\\n            </ul></li>\\n            </ul></li>\");\n            return cst;\n        }\n        else if (this.childs != null) {\n            var str_1 = \"\";\n            this.childs.forEach(function (value) {\n                str_1 = \"<li><a href=\\\"\\\">CHILDREN</a><ul>\\n                    \" + str_1 + \"\\n                    \" + value.buildAscendingCst() + \"\\n                </ul></li>\\n                \";\n            });\n            cst = \"<li><a href=\\\"\\\">XML</a><ul>\" + this.getXmlOpenForCST() + str_1 + (\"\\n            <li><a href=\\\"\\\">tk_open_end_tag</a><ul>\\n            <li><a href=\\\"\\\">&lt/</a></li>\\n            </ul></li>      \\n            \\n             <li><a href=\\\"\\\">tk_tag_name</a><ul>\\n            <li><a href=\\\"\\\">\" + this.id_close + \"</a></li>\\n            </ul></li>\\n            \\n            <li><a href=\\\"\\\">tk_close</a><ul>\\n            <li><a href=\\\"\\\">&gt</a></li>\\n            </ul></li>\\n            \\n            </ul></li>\");\n            return cst;\n        }\n        else if (this.id_close != null) { //Empty tag\n            cst = \"<li><a href=\\\"\\\">XML</a><ul>\";\n            cst = cst + this.getXmlOpenForCST();\n            cst = cst + (\"\\n\\n            <li><a href=\\\"\\\">tk_open_end_tag</a><ul>\\n            <li><a href=\\\"\\\">&lt/</a></li>\\n            </ul></li>      \\n\\n            <li><a href=\\\"\\\">tk_tag_name</a><ul>\\n            <li><a href=\\\"\\\">\" + this.id_close + \"</a></li>\\n            </ul></li>  \\n\\n            <li><a href=\\\"\\\">tk_close</a><ul>\\n            <li><a href=\\\"\\\">&gt</a></li>\\n            </ul></li>\\n            </ul></li>\");\n            return cst;\n        }\n        cst = \"<li><a href=\\\"\\\">XML</a><ul>\\n                \\n            <li><a href=\\\"\\\">tk_open_end_tag</a><ul>\\n            <li><a href=\\\"\\\">&lt</a></li>\\n            </ul></li> \\n            \\n            <li><a href=\\\"\\\">tk_tag_name</a><ul>\\n            <li><a href=\\\"\\\">\" + this.id_open + \"</a></li>\\n            </ul></li>  \\n            \\n            \" + this.getAttributesCST() + \"\\n            \\n            <li><a href=\\\"\\\">tk_bar</a><ul>\\n            <li><a href=\\\"\\\">/</a></li>\\n            </ul></li>\\n\\n            <li><a href=\\\"\\\">tk_close</a><ul>\\n            <li><a href=\\\"\\\">&gt</a></li>\\n            </ul></li>\\n            \\n            </ul></li>\";\n        return cst;\n    };\n    Element.prototype.getXmlOpenForCST = function () {\n        var temp = \"\";\n        temp = \"<li><a href=\\\"\\\">XML_OPEN</a>\\n        <ul>\\n        \\n        <li><a href=\\\"\\\">tk_open</a>\\n        <ul>\\n        <li><a href=\\\"\\\">&lt</a></li>\\n        </ul>\\n        </li>\\n        \\n        <li><a href=\\\"\\\">tk_tag_name</a>\\n        <ul>\\n        <li><a href=\\\"\\\">\" + this.id_open + \"</a></li>\\n        </ul>\\n        </li>\\n\\n        \";\n        temp = temp + this.getAttributesCST();\n        temp = temp + \"\\n            <li><a href=\\\"\\\">tk_open</a>\\n            <ul>\\n            <li><a href=\\\"\\\">&gt</a></li>\\n            </ul>\\n            </li>\\n            </ul></li>\";\n        return temp;\n    };\n    Element.prototype.getAttributesCST = function () {\n        if (this.attributes != null) {\n            var str_2 = \"\";\n            str_2 = \"<li>\\n            <a href=\\\"\\\">ATTRIBUTE_LIST</a>\\n            <ul>\\n            <li> \\n            <a href=\\\"\\\">Empty</a>\\n            </li>\\n            </ul>\\n            </li>\\n            \";\n            this.attributes.forEach(function (value) {\n                str_2 = \"<li>\\n                <a href=\\\"\\\">ATTRIBUTE_LIST</a>\\n                <ul>\\n                \" + str_2 + \"\\n                \" + value.Cst + \"\\n                </ul>\\n                </li>\\n                \";\n            });\n            return str_2;\n        }\n        return \"\";\n    };\n    Object.defineProperty(Element.prototype, \"Att_Arr\", {\n        /*PROPERTIES*/\n        set: function (value) {\n            this.attributes = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Close\", {\n        set: function (value) {\n            this.id_close = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"Value\", {\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /*DO NOT INCLUDE*/\n    Element.prototype.printTest = function (tab_num) {\n        var str = \"\";\n        str = this.getDashes(tab_num) + \"Nodo: \" + this.id_open + \"\\t\";\n        if (this.attributes != null) {\n            str = str + \"\\tAtributos:\\t\";\n            this.attributes.forEach(function (value) {\n                str = str + value.id + \": \" + value.value + \"   \";\n            });\n        }\n        if (this.value != null) {\n            str = str + \"*** Valor *** \" + this.value;\n            console.log(str);\n            return;\n        }\n        if (this.id_close == null) {\n            console.log(str);\n            return;\n        }\n        if (this.childs != null) {\n            str = str + \"*** Children **** \";\n            console.log(str);\n            this.childs.forEach(function (value) {\n                value.printTest(tab_num + 1);\n            });\n        }\n    };\n    Element.prototype.getDashes = function (num) {\n        var a = \"\";\n        for (var i = 0; i < num * 2; i++) {\n            a += \"-\";\n        }\n        return a;\n    };\n    return Element;\n}());\nexports.Element = Element;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tipos = void 0;\nvar Tipos;\n(function (Tipos) {\n    //Nodename unario\n    Tipos[\"NODENAME\"] = \"NODENAME\";\n    Tipos[\"STRING\"] = \"STRING\";\n    Tipos[\"NUMBER\"] = \"NUMBER\";\n    Tipos[\"ASTERISCO\"] = \"ASTERISCO\";\n    Tipos[\"BOOLEANO\"] = \"BOOLEANO\";\n    // Selección\n    Tipos[\"SELECT_FROM_ROOT\"] = \"SELECT_FROM_ROOT\";\n    Tipos[\"SELECT_FROM_CURRENT\"] = \"SELECT_FROM_CURRENT\";\n    Tipos[\"SELECT_CURRENT\"] = \"SELECT_CURRENT\";\n    Tipos[\"SELECT_PARENT\"] = \"SELECT_PARENT\";\n    Tipos[\"SELECT_ATTRIBUTES\"] = \"SELECT_ATTRIBUTES\";\n    Tipos[\"SELECT_AXIS\"] = \"SELECT_AXIS\";\n    // Aritméticas\n    Tipos[\"OPERACION_SUMA\"] = \"OPERACION_SUMA\";\n    Tipos[\"OPERACION_RESTA\"] = \"OPERACION_RESTA\";\n    Tipos[\"OPERACION_MULTIPLICACION\"] = \"OPERACION_MULTIPLICACION\";\n    Tipos[\"OPERACION_DIVISION\"] = \"OPERACION_DIVISION\";\n    Tipos[\"OPERACION_MODULO\"] = \"OPERACION_MODULO\";\n    Tipos[\"OPERACION_NEGACION_UNARIA\"] = \"OPERACION_NEGACION_UNARIA\";\n    // Relacionales\n    Tipos[\"RELACIONAL_IGUAL\"] = \"RELACIONAL_IGUAL\";\n    Tipos[\"RELACIONAL_DIFERENTE\"] = \"RELACIONAL_DIFERENTE\";\n    Tipos[\"RELACIONAL_MENOR\"] = \"RELACIONAL_MENOR\";\n    Tipos[\"RELACIONAL_MENORIGUAL\"] = \"RELACIONAL_MENORIGUAL\";\n    Tipos[\"RELACIONAL_MAYOR\"] = \"RELACIONAL_MAYOR\";\n    Tipos[\"RELACIONAL_MAYORIGUAL\"] = \"RELACIONAL_MAYORIGUAL\";\n    // Logicas\n    Tipos[\"LOGICA_OR\"] = \"LOGICA_OR\";\n    Tipos[\"LOGICA_AND\"] = \"LOGICA_AND\";\n    // Funciones reservadas\n    Tipos[\"FUNCION_LAST\"] = \"FUNCION_LAST\";\n    Tipos[\"FUNCION_POSITION\"] = \"FUNCION_POSITION\";\n    Tipos[\"FUNCION_TEXT\"] = \"FUNCION_TEXT\";\n    Tipos[\"FUNCION_NODE\"] = \"FUNCION_NODE\";\n    // Predicado\n    Tipos[\"PREDICATE\"] = \"PREDICATE\";\n    Tipos[\"EXPRESION\"] = \"EXPRESION\";\n    // Combinacional\n    Tipos[\"UNION\"] = \"SEVERAL_UNION\";\n    // Expresiones\n    Tipos[\"ELEMENTOS\"] = \"ELEMENTOS\";\n    Tipos[\"ATRIBUTOS\"] = \"ATRIBUTOS\";\n    Tipos[\"TEXTOS\"] = \"TEXTOS\";\n    Tipos[\"COMBINADO\"] = \"COMBINADO\";\n    Tipos[\"EXCLUDE\"] = \"EXCLUDE\";\n    // Axisnames\n    Tipos[\"AXIS_ANCESTOR\"] = \"ANCESTOR\";\n    Tipos[\"AXIS_ANCESTOR_OR_SELF\"] = \"ANCESTOR_OR_SELF\";\n    Tipos[\"AXIS_ATTRIBUTE\"] = \"AXIS_ATTRIBUTE\";\n    Tipos[\"AXIS_CHILD\"] = \"AXIS_CHILD\";\n    Tipos[\"AXIS_DESCENDANT\"] = \"AXIS_DESCENDANT\";\n    Tipos[\"AXIS_DESCENDANT_OR_SELF\"] = \"AXIS_DESCENDANT_OR_SELF\";\n    Tipos[\"AXIS_FOLLOWING\"] = \"AXIS_FOLLOWING\";\n    Tipos[\"AXIS_FOLLOWING_SIBLING\"] = \"AXIS_FOLLOWING_SIBLING\";\n    Tipos[\"AXIS_NAMESPACE\"] = \"AXIS_NAMESPACE\";\n    Tipos[\"AXIS_PARENT\"] = \"AXIS_PARENT\";\n    Tipos[\"AXIS_PRECEDING\"] = \"AXIS_PRECEDING\";\n    Tipos[\"AXIS_PRECEDING_SIBLING\"] = \"AXIS_PRECEDING_SIBLING\";\n    Tipos[\"AXIS_SELF\"] = \"AXIS_SELF\";\n    // Default\n    Tipos[\"NONE\"] = \"NONE\";\n})(Tipos = exports.Tipos || (exports.Tipos = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ambito = void 0;\nvar Ambito = /** @class */ (function () {\n    function Ambito(_anterior, _tipo) {\n        this.anterior = _anterior;\n        this.tipo = _tipo;\n        this.tablaSimbolos = [];\n    }\n    Ambito.prototype.isGlobal = function () {\n        return this.tipo === \"global\";\n    };\n    Ambito.prototype.addSimbolo = function (_simbolo) {\n        this.tablaSimbolos.push(_simbolo);\n    };\n    Ambito.prototype.nodesFunction = function (_element, _nodes) {\n        var _this = this;\n        _nodes.push({ elementos: _element });\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _nodes = _this.nodesFunction(child, _nodes);\n            });\n        }\n        if (_element.value) {\n            _nodes.push({ textos: _element.value });\n        }\n        return _nodes;\n    };\n    Ambito.prototype.searchDad = function (_element, _nodename, _line, _column, _elements) {\n        var _this = this;\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _elements = _this.searchDad(child, _nodename, _line, _column, _elements);\n            });\n        }\n        if (_nodename === _element.id_open && _element.line == _line && _element.column == _column) {\n            _elements.push(_element);\n        }\n        return _elements;\n    };\n    Ambito.prototype.searchDadFromAttribute = function (_element, _attribute, _elements) {\n        var _this = this;\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _elements = _this.searchDadFromAttribute(child, _attribute, _elements);\n            });\n        }\n        if (_element.attributes) {\n            _element.attributes.forEach(function (attr) {\n                if (attr.id === _attribute.id && attr.line == _attribute.line && attr.column == _attribute.column) {\n                    _elements.push(_element);\n                }\n            });\n        }\n        return _elements;\n    };\n    Ambito.prototype.searchAnyAttributes = function (_element, _array, _elements) {\n        var _this = this;\n        if (_element.attributes) {\n            _element.attributes.forEach(function (attribute) {\n                _array.push(attribute);\n            });\n            _elements.push(_element);\n        }\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchAnyAttributes(child, _array, _elements).atributos;\n            });\n        }\n        return { atributos: _array, elementos: _elements };\n    };\n    Ambito.prototype.searchAttributesFromCurrent = function (_element, _id, _array, _elements) {\n        var _this = this;\n        var flag = false;\n        if (_element.attributes) {\n            _element.attributes.forEach(function (attribute) {\n                if (attribute.id === _id) {\n                    _array.push(attribute);\n                    flag = true;\n                }\n            });\n            if (flag) {\n                _elements.push(_element);\n                flag = false;\n            }\n        }\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchAttributesFromCurrent(child, _id, _array, _elements).atributos;\n            });\n        }\n        return { atributos: _array, elementos: _elements };\n    };\n    Ambito.prototype.searchSingleNode = function (_nodename, _element, _array) {\n        if (_nodename === _element.id_open) {\n            _array.push(_element);\n        }\n        return _array;\n    };\n    Ambito.prototype.searchNodes = function (_nodename, _element, _array) {\n        var _this = this;\n        if ((_nodename === _element.id_open) || (_nodename === \"*\")) {\n            _array.push(_element);\n        }\n        if (_element.childs) {\n            _element.childs.forEach(function (child) {\n                _array = _this.searchNodes(_nodename, child, _array);\n            });\n        }\n        return _array;\n    };\n    Ambito.prototype.getGlobal = function () {\n        var e;\n        for (e = this; e != null; e = e.anterior) {\n            if (e.anterior === null)\n                return e;\n        }\n        return null;\n    };\n    // Métodos para obtener la tabla de símbolos\n    Ambito.prototype.getArraySymbols = function () {\n        var _this = this;\n        var simbolos = [];\n        try {\n            this.tablaSimbolos.forEach(function (element) {\n                if (element.attributes || element.childs) {\n                    var dad = _this.createSymbolElement(element, (element.father === null ? \"global\" : element.father));\n                    simbolos.push(dad);\n                    if (element.attributes) {\n                        element.attributes.forEach(function (attribute) {\n                            simbolos.push(_this.createSymbolAttribute(attribute, element.id_open));\n                        });\n                    }\n                    if (element.childs) {\n                        simbolos.concat(_this.toRunTree(simbolos, element.childs, dad.id));\n                    }\n                }\n                else {\n                    var symb = _this.createSymbolElement(element, (element.father === null ? \"global\" : element.father));\n                    simbolos.push(symb);\n                }\n            });\n            return simbolos;\n        }\n        catch (error) {\n            console.log(error);\n            return simbolos;\n        }\n    };\n    Ambito.prototype.toRunTree = function (_symbols, _array, _father) {\n        var _this = this;\n        _array.forEach(function (element) {\n            if (element.attributes || element.childs) {\n                var dad = _this.createSymbolElement(element, _father);\n                _symbols.push(dad);\n                if (element.attributes) {\n                    element.attributes.forEach(function (attribute) {\n                        _symbols.push(_this.createSymbolAttribute(attribute, _father + \"->\" + element.id_open));\n                    });\n                }\n                if (element.childs) {\n                    var concat = _father + (\"->\" + dad.id);\n                    _symbols.concat(_this.toRunTree(_symbols, element.childs, concat));\n                }\n            }\n            else {\n                var symb = _this.createSymbolElement(element, _father);\n                _symbols.push(symb);\n            }\n        });\n        return _symbols;\n    };\n    Ambito.prototype.createSymbolElement = function (_element, _entorno) {\n        var type = (_element.id_close === null ? 'Tag simple' : 'Tag doble');\n        var symb = {\n            id: _element.id_open,\n            value: _element.value,\n            tipo: type,\n            entorno: _entorno,\n            linea: _element.line,\n            columna: _element.column\n        };\n        return symb;\n    };\n    Ambito.prototype.createSymbolAttribute = function (_attribute, _entorno) {\n        var symb = {\n            id: _attribute.id,\n            value: _attribute.value,\n            tipo: \"Atributo\",\n            entorno: _entorno,\n            linea: _attribute.line,\n            columna: _attribute.column\n        };\n        return symb;\n    };\n    return Ambito;\n}());\nexports.Ambito = Ambito;\n","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private appService: AppService) { }\n\n  EditorOptions = {\n    theme: \"vs-dark\",\n    automaticLayout: true,\n    scrollBeyondLastLine: false,\n    fontSize: 16,\n    minimap: {\n      enabled: true\n    },\n    language: 'xml'\n  }\n\n  ConsoleOptions = {\n    theme: \"vs-dark\",\n    readOnly: true,\n    automaticLayout: true,\n    scrollBeyondLastLine: false,\n    fontSize: 16,\n    minimap: {\n      enabled: true\n    },\n    language: 'xml'\n  }\n\n  entrada: string = '';\n  consulta: string = '';\n  salida: string = '';\n\n  fname: string = '';\n  simbolos: any = [];\n  errores: any = [];\n\n  newTab() {\n    window.open(\"/tytusx-G23\", \"_blank\");\n  }\n\n  closeTab() {\n    window.close();\n  }\n\n  onSubmit() {\n    let grammar_value = (<HTMLSelectElement>document.getElementById('grammar_selector')).value;\n    if (this.entrada != \"\" && this.consulta != \"\") {\n      const x = {\n        xml: this.entrada, // documento XML\n        query: this.consulta, // consultas\n        grammar: Number(grammar_value) // gramática 1=ascendente, 2=descendente\n      }\n      // llamo a la función compile que devuelve un objeto de retorno\n      let data = require('../js/routes/compile').compile(x);\n      this.salida = data.output;\n      this.errores = data.arreglo_errores;\n      this.simbolos = data.arreglo_simbolos;\n      console.log('Data received!');\n    } else\n      alert(\"Alguna entrada se encuentra vacía. Intente de nuevo.\");\n  }\n\n  getAST() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.entrada != \"\") {\n      const x = { \"input\": this.entrada }\n      this.appService.getAST(x).subscribe(\n        data => {\n          saveAs(data, \"AST\");\n          this.salida = \"AST has been generated!\";\n          console.log('AST received!');\n        },\n        error => {\n          console.log('There was an error :(', error);\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el AST.\"\n        }\n      );\n    } else\n      alert(\"Entrada vacía. No se puede generar el AST.\");\n  }\n\n  getCST() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.entrada != \"\") {\n      const x = { \"input\": this.entrada }\n      this.appService.getCST(x).subscribe(\n        data => {\n          saveAs(data, \"CST\");\n          this.salida = \"CST has been generated!\";\n          console.log('CST received!');\n        },\n        error => {\n          console.log('There was an error :(', error);\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el CST.\"\n        }\n      );\n    } else\n      alert(\"Entrada vacía. No se puede generar el CST.\");\n  }\n\n  getDAG() {\n    this.simbolos = [];\n    this.errores = [];\n    if (this.entrada != \"\") {\n      const x = { \"input\": this.entrada }\n      this.appService.getDAG(x).subscribe(\n        data => {\n          saveAs(data, \"DAG\");\n          this.salida = \"DAG has been generated!\";\n          console.log('DAG received!');\n        },\n        error => {\n          console.log('There was an error :(', error);\n          this.salida = \"Ocurrió un error al analizar la entrada.\\nNo se generó el DAG.\"\n        }\n      );\n    } else\n      alert(\"Entrada vacía. No se puede generar el DAG.\");\n  }\n\n\n  saveFile(id: number) {\n    var f = document.createElement('a');\n    let data = \"\";\n    if (id === 1)\n      data = this.entrada;\n    else\n      data = this.consulta;\n    f.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data));\n    f.setAttribute('download', this.fname ? this.fname.replace(\"C:\\\\fakepath\\\\\", \"\") : (id === 1 ? 'file.xml' : 'file.xpath'));\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      f.dispatchEvent(event);\n    }\n    else {\n      f.click();\n    }\n    console.log('File saved!');\n  }\n\n  openDialog(id: number) {\n    if (id === 1)\n      document.getElementById(\"fileInput1\")!.click();\n    else\n      document.getElementById(\"fileInput2\")!.click();\n  }\n\n  readFile(event: any, id: number) {\n    let input = event.target;\n    let reader = new FileReader();\n    reader.onload = () => {\n      var text = reader.result;\n      if (text) {\n        switch (id) {\n          case 1:\n            this.entrada = String(text);\n            break;\n          case 2:\n            this.consulta = String(text);\n            break;\n        }\n      }\n    }\n    reader.readAsText(input.files[0]);\n    this.salida = '';\n    console.log('File opened!')\n  }\n\n  cleanEditor(id: number) {\n    switch (id) {\n      case 1:\n        this.entrada = \"\";\n        break;\n      case 2:\n        this.consulta = \"\";\n        break;\n    }\n    this.salida = \"\";\n  }\n\n}\n","<div class=\"container-fluid title pt-2 pb-1\">\n  <h2>TytusX</h2>\n</div>\n<div class=\"btn-toolbar\" role=\"toolbar\">\n  <div class=\"mb-2 btn-group\">\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Abrir\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"openDialog(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <input id=\"fileInput1\" type=\"file\" style=\"display:none\" accept=\".xml\" (change)=\"readFile($event,1)\"\n          [(ngModel)]=\"fname\">\n        <button (click)=\"openDialog(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n        <input id=\"fileInput2\" type=\"file\" style=\"display:none\" (change)=\"readFile($event,2)\" [(ngModel)]=\"fname\">\n      </div>\n    </div>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Guardar\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"saveFile(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <button (click)=\"saveFile(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n      </div>\n    </div>\n    <button (click)=\"newTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Nueva pestaña</button>\n    <button (click)=\"closeTab()\" type=\"button\" class=\"btn btn-dark rounded-0\">Cerrar pestaña</button>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 \" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"flase\" aria-expanded=\"false\">\n        Limpiar\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"cleanEditor(1)\" class=\"dropdown-item text-white item\" type=\"button\">XML</button>\n        <button (click)=\"cleanEditor(2)\" class=\"dropdown-item text-white item\" type=\"button\">XPath</button>\n      </div>\n    </div>\n    <div class=\"dropdown\">\n      <button class=\"btn btn-dark rounded-0 dropdown-toggle\" type=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">\n        Reportes\n      </button>\n      <div class=\"dropdown-menu rounded-0 bg-dark\">\n        <button (click)=\"getAST()\" class=\"dropdown-item text-white item\" type=\"button\">AST</button>\n        <button (click)=\"getCST()\" class=\"dropdown-item text-white item\" type=\"button\">CST</button>\n        <button (click)=\"getDAG()\" class=\"dropdown-item text-white item\" type=\"button\">DAG</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"btn-group sel_g\" role=\"group\">\n    <select id=\"grammar_selector\" class=\"form-select btn btn-dark rounded-0\">\n      <option disabled>Seleccione gramática</option>\n      <option selected value=\"1\">Ascendente</option>\n      <option value=\"2\">Descendente</option>\n    </select>\n  </div>\n</div>\n\n\n<div class=\"container-fluid px-5 pt-2\">\n\n  <form #iForm=\"ngForm\" class=\"mb-4\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <div class=\"row mb-5 file-editors\">\n      <div class=\"col-lg-6 col-sm-12\">\n        <p class=\"my-0 text-white subtitulo\">Entrada XML</p>\n        <ngx-monaco-editor id=\"entrada\" name=\"entrada\" class=\"codebox\" [options]=\"EditorOptions\" [(ngModel)]=\"entrada\">\n        </ngx-monaco-editor>\n      </div>\n      <div class=\"col-lg-6 col-sm-12\">\n        <p class=\"my-0 text-white subtitulo\">Editor de consultas</p>\n        <ngx-monaco-editor id=\"consulta\" name=\"consulta\" class=\"codebox\" [options]=\"EditorOptions\"\n          [(ngModel)]=\"consulta\">\n        </ngx-monaco-editor>\n      </div>\n    </div>\n    <div class=\"row text-center\">\n      <div class=\"col-12\">\n        <button type=\"submit\" class=\"btn btn-outline-light btn-lg\"><i class=\"fas fa-play-circle\"></i> COMPILAR</button>\n      </div>\n    </div>\n    <div class=\"row mb-5 file-console\">\n      <div class=\"col-12\">\n        <p class=\"my-0 text-white subtitulo\">Consola de salida</p>\n        <ngx-monaco-editor id=\"salida\" name=\"salida\" class=\"console\" [options]=\"ConsoleOptions\" [(ngModel)]=\"salida\">\n        </ngx-monaco-editor>\n      </div>\n    </div>\n  </form>\n  <br>\n  <hr>\n\n  <div class=\"row my-5\">\n    <div class=\"col-12\">\n      <p class=\"my-1 text-white subtitulo\">Tabla de símbolos</p>\n      <table class=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Tipo</th>\n            <th scope=\"col\">Contenido</th>\n            <th scope=\"col\">Ámbito</th>\n            <th class=\"text-center\" scope=\"col\">Fila</th>\n            <th class=\"text-center\" scope=\"col\">Columna</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of simbolos; let i = index\">\n            <th scope=\"row\">{{i+1}}</th>\n            <td>{{item.id}}</td>\n            <td>{{item.tipo}}</td>\n            <td>{{item.value}}</td>\n            <td>{{item.entorno}}</td>\n            <td class=\"text-center\">{{item.linea}}</td>\n            <td class=\"text-center\">{{item.columna}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr>\n\n  <div class=\"row my-5\">\n    <div class=\"col-12\">\n      <p class=\"mt-2 mb-1 text-white subtitulo\">Tabla de errores</p>\n      <table class=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Tipo</th>\n            <th scope=\"col\">Error</th>\n            <th scope=\"col\">Origen</th>\n            <th class=\"text-center\" scope=\"col\">Fila</th>\n            <th class=\"text-center\" scope=\"col\">Columna</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of errores; let i = index\">\n            <th scope=\"row\">{{i+1}}</th>\n            <td>{{item.tipo}}</td>\n            <td>{{item.error}}</td>\n            <td>{{item.origen}}</td>\n            <td class=\"text-center\">{{item.linea}}</td>\n            <td class=\"text-center\">{{item.columna}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</div>\n\n<footer class=\"text-center text-lg-start\">\n  <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n    <p class=\"foot my-0\">\n      © 2021 Grupo 23 - Organización de Lenguajes y Compiladores 2 - TytusX\n    </p>\n  </div>\n</footer>","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Logica(_expresion, _ambito) {\n    switch (_expresion.tipo) {\n        case Enum_1.Tipos.LOGICA_AND:\n            return and(_expresion.opIzq, _expresion.opDer, _ambito);\n        case Enum_1.Tipos.LOGICA_OR:\n            return or(_expresion.opIzq, _expresion.opDer, _ambito);\n        default:\n            break;\n    }\n}\nfunction and(_opIzq, _opDer, _ambito) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito);\n    var op2 = Expresion(_opDer, _ambito);\n    var tipo;\n}\nfunction or(_opIzq, _opDer, _ambito) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito);\n    var op2 = Expresion(_opDer, _ambito);\n    var tipo;\n}\nmodule.exports = Logica;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Codes = void 0;\nvar Codes;\n(function (Codes) {\n    Codes[Codes[\"UTF8\"] = 0] = \"UTF8\";\n    Codes[Codes[\"ASCII\"] = 1] = \"ASCII\";\n    Codes[Codes[\"ISO8859_1\"] = 2] = \"ISO8859_1\";\n    Codes[Codes[\"INVALID\"] = 3] = \"INVALID\";\n})(Codes = exports.Codes || (exports.Codes = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Objeto = void 0;\nvar Enum_1 = require(\"./Enum\");\nvar Objeto = /** @class */ (function () {\n    function Objeto() {\n    }\n    Objeto.prototype.newValue = function (_valor, _tipo, _linea, _columna) {\n        return {\n            valor: _valor,\n            tipo: _tipo,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newOperation = function (_opIzq, _opDer, _tipo, _linea, _columna) {\n        return {\n            opIzq: _opIzq,\n            opDer: _opDer,\n            tipo: _tipo,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newNodename = function (_nodename, _linea, _columna) {\n        return {\n            nodename: _nodename,\n            tipo: Enum_1.Tipos.NODENAME,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAxis = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_FROM_ROOT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newDoubleAxis = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_FROM_CURRENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newCurrent = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_CURRENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newParent = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_PARENT,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAttribute = function (_expresion, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            tipo: Enum_1.Tipos.SELECT_ATTRIBUTES,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newAxisObject = function (_axisname, _nodetest, _linea, _columna) {\n        return {\n            axisname: _axisname,\n            nodetest: _nodetest,\n            tipo: Enum_1.Tipos.SELECT_AXIS,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newPredicate = function (_condicion, _linea, _columna) {\n        return {\n            condicion: _condicion,\n            tipo: Enum_1.Tipos.PREDICATE,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    Objeto.prototype.newExpression = function (_expresion, _predicate, _linea, _columna) {\n        return {\n            expresion: _expresion,\n            predicate: _predicate,\n            tipo: Enum_1.Tipos.EXPRESION,\n            linea: _linea,\n            columna: _columna\n        };\n    };\n    return Objeto;\n}());\nexports.Objeto = Objeto;\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MonacoEditorModule, MONACO_PATH } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MonacoEditorModule\n  ],\n  providers: [\n    AppService,\n    {\n      provide: MONACO_PATH,\n      useValue: 'https://unpkg.com/monaco-editor@0.19.3/min/vs'\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xml_down = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,6],$V2=[1,11],$V3=[11,13],$V4=[1,16],$V5=[2,6,8],$V6=[1,25],$V7=[1,27],$V8=[1,28],$V9=[1,29],$Va=[1,26],$Vb=[2,8],$Vc=[8,9,13,18,19,21],$Vd=[9,11,13];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"tk_declaration_xml\":4,\"ROOT\":5,\"EOF\":6,\"XML\":7,\"tk_open\":8,\"tk_id\":9,\"ATTR\":10,\"tk_close\":11,\"CHILD\":12,\"tk_bar\":13,\"CONTENT\":14,\"ATTR_P\":15,\"tk_equal\":16,\"TK_ATTR\":17,\"tk_attribute_d\":18,\"tk_attribute_s\":19,\"PROP\":20,\"anything\":21,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"tk_declaration_xml\",6:\"EOF\",8:\"tk_open\",9:\"tk_id\",11:\"tk_close\",13:\"tk_bar\",16:\"tk_equal\",18:\"tk_attribute_d\",19:\"tk_attribute_s\",21:\"anything\"},\nproductions_: [0,[3,3],[3,2],[5,2],[5,1],[7,9],[7,9],[7,5],[7,8],[7,2],[7,2],[10,1],[10,0],[15,4],[15,3],[17,1],[17,1],[12,2],[12,1],[14,2],[14,1],[20,1],[20,1],[20,1],[20,1],[20,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\t\tencoding = new Encoding($$[$0-2]);\n\t\tif (encoding.encoding === encoding.codes.INVALID ) {\n\t\t\terrors.push({ tipo: \"Léxico\", error: \"La codificación del XML no es válida.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors };\n\t\t}\n\t\tast = { ast: $$[$0-1], encoding: encoding,  errors: errors };\n\t\terrors = [];\n\t\treturn ast;\n\t\nbreak;\ncase 2:\n errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors }; \nbreak;\ncase 3:\n if ($$[$0-1]!==null) { $$[$0].push($$[$0-1]); this.$=$$[$0]; } else { this.$=null; } \nbreak;\ncase 4: case 18:\n if ($$[$0]!==null) { this.$=[$$[$0]]; } else { this.$=[]; } \nbreak;\ncase 5:\n\n\t\t\ttag = new Element($$[$0-7], $$[$0-6], null, $$[$0-4], this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\ttag.childs.forEach(child => {\n\t\t\t\t\tchild.father = $$[$0-7];\n            \t});\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 6:\n\n\t\t\ttag = new Element($$[$0-7], $$[$0-6], $$[$0-4].val, null, this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 7:\n\n\t\t\ttag = new Element($$[$0-3], $$[$0-2], null, null, this._$.first_line, this._$.first_column+1, null);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-3].first_line, columna: _$[$0-3].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 8:\n\n\t\t\ttag = new Element($$[$0-6], $$[$0-5], null, null, this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 9: case 10:\n errors.push({ tipo: \"Sintáctico\", error: \"La etiqueta no fue declarada correctamente.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); this.$ = null; \nbreak;\ncase 11: case 15: case 16:\n this.$=$$[$0]; \nbreak;\ncase 12:\n this.$=null; \nbreak;\ncase 13:\n\n\t\tattr = new Atributo($$[$0-3], $$[$0-1], this._$.first_line, this._$.first_column+1);\n\t\t$$[$0].push(attr);\n\t\tthis.$=$$[$0];\n\t\nbreak;\ncase 14:\n\n\t\tattr = new Atributo($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1);\n\t\tthis.$=[attr];\n\t\nbreak;\ncase 17:\n if ($$[$0]!==null) { $$[$0-1].push($$[$0]); } this.$=$$[$0-1]; \nbreak;\ncase 19:\n\n\t\tif ($$[$0-1].tipo !== $$[$0].tipo) {\n\t\t\t$$[$0].val=$$[$0-1].val+$$[$0].val;\n\t\t}\n\t\telse {\n\t\t\t$$[$0].val=$$[$0-1].val+' '+$$[$0].val;\n\t\t}\n\t\tthis.$={tipo:$$[$0-1].tipo, val:$$[$0].val};\n\t\nbreak;\ncase 20:\n\n\t\tthis.$={tipo:$$[$0].tipo, val:$$[$0].val};\n\t\nbreak;\ncase 21:\n this.$={tipo:1, val:$$[$0]}; \nbreak;\ncase 22:\n this.$={tipo:2, val:$$[$0]}; \nbreak;\ncase 23:\n this.$={tipo:3, val:$$[$0]}; \nbreak;\ncase 24:\n this.$={tipo:4, val:$$[$0]}; \nbreak;\ncase 25:\n this.$={tipo:5, val:$$[$0]}; \nbreak;\n}\n},\ntable: [{2:[1,3],3:1,4:[1,2]},{1:[3]},{2:$V0,5:4,7:5,8:$V1},{6:[1,8]},{6:[1,9]},{2:$V0,5:10,6:[2,4],7:5,8:$V1},{9:$V2},{8:[1,13],11:[1,12]},{1:[2,2]},{1:[2,1]},{6:[2,3]},o($V3,[2,12],{10:14,15:15,9:$V4}),o($V5,[2,9]),o($V5,[2,10]),{11:[1,17],13:[1,18]},o($V3,[2,11]),{16:[1,19]},{2:$V0,7:23,8:[1,22],9:$V6,12:20,13:$V7,14:21,18:$V8,19:$V9,20:24,21:$Va},{11:[1,30]},{17:31,18:[1,32],19:[1,33]},{2:$V0,7:35,8:[1,34]},{8:[1,36]},{9:$V2,13:[1,37]},o($Vb,[2,18]),{8:[2,20],9:$V6,13:$V7,14:38,18:$V8,19:$V9,20:24,21:$Va},o($Vc,[2,21]),o($Vc,[2,22]),o($Vc,[2,23]),o($Vc,[2,24]),o($Vc,[2,25]),o($V5,[2,7]),o($V3,[2,14],{15:39,9:$V4}),o($Vd,[2,15]),o($Vd,[2,16]),{9:$V2,13:[1,40]},o($Vb,[2,17]),{13:[1,41]},{9:[1,42]},{8:[2,19]},o($V3,[2,13]),{9:[1,43]},{9:[1,44]},{11:[1,45]},{11:[1,46]},{11:[1,47]},o($V5,$Vb),o($V5,[2,5]),o($V5,[2,6])],\ndefaultActions: {8:[2,2],9:[2,1],10:[2,3],38:[2,19]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\tvar attribute = '';\n\tvar errors = [];\n\n\tconst { Atributo } = require('../model/xml/Atributo');\n\tconst { Element } = require('../model/xml/Element');\n\tconst { Encoding } = require('../model/xml/Encoding/Encoding');\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// MultiLineComment\nbreak;\ncase 2:return 4\nbreak;\ncase 3:return 8\nbreak;\ncase 4:return 11\nbreak;\ncase 5:return 13\nbreak;\ncase 6:return 16\nbreak;\ncase 7:return 9\nbreak;\ncase 8: attribute = ''; this.begin(\"string_doubleq\"); \nbreak;\ncase 9: attribute += yy_.yytext; \nbreak;\ncase 10: attribute += \"\\\"\"; \nbreak;\ncase 11: attribute += \"\\n\"; \nbreak;\ncase 12: attribute += \" \";  \nbreak;\ncase 13: attribute += \"\\t\"; \nbreak;\ncase 14: attribute += \"\\\\\"; \nbreak;\ncase 15: attribute += \"\\'\"; \nbreak;\ncase 16: attribute += \"\\r\"; \nbreak;\ncase 17: yy_.yytext = attribute; this.popState(); return 18; \nbreak;\ncase 18: attribute = ''; this.begin(\"string_singleq\"); \nbreak;\ncase 19: attribute += yy_.yytext; \nbreak;\ncase 20: attribute += \"\\\"\"; \nbreak;\ncase 21: attribute += \"\\n\"; \nbreak;\ncase 22: attribute += \" \";  \nbreak;\ncase 23: attribute += \"\\t\"; \nbreak;\ncase 24: attribute += \"\\\\\"; \nbreak;\ncase 25: attribute += \"\\'\"; \nbreak;\ncase 26: attribute += \"\\r\"; \nbreak;\ncase 27: yy_.yytext = attribute; this.popState(); return 19; \nbreak;\ncase 28:return 6\nbreak;\ncase 29:return 21\nbreak;\ncase 30: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:['])/i,/^(?:[^'\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:['])/i,/^(?:$)/i,/^(?:[^><]+)/i,/^(?:.)/i],\nconditions: {\"string_singleq\":{\"rules\":[19,20,21,22,23,24,25,26,27],\"inclusive\":false},\"string_doubleq\":{\"rules\":[9,10,11,12,13,14,15,16,17],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,18,28,29,30],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xml_down;\nexports.Parser = xml_down.Parser;\nexports.parse = function () { return xml_down.parse.apply(xml_down, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","\"use strict\";\nvar Enum_1 = require(\"../../../model/xpath/Enum\");\nfunction Expresion(_expresion, _ambito, _contexto) {\n    console.log(_expresion, \"EXPRESIOON\");\n    var tipo = _expresion.tipo;\n    if (tipo === Enum_1.Tipos.NODENAME) {\n        return { valor: _expresion.nodename, tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.STRING || tipo === Enum_1.Tipos.NUMBER) {\n        return _expresion;\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_CURRENT) {\n        return { valor: \".\", tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_PARENT) {\n        return { valor: \"..\", tipo: Enum_1.Tipos.ELEMENTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.SELECT_ATTRIBUTES) {\n        var valor = { id: _expresion.expresion, tipo: \"@\" }; // Se podría quitar\n        return { valor: valor, tipo: Enum_1.Tipos.ATRIBUTOS, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.ASTERISCO) {\n        return { valor: \"*\", tipo: Enum_1.Tipos.ASTERISCO, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_NODE) {\n        return { valor: \"node()\", tipo: Enum_1.Tipos.FUNCION_NODE, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_LAST) {\n        return { valor: \"last()\", tipo: Enum_1.Tipos.FUNCION_LAST, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    else if (tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        return { valor: \"position()\", tipo: Enum_1.Tipos.FUNCION_POSITION, linea: _expresion.linea, columna: _expresion.columna };\n    }\n    if (tipo === Enum_1.Tipos.EXPRESION) {\n        return Expresion(_expresion.expresion, _ambito, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.OPERACION_SUMA || tipo === Enum_1.Tipos.OPERACION_RESTA || tipo === Enum_1.Tipos.OPERACION_MULTIPLICACION\n        || tipo === Enum_1.Tipos.OPERACION_DIVISION || tipo === Enum_1.Tipos.OPERACION_MODULO || tipo === Enum_1.Tipos.OPERACION_NEGACION_UNARIA) {\n        var Aritmetica = require(\"./Operators/Aritmetica\");\n        return Aritmetica(_expresion, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.RELACIONAL_MAYOR || tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL\n        || tipo === Enum_1.Tipos.RELACIONAL_MENOR || tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL\n        || tipo === Enum_1.Tipos.RELACIONAL_IGUAL || tipo === Enum_1.Tipos.RELACIONAL_DIFERENTE) {\n        var Relacional = require(\"./Operators/Relacional\");\n        return Relacional(_expresion, _contexto);\n    }\n    else if (tipo === Enum_1.Tipos.LOGICA_AND || tipo === Enum_1.Tipos.LOGICA_OR) {\n        var Logica = require(\"./Operators/Logica\");\n        return Logica(_expresion, _contexto);\n    }\n    else {\n        console.log(_expresion, \"SSSSSSSS\");\n        return { err: \"Error: Expresi\\u00F3n no procesada.\\n\", linea: _expresion.linea, columna: _expresion.columna };\n    }\n}\nmodule.exports = Expresion;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar Bloque_1 = __importDefault(require(\"../controller/xpath/Instruccion/Bloque\"));\nvar Ambito_1 = require(\"../model/xml/Ambito/Ambito\");\nvar Global_1 = require(\"../model/xml/Ambito/Global\");\nfunction compile(req) {\n    try {\n        // Datos de la petición desde Angular\n        var xml = req.xml;\n        var xPath = req.query;\n        var grammar_selected = req.grammar;\n        // Gramáticas a usarse según la selección: 1=ascendente, 2=descendente\n        var parser_xml = void 0, parser_xPath = void 0;\n        switch (grammar_selected) {\n            case 1:\n                parser_xml = require('../analyzers/xml_up');\n                parser_xPath = require('../analyzers/xpath_up');\n                break;\n            case 2:\n                parser_xml = require('../analyzers/xml_down');\n                parser_xPath = \"require('../analyzers/xpath_down);\";\n                break;\n        }\n        // Análisis de XML\n        var xml_ast = parser_xml.parse(xml);\n        if (xml_ast === true || xml_ast.errors.length > 0 || xml_ast.ast === null) {\n            var output_1 = {\n                arreglo_simbolos: [],\n                arreglo_errores: (xml_ast === true ? [{ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: 1, columna: 1 }] : xml_ast.errors),\n                output: \"El documento XML contiene errores para analizar.\\nIntente de nuevo.\"\n            };\n            return output_1;\n        }\n        var xml_parse = xml_ast.ast;\n        var global_1 = new Ambito_1.Ambito(null, \"global\");\n        var cadena = new Global_1.Global(xml_parse, global_1);\n        var simbolos = cadena.ambito.getArraySymbols();\n        // Análisis de XPath\n        var xPath_ast = parser_xPath.parse(xPath);\n        console.log(xPath_ast, 99);\n        if (xPath_ast === true || xPath_ast.errors.length > 0 || xPath_ast.ast === null) {\n            var output_2 = {\n                arreglo_simbolos: [],\n                arreglo_errores: (xPath_ast === true ? [{ tipo: \"Sintáctico\", error: \"Sintaxis errónea de la consulta.\", origen: \"XPath\", linea: 1, columna: 1 }] : xml_ast.errors),\n                output: \"La consulta contiene errores para analizar.\\nIntente de nuevo.\"\n            };\n            return output_2;\n        }\n        var xPath_parse = xPath_ast.ast;\n        // console.log(xPath_parse, 88)\n        var bloque = Bloque_1.default(xPath_parse, cadena.ambito);\n        console.log(bloque, 88);\n        console.log(\"Salida:\", xPath_parse);\n        var error = [];\n        if (bloque.err) {\n            error.push({ error: bloque.err, tipo: \"Semántico\", origen: \"XPath\", linea: bloque.linea, columna: bloque.columna });\n        }\n        var output = {\n            arreglo_simbolos: simbolos,\n            arreglo_errores: error,\n            output: bloque.cadena ? bloque.cadena : bloque.err\n        };\n        return output;\n    }\n    catch (error) {\n        console.log(error);\n        var output = {\n            arreglo_simbolos: [],\n            arreglo_errores: [{ tipo: \"Desconocido\", error: \"Error en tiempo de ejecución.\", origen: \"\", linea: \"\", columna: \"\" }],\n            output: String(error)\n        };\n        return output;\n    }\n}\nmodule.exports = { compile: compile };\n","\"use strict\";\nvar Ambito_1 = require(\"./Ambito\");\nfunction exec(_expresiones, _ambito) {\n    _expresiones.forEach(function (element) {\n        if (element.childs) {\n            var nuevoAmbito = new Ambito_1.Ambito(_ambito, \"hijo\");\n            exec(element.childs, nuevoAmbito);\n        }\n        _ambito.addSimbolo(element);\n    });\n}\nmodule.exports = { exec: exec };\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xml_up = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,6],$V2=[2,6,8],$V3=[1,11],$V4=[11,13],$V5=[1,26],$V6=[1,28],$V7=[1,29],$V8=[1,30],$V9=[1,27],$Va=[1,34],$Vb=[1,35],$Vc=[2,8],$Vd=[8,9,13,18,19,21],$Ve=[9,11,13];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"tk_declaration_xml\":4,\"ROOT\":5,\"EOF\":6,\"XML\":7,\"tk_open\":8,\"tk_id\":9,\"ATTR\":10,\"tk_close\":11,\"CHILD\":12,\"tk_bar\":13,\"CONTENT\":14,\"ATTR_P\":15,\"tk_equal\":16,\"TK_ATTR\":17,\"tk_attribute_d\":18,\"tk_attribute_s\":19,\"PROP\":20,\"anything\":21,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"tk_declaration_xml\",6:\"EOF\",8:\"tk_open\",9:\"tk_id\",11:\"tk_close\",13:\"tk_bar\",16:\"tk_equal\",18:\"tk_attribute_d\",19:\"tk_attribute_s\",21:\"anything\"},\nproductions_: [0,[3,3],[3,2],[5,2],[5,1],[7,9],[7,9],[7,5],[7,8],[7,2],[7,2],[10,1],[10,0],[15,4],[15,3],[17,1],[17,1],[12,2],[12,1],[14,2],[14,1],[20,1],[20,1],[20,1],[20,1],[20,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n\t\tencoding = new Encoding($$[$0-2]);\n\t\tif (encoding.encoding === encoding.codes.INVALID ) {\n\t\t\terrors.push({ tipo: \"Léxico\", error: \"La codificación del XML no es válida.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors };\n\t\t}\n\t\tast = { ast: $$[$0-1], encoding: encoding,  errors: errors };\n\t\terrors = [];\n\t\treturn ast;\n\t\nbreak;\ncase 2:\n errors.push({ tipo: \"Sintáctico\", error: \"Sintaxis errónea del documento XML.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); return { ast: null, errors: errors }; \nbreak;\ncase 3:\n if ($$[$0]!==null) { $$[$0-1].push($$[$0]); this.$=$$[$0-1]; } else { this.$=null; } \nbreak;\ncase 4: case 18:\n if ($$[$0]!==null) { this.$=[$$[$0]]; } else { this.$=[]; } \nbreak;\ncase 5:\n\n\t\t\ttag = new Element($$[$0-7], $$[$0-6], null, $$[$0-4], this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\ttag.childs.forEach(child => {\n\t\t\t\t\tchild.father = {id: $$[$0-7], line: tag.line, column: tag.column};\n            \t});\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 6:\n\n\t\t\ttag = new Element($$[$0-7], $$[$0-6], $$[$0-4].val, null, this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 7:\n\n\t\t\ttag = new Element($$[$0-3], $$[$0-2], null, null, this._$.first_line, this._$.first_column+1, null);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-3].first_line, columna: _$[$0-3].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 8:\n\n\t\t\ttag = new Element($$[$0-6], $$[$0-5], null, null, this._$.first_line, this._$.first_column+1, $$[$0-1]);\n            hasConflict = tag.verificateNames();\n\t\t\tif (hasConflict === \"\") {\n\t\t\t\tthis.$ = tag;\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrors.push({ tipo: \"Semántico\", error: hasConflict, origen: \"XML\", linea: _$[$0-1].first_line, columna: _$[$0-1].first_column+1 });\n\t\t\t\tthis.$ = null;\n\t\t\t}\n\t\t\nbreak;\ncase 9: case 10:\n errors.push({ tipo: \"Sintáctico\", error: \"La etiqueta no fue declarada correctamente.\", origen: \"XML\", linea: this._$.first_line, columna: this._$.first_column+1 }); this.$ = null; \nbreak;\ncase 11: case 15: case 16:\n this.$=$$[$0]; \nbreak;\ncase 12:\n this.$=null; \nbreak;\ncase 13:\n\n\t\tattr = new Atributo($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1);\n\t\t$$[$0-3].push(attr);\n\t\tthis.$=$$[$0-3];\n\t\nbreak;\ncase 14:\n\n\t\tattr = new Atributo($$[$0-2], $$[$0], this._$.first_line, this._$.first_column+1);\n\t\tthis.$=[attr];\n\t\nbreak;\ncase 17:\n if ($$[$0]!==null) { $$[$0-1].push($$[$0]); } this.$=$$[$0-1]; \nbreak;\ncase 19:\n\n\t\tif ($$[$0].tipo !== $$[$0-1].tipo) {\n\t\t\t$$[$0-1].val+=$$[$0].val;\n\t\t}\n\t\telse {\n\t\t\t$$[$0-1].val+=' '+$$[$0].val;\n\t\t}\n\t\tthis.$={tipo:$$[$0].tipo, val:$$[$0-1].val};\n\t\nbreak;\ncase 20:\n\n\t\tthis.$={tipo:$$[$0].tipo, val:$$[$0].val};\n\t\nbreak;\ncase 21:\n this.$={tipo:1, val:$$[$0]}; \nbreak;\ncase 22:\n this.$={tipo:2, val:$$[$0]}; \nbreak;\ncase 23:\n this.$={tipo:3, val:$$[$0]}; \nbreak;\ncase 24:\n this.$={tipo:4, val:$$[$0]}; \nbreak;\ncase 25:\n this.$={tipo:5, val:$$[$0]}; \nbreak;\n}\n},\ntable: [{2:[1,3],3:1,4:[1,2]},{1:[3]},{2:$V0,5:4,7:5,8:$V1},{6:[1,8]},{2:$V0,6:[1,9],7:10,8:$V1},o($V2,[2,4]),{9:$V3},{8:[1,13],11:[1,12]},{1:[2,2]},{1:[2,1]},o($V2,[2,3]),o($V4,[2,12],{10:14,15:15,9:[1,16]}),o($V2,[2,9]),o($V2,[2,10]),{11:[1,17],13:[1,18]},o($V4,[2,11],{9:[1,19]}),{16:[1,20]},{2:$V0,7:24,8:[1,23],9:$V5,12:21,13:$V6,14:22,18:$V7,19:$V8,20:25,21:$V9},{11:[1,31]},{16:[1,32]},{17:33,18:$Va,19:$Vb},{2:$V0,7:37,8:[1,36]},{8:[1,38],9:$V5,13:$V6,18:$V7,19:$V8,20:39,21:$V9},{9:$V3,13:[1,40]},o($Vc,[2,18]),o($Vd,[2,20]),o($Vd,[2,21]),o($Vd,[2,22]),o($Vd,[2,23]),o($Vd,[2,24]),o($Vd,[2,25]),o($V2,[2,7]),{17:41,18:$Va,19:$Vb},o($Ve,[2,14]),o($Ve,[2,15]),o($Ve,[2,16]),{9:$V3,13:[1,42]},o($Vc,[2,17]),{13:[1,43]},o($Vd,[2,19]),{9:[1,44]},o($Ve,[2,13]),{9:[1,45]},{9:[1,46]},{11:[1,47]},{11:[1,48]},{11:[1,49]},o($V2,$Vc),o($V2,[2,5]),o($V2,[2,6])],\ndefaultActions: {8:[2,2],9:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\tvar attribute = '';\n\tvar errors = [];\n\n\tconst { Atributo } = require('../model/xml/Atributo');\n\tconst { Element } = require('../model/xml/Element');\n\tconst { Encoding } = require('../model/xml/Encoding/Encoding');\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:// Whitespace\nbreak;\ncase 1:// MultiLineComment\nbreak;\ncase 2:return 4\nbreak;\ncase 3:return 8\nbreak;\ncase 4:return 11\nbreak;\ncase 5:return 13\nbreak;\ncase 6:return 16\nbreak;\ncase 7:return 9\nbreak;\ncase 8: attribute = ''; this.begin(\"string_doubleq\"); \nbreak;\ncase 9: attribute += yy_.yytext; \nbreak;\ncase 10: attribute += \"\\\"\"; \nbreak;\ncase 11: attribute += \"\\n\"; \nbreak;\ncase 12: attribute += \" \";  \nbreak;\ncase 13: attribute += \"\\t\"; \nbreak;\ncase 14: attribute += \"\\\\\"; \nbreak;\ncase 15: attribute += \"\\'\"; \nbreak;\ncase 16: attribute += \"\\r\"; \nbreak;\ncase 17: yy_.yytext = attribute; this.popState(); return 18; \nbreak;\ncase 18: attribute = ''; this.begin(\"string_singleq\"); \nbreak;\ncase 19: attribute += yy_.yytext; \nbreak;\ncase 20: attribute += \"\\\"\"; \nbreak;\ncase 21: attribute += \"\\n\"; \nbreak;\ncase 22: attribute += \" \";  \nbreak;\ncase 23: attribute += \"\\t\"; \nbreak;\ncase 24: attribute += \"\\\\\"; \nbreak;\ncase 25: attribute += \"\\'\"; \nbreak;\ncase 26: attribute += \"\\r\"; \nbreak;\ncase 27: yy_.yytext = attribute; this.popState(); return 19; \nbreak;\ncase 28:return 6\nbreak;\ncase 29:return 21\nbreak;\ncase 30: errors.push({ tipo: \"Léxico\", error: yy_.yytext, origen: \"XML\", linea: yy_.yylloc.first_line, columna: yy_.yylloc.first_column+1 }); return 'INVALID'; \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:<!--[\\s\\S\\n]*?-->)/i,/^(?:<\\?xml[\\s\\S\\n]*?\\?>)/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:[\\w\\u00e1\\u00e9\\u00ed\\u00f3\\u00fa\\u00c1\\u00c9\\u00cd\\u00d3\\u00da\\u00f1\\u00d1]+)/i,/^(?:[\"])/i,/^(?:[^\"\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:[\"])/i,/^(?:['])/i,/^(?:[^'\\\\]+)/i,/^(?:\\\\\")/i,/^(?:\\\\n)/i,/^(?:\\s)/i,/^(?:\\\\t)/i,/^(?:\\\\\\\\)/i,/^(?:\\\\\\\\')/i,/^(?:\\\\r)/i,/^(?:['])/i,/^(?:$)/i,/^(?:[^><]+)/i,/^(?:.)/i],\nconditions: {\"string_singleq\":{\"rules\":[19,20,21,22,23,24,25,26,27],\"inclusive\":false},\"string_doubleq\":{\"rules\":[9,10,11,12,13,14,15,16,17],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,18,28,29,30],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xml_up;\nexports.Parser = xml_up.Parser;\nexports.parse = function () { return xml_up.parse.apply(xml_up, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Aritmetica(_expresion, _ambito) {\n    var operators = init(_expresion.opIzq, _expresion.opDer, _ambito, _expresion.tipo);\n    if (operators.err)\n        return operators;\n    switch (operators.tipo) {\n        case Enum_1.Tipos.OPERACION_SUMA:\n            return suma(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_RESTA:\n            return resta(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_MULTIPLICACION:\n            return multiplicacion(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_DIVISION:\n            return division(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_MODULO:\n            return modulo(operators.op1, operators.op2);\n        case Enum_1.Tipos.OPERACION_NEGACION_UNARIA:\n            return negacionUnaria(operators.op1);\n        default:\n            return null;\n    }\n}\nfunction init(_opIzq, _opDer, _ambito, _tipo) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito);\n    var op2 = Expresion(_opDer, _ambito);\n    var tipo = _tipo;\n    if (op1.tipo === Enum_1.Tipos.FUNCION_LAST && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = _ambito.length;\n        op2 = Number(op2.valor);\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_LAST) {\n        op1 = Number(op1.valor);\n        op2 = _ambito.length;\n    }\n    else if (op1.tipo === Enum_1.Tipos.FUNCION_POSITION && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = _ambito.length;\n        op2 = Number(op2.valor);\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        op1 = Number(op1.valor);\n        op2 = _ambito.length;\n    }\n    else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.NUMBER) {\n        op1 = Number(op1.valor);\n        op2 = Number(op2.valor);\n    }\n    else\n        return { err: \"Solamente se pueden operar aritméticamente valores numéricos.\\n\", linea: _opIzq.linea, columna: _opIzq.columna };\n    return { op1: op1, op2: op2, tipo: tipo };\n}\nfunction suma(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq + _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction resta(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq - _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction multiplicacion(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq * _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction division(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq / _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction modulo(_opIzq, _opDer) {\n    return {\n        valor: (_opIzq % _opDer),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nfunction negacionUnaria(_opIzq) {\n    return {\n        valor: (0 - _opIzq),\n        tipo: Enum_1.Tipos.NUMBER,\n    };\n}\nmodule.exports = Aritmetica;\n","\"use strict\";\nvar Enum_1 = require(\"../../../../model/xpath/Enum\");\nfunction Relacional(_expresion, _ambito) {\n    var operators = init(_expresion.opIzq, _expresion.opDer, _ambito, _expresion.tipo);\n    if (operators.err)\n        return operators;\n    switch (operators.tipo) {\n        case Enum_1.Tipos.RELACIONAL_MAYOR:\n            return mayor(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MAYORIGUAL:\n            return mayorigual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MENOR:\n            return menor(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_MENORIGUAL:\n            return menorigual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_IGUAL:\n            return igual(operators.op1, operators.op2);\n        case Enum_1.Tipos.RELACIONAL_DIFERENTE:\n            return diferente(operators.op1, operators.op2);\n        default:\n            return null;\n    }\n}\nfunction init(_opIzq, _opDer, _ambito, _tipo) {\n    var Expresion = require(\"../Expresion\");\n    var op1 = Expresion(_opIzq, _ambito);\n    var op2 = Expresion(_opDer, _ambito);\n    var tipo = _tipo;\n    if (tipo === Enum_1.Tipos.RELACIONAL_MAYOR || tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL ||\n        tipo === Enum_1.Tipos.RELACIONAL_MENOR || tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL) {\n        if (op1.tipo === Enum_1.Tipos.FUNCION_LAST && op2.tipo === Enum_1.Tipos.NUMBER) {\n            op1 = _ambito.length;\n            op2 = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_LAST) {\n            op2 = Number(op1.valor);\n            op1 = _ambito.length;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MENOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MENORIGUAL;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYORIGUAL;\n        }\n        else if (op1.tipo === Enum_1.Tipos.FUNCION_POSITION && op2.tipo === Enum_1.Tipos.NUMBER) {\n            op1 = _ambito.length;\n            op2 = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n            op2 = Number(op1.valor);\n            op1 = _ambito.length;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MENOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MAYORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MENORIGUAL;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENOR)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYOR;\n            if (_tipo === Enum_1.Tipos.RELACIONAL_MENORIGUAL)\n                tipo = Enum_1.Tipos.RELACIONAL_MAYORIGUAL;\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.NUMBER) {\n            op1 = Number(op1.valor);\n            op2 = Number(op2.valor);\n        }\n        else\n            return { err: \"Solamente se pueden comparar desigualdades entre valores numéricos.\\n\", linea: _opIzq.linea, columna: _opIzq.columna };\n    }\n    if (tipo === Enum_1.Tipos.RELACIONAL_IGUAL || tipo === Enum_1.Tipos.RELACIONAL_DIFERENTE) {\n        var opIzq = { valor: 0, tipo: op1.tipo };\n        var opDer = { valor: 0, tipo: op2.tipo };\n        if (op1.tipo === Enum_1.Tipos.FUNCION_LAST && op2.tipo === Enum_1.Tipos.NUMBER) {\n            opIzq.valor = _ambito.length;\n            opDer.valor = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_LAST) {\n            opIzq.valor = Number(op1.valor);\n            opDer.valor = _ambito.length;\n        }\n        else if (op1.tipo === Enum_1.Tipos.FUNCION_POSITION && op2.tipo === Enum_1.Tipos.NUMBER) {\n            opIzq.valor = _ambito.length;\n            opDer.valor = Number(op2.valor);\n        }\n        else if (op1.tipo === Enum_1.Tipos.NUMBER && op2.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n            opIzq.valor = Number(op1.valor);\n            opDer.valor = _ambito.length;\n        }\n        // else { // Falta\n        // op1 = { valor: op1, tipo: tipo };\n        // op2 = { valor: op2, tipo: tipo };\n        // }\n        return { op1: opIzq, op2: opDer, tipo: tipo };\n    }\n    return { op1: op1, op2: op2, tipo: tipo };\n}\nfunction mayor(_opIzq, _opDer) {\n    return {\n        valor: (_opDer + 1),\n        tipo: Enum_1.Tipos.RELACIONAL_MAYOR\n    };\n}\nfunction mayorigual(_opIzq, _opDer) {\n    return {\n        valor: _opDer,\n        tipo: Enum_1.Tipos.RELACIONAL_MAYORIGUAL\n    };\n}\nfunction menor(_opIzq, _opDer) {\n    return {\n        valor: (_opDer - 1),\n        tipo: Enum_1.Tipos.RELACIONAL_MENOR\n    };\n}\nfunction menorigual(_opIzq, _opDer) {\n    return {\n        valor: _opDer,\n        tipo: Enum_1.Tipos.RELACIONAL_MENORIGUAL\n    };\n}\nfunction igual(_opIzq, _opDer) {\n    console.log(_opIzq, 3333333);\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION || _opDer.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        return {\n            valor: ((_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION) ? (_opDer.valor) : (_opIzq.valor)),\n            tipo: Enum_1.Tipos.NUMBER\n        };\n    }\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_LAST || _opDer.tipo === Enum_1.Tipos.FUNCION_LAST) {\n        return {\n            valor: ((_opIzq.valor == _opDer.valor) ? (_opDer.valor) : (-1)),\n            tipo: Enum_1.Tipos.NUMBER\n        };\n    }\n    return {\n        valor: (_opIzq == _opDer),\n        tipo: Enum_1.Tipos.RELACIONAL_IGUAL\n    };\n}\nfunction diferente(_opIzq, _opDer) {\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION || _opDer.tipo === Enum_1.Tipos.FUNCION_POSITION) {\n        return {\n            valor: ((_opIzq.tipo === Enum_1.Tipos.FUNCION_POSITION) ? (_opDer.valor) : (_opIzq.valor)),\n            tipo: Enum_1.Tipos.EXCLUDE\n        };\n    }\n    if (_opIzq.tipo === Enum_1.Tipos.FUNCION_LAST || _opDer.tipo === Enum_1.Tipos.FUNCION_LAST) {\n        return {\n            valor: ((_opIzq.valor == _opDer.valor) ? (_opDer.valor) : (-1)),\n            tipo: Enum_1.Tipos.EXCLUDE\n        };\n    }\n    return {\n        valor: (_opIzq != _opDer),\n        tipo: Enum_1.Tipos.RELACIONAL_DIFERENTE\n    };\n}\nmodule.exports = Relacional;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Atributo = void 0;\nvar Atributo = /** @class */ (function () {\n    function Atributo(id, value, line, column) {\n        this.id = id;\n        this.value = value;\n        this.line = line;\n        this.column = column;\n    }\n    Object.defineProperty(Atributo.prototype, \"Cst\", {\n        get: function () {\n            return this.cst;\n        },\n        set: function (value) {\n            this.cst = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Atributo;\n}());\nexports.Atributo = Atributo;\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}